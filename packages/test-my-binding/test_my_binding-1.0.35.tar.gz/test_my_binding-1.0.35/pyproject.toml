[build-system]
requires = ["scikit-build-core >=0.10", "nanobind >=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "test_my_binding"
version = "1.0.35"
description = "CGAL wrapper for COMPAS."
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "tom van mele", email = "tom.v.mele@gmail.com" },
    { name = "Petras Vestartas", email = "petrasvestartas@gmail.com" },
]
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Development Status :: 4 - Beta",
]

dependencies = [
    "numpy",
    "compas",
]

[project.urls]
Homepage = "https://github.com/compas-dev/test_my_binding"

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py", "test.py"]
norecursedirs = [
    "external/*",
    "build/*",
    "dist/*",
    "*.egg-info",
    ".git",
    ".tox",
    ".env",
    ".pytest_cache",
    ".ruff_cache"
]
addopts = [
    "-ra",
    "--strict-markers",
    "--doctest-glob=*.rst",
    "--tb=short",
    "--import-mode=importlib",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ALLOW_UNICODE",
    "ALLOW_BYTES",
    "NUMBER",
]

[tool.scikit-build]
minimum-version = "build-system.requires"
build-dir = "build/{wheel_tag}"
wheel.py-api = "cp39"
cmake.version = ">=3.15"
cmake.build-type = "Release"

[tool.scikit-build.cmake.define]
CMAKE_POLICY_DEFAULT_CMP0135 = "NEW"

[tool.cibuildwheel]
build-verbosity = 3
build = ["cp39-manylinux_x86_64"]  # Only build Python 3.9 manylinux x86_64 wheels
test-command = """
pip install numpy compas pytest build &&  # Install test dependencies first
pip install {wheel} &&                   # Install the wheel
cd {project} &&                         # Change to package directory
python -m pytest tests/                 # Run tests
"""
build-frontend = "pip"
manylinux-x86_64-image = "manylinux2014"
skip = ["*-manylinux_i686", "*-musllinux_*"]  # Skip i686 and musllinux builds

[tool.cibuildwheel.linux]
before-build = [
    "rm -rf /project/build",  # Clean build directory
    "sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*",  # Fix repo URLs
    "sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*",
    "yum install -y epel-release",  # Add EPEL for OpenBLAS
    "yum install -y openblas-devel"  # Install OpenBLAS for numpy
]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"
environment.PATH = "/opt/rh/devtoolset-9/root/usr/bin:$PATH"  # Use manylinux's built-in C++ compiler

[tool.bumpversion]
current_version = "1.0.35"
message = "Bump version to {new_version}"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "src/test_my_binding/__init__.py"
search = "{current_version}"
replace = "{new_version}"

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "Unreleased"
replace = "[{new_version}] {now:%Y-%m-%d}"

[tool.black]
line-length = 179

[tool.ruff]
line-length = 179
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["I001"]
"tests/*" = ["I001"]
"tasks.py" = ["I001"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pycodestyle]
max-doc-length = 179

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"