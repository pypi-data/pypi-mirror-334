# =========================================================
# WARNING: This file is auto-generated. DO NOT EDIT MANUALLY
# Generated by: iprm (v0.1.0)
# Generated on: 2025-02-25 03:32:38 UTC
# Platform: Windows
# =========================================================

if (NOT WIN32)
	set(CMAKE_AUTOMOC ON)
	set(CMAKE_AUTORCC ON)
endif()


set(archive_output_files
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QCodeEditor.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QFramedTextAttribute.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QHighlightBlockRule.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QHighlightRule.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QLanguage.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QLineNumberArea.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QStyleSyntaxHighlighter.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QSyntaxStyle.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/completers/QPythonCompleter.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/highlighters/QPythonHighlighter.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/resources/qcodeeditor_resources.qrc
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QCodeEditor.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QFramedTextAttribute.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QLanguage.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QLineNumberArea.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QStyleSyntaxHighlighter.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QSyntaxStyle.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/completers/QPythonCompleter.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/highlighters/QPythonHighlighter.cpp
)

set(tp_K-Editor_md_generated_sources
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QCodeEditor.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QFramedTextAttribute.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QHighlightBlockRule.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QHighlightRule.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QLanguage.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QLineNumberArea.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QStyleSyntaxHighlighter.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/QSyntaxStyle.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/completers/QPythonCompleter.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public/highlighters/QPythonHighlighter.hpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/resources/qcodeeditor_resources.qrc
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QCodeEditor.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QFramedTextAttribute.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QLanguage.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QLineNumberArea.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QStyleSyntaxHighlighter.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/QSyntaxStyle.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/completers/QPythonCompleter.cpp
	${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/src/highlighters/QPythonHighlighter.cpp
)

add_library(tp_K-Editor_md_objects OBJECT)
target_sources(tp_K-Editor_md_objects
	PRIVATE
		${tp_K-Editor_md_generated_sources}
)
set_source_files_properties(${tp_K-Editor_md_generated_sources}
	PROPERTIES GENERATED TRUE
)

target_include_directories(tp_K-Editor_md_objects
	PUBLIC
		${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public
		${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/.

)

target_link_libraries(tp_K-Editor_md_objects
	PUBLIC
		tp_qt
)

add_library(tp_K-Editor_md STATIC)


if(WIN32)
get_target_property(target_sources tp_K-Editor_md_objects SOURCES)
foreach(source ${target_sources})
	if(source MATCHES "\.(h|hpp)$")
		get_filename_component(directory ${source} DIRECTORY)
		get_filename_component(filename ${source} NAME_WE)
		get_filename_component(ext ${source} EXT)
		file(RELATIVE_PATH rel_directory ${CMAKE_CURRENT_SOURCE_DIR} ${directory})
		set(moc_output "${CMAKE_CURRENT_BINARY_DIR}/${rel_directory}/moc_${filename}.cpp")
		set(moc_includes "$<LIST:TRANSFORM,$<TARGET_PROPERTY:tp_K-Editor_md_objects,INTERFACE_INCLUDE_DIRECTORIES>,PREPEND,-I>")
		add_custom_command(
			OUTPUT ${moc_output}
			COMMAND ${CMAKE_BINARY_DIR}/third_party/qt/Archive/bin/moc.exe
				${moc_includes}
				"${directory}/${filename}${ext}"
				-o ${moc_output}
			DEPENDS
				${source} tp_qt_unpack_qt_archive
			COMMAND_EXPAND_LISTS
		)
		target_sources(tp_K-Editor_md_objects PRIVATE ${moc_output})
	endif()
endforeach()

get_target_property(target_sources tp_K-Editor_md_objects SOURCES)
foreach(source ${target_sources})
	if(source MATCHES "\.qrc$")
		get_filename_component(directory ${source} DIRECTORY)
		get_filename_component(filename ${source} NAME_WE)
		get_filename_component(ext ${source} EXT)
		file(RELATIVE_PATH rel_directory ${CMAKE_CURRENT_SOURCE_DIR} ${directory})
		set(rcc_output "${CMAKE_CURRENT_BINARY_DIR}/${rel_directory}/qrc_${filename}.cpp")
		add_custom_command(
			OUTPUT ${rcc_output}
			COMMAND ${CMAKE_BINARY_DIR}/third_party/qt/Archive/bin/rcc.exe
				--name ${filename}
				"${directory}/${filename}${ext}"
				-o ${rcc_output}
			DEPENDS
				${source} tp_qt_unpack_qt_archive
		)
		target_sources(tp_K-Editor_md_objects PRIVATE ${rcc_output})
	endif()
endforeach()

set_target_properties(tp_K-Editor_md PROPERTIES
	MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>DLL"
)
endif()
set(extract_dir "${CMAKE_CURRENT_BINARY_DIR}/Archive")
set(archive_file "${CMAKE_CURRENT_SOURCE_DIR}/src/K-Editor.tar.gz")
set(sentinel_file ${extract_dir}/tp_K-Editor_md_unpack_archive_unpack_archive.sentinel)

add_custom_command(
		OUTPUT
		${sentinel_file}
		${archive_output_files}
		DEPENDS ${archive_file}
		COMMAND ${CMAKE_COMMAND} -E make_directory ${extract_dir}
		COMMAND ${CMAKE_COMMAND} -E tar xzf ${archive_file}
		COMMENT "Unpacking ${archive_file} to ${extract_dir}"
		COMMAND git apply ${CMAKE_CURRENT_SOURCE_DIR}/initial_iprm_modifications.patch
		COMMENT "Patching 'initial_iprm_modifications.patch' to ${extract_dir}"
		COMMAND ${CMAKE_COMMAND} -E touch ${sentinel_file}
		WORKING_DIRECTORY ${extract_dir}
		VERBATIM
		COMMAND_EXPAND_LISTS
)

add_custom_target(tp_K-Editor_md_unpack_archive DEPENDS ${sentinel_file})

target_sources(tp_K-Editor_md
		PRIVATE
		$<TARGET_OBJECTS:tp_K-Editor_md_objects>
)
target_link_libraries(tp_K-Editor_md
	PUBLIC
		tp_qt
)

add_dependencies(tp_K-Editor_md
		tp_K-Editor_md_unpack_archive
)


target_include_directories(tp_K-Editor_md
	PUBLIC
		${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/public
		${CMAKE_CURRENT_BINARY_DIR}/Archive/lib/.

)
