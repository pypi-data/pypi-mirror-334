[project]
name = "hao"
description = "conf, logs, namespace, etc"
authors = [{name = "orctom", email = "orctom@gmail.com"}]
readme = "README.md"
license = {file = "LICENSE"}
dynamic = ["version"]
classifiers = [
    'Intended Audience :: Developers',
]
requires-python = ">=3.8"
dependencies = [
    "PyYAML",
    "requests",
    "charset-normalizer",
    "dateparser",
    "regex",
    "tqdm",
    "decorator",
    "urllib3>=1.26.5",
    "minio",
]

[project.urls]
homepage = "https://github.com/orctom/hao"
repository = "https://github.com/orctom/hao"

[project.optional-dependencies]
es = [
    "elasticsearch<8",
]
mongo = [
    "pymongo",
]
kafka = [
    "kafka-python",
]
mysql = [
    "pymysql",
    "dbutils>=3.0.0",
]
pg = [
    "psycopg[binary]",
    "dbutils>=3.0.0",
]
rabbit = [
    "kombu",
]
redis = [
    "redis",
]
sql = [
    "sqlalchemy",
]
sys = [
    "psutil",
    "nvidia-ml-py",
]
dev = [
    "ruff",
    "pytest>=7.2.0",
    "elasticsearch<8",
    "pymongo",
    "kafka-python",
    "pymysql",
    "dbutils>=3.0.0",
    "psycopg[binary]",
    "kombu",
    "redis",
    "sqlalchemy",
    "jieba",
]

[build-system]
requires = ["flit_core>=3.8.0,<4"]
build-backend = "flit_core.buildapi"

[project.scripts]
h-s3-init = "hao.s3:init"
h-run = "hao.cli:run"
h-split = "hao.files:split_cli"
h-gpu = "hao.systems:get_gpu_info"
hf-download = "hao.hf:download"
h-vs = 'hao.vs:run'

[tool.pi]
license-expression = "Apache-2.0"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q -s"
testpaths = [
    "tests",
]

[tool.autopep8]
max_line_length = 135
in-place = true
recursive = true
aggressive = 3

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "data",
    ".vscode",
    ".ipynb_checkpoints",
]
line-length = 135
target-version = "py38"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
