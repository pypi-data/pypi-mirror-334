#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# (c) Copyright 2025 Sensirion AG, Switzerland
#
#     THIS FILE IS AUTOMATICALLY GENERATED!
#
# Generator:     sensirion-driver-generator 1.1.2
# Product:       sfa3x
# Model-Version: 1.1.0
#

import pytest
from sensirion_i2c_sfa3x.device import Sfa3xDevice


@pytest.fixture
def sensor(channel_provider):
    channel_provider.i2c_frequency = 100e3
    channel_provider.supply_voltage = 3.3
    with channel_provider:
        channel = channel_provider.get_channel(slave_address=0x5D,
                                               crc_parameters=(8, 0x31, 0xff, 0x0))
        yield Sfa3xDevice(channel)


def test_get_device_marking1(sensor):
    device_marking = sensor.get_device_marking()
    print(f"device_marking: {device_marking}; "
          )


def test_device_reset1(sensor):
    sensor.device_reset()


def test_start_continuous_measurement1(sensor):
    sensor.start_continuous_measurement()
    (hcho, humidity, temperature
     ) = sensor.read_measured_values()
    print(f"hcho: {hcho}; "
          f"humidity: {humidity}; "
          f"temperature: {temperature}; "
          )
    (hcho, humidity, temperature
     ) = sensor.read_measured_values_as_integers()
    print(f"hcho: {hcho}; "
          f"humidity: {humidity}; "
          f"temperature: {temperature}; "
          )
    sensor.stop_measurement()

