Metadata-Version: 2.3
Name: synnax-freighter
Version: 0.39.0
Summary: 
Author: Emiliano Bonilla
Author-email: ebonilla@synnaxlabs.com
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: alamos (>=0.39.0,<0.40.0)
Requires-Dist: msgpack (>=1.1.0,<2.0.0)
Requires-Dist: pydantic (>=1.10.21,<2.0.0)
Requires-Dist: urllib3 (>=2.3.0,<3.0.0)
Requires-Dist: websockets (>=13.1,<14.0)
Description-Content-Type: text/markdown

# Freighter Python Implementation

This is the Python implementation of the Freighter interface. It currently has
unary implementations in HTTP and a streaming implementation using WebSockets.

## Developing

Freighter uses Python 3.11 and [Poetry](https://python-poetry.org/) for dependency
management. To install Poetry and the freighter dependencies, run:

```
pip install poetry && poetry install
```

Then, to spawn a shell into the virtual environment, run:

```
poetry shell
```

## Testing

Unit tests are held in the `tests` directory. To run the test suite, you need a
running instance of the freighter integration server, which lives in the `integration`
directory of the `freighter` project. See the `README.md` in that directory for
instructions on how to run the integration server.

One that's down, spawn a shell into the virtual environment (see above) and then run:

```
pytest
```

