name: "Build package, publish to PyPI, create GitHub release"

on:
  push:
    tags:
      - "v*.*.*"


jobs:
  package_build_publish_release:
    environment: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate release notes
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: pyproject.toml
          args: --verbose --latest --strip header
        env:
          OUTPUT: RELEASE_NOTES.md
          GITHUB_REPO: {% raw %}${{ github.repository }}{% endraw %}

      - name: Print the release notes
        run: cat "{% raw %}${{ steps.git-cliff.outputs.changelog }}{% endraw %}"


      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.9"
          cache-dependency-glob: uv.lock
          enable-cache: true

      - name: Build package into dist/
        run: uv build

      - name: Publish package to PyPI
        run: uv publish -t {% raw %}${{ secrets.UV_PUBLISH_TOKEN }}{% endraw %}

      - name: Build package into dist/
        run: uv run nox -s audit

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        run: |
          gh release create {% raw %}${{ github.ref_name }} ./dist/* ./reports/* --notes-file ${{ steps.git-cliff.outputs.changelog }}{% endraw %}

      - name: Allow other workflows to trigger on release
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        run: |
          gh api repos/{{ github_repository_owner }}/{{ github_repository_name }}/dispatches \
            -f event_type=release_created_programatically
