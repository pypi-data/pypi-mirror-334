name: "Build and publish Docker image to docker.io and ghcr.io"

on:
  push:
    tags:
      - "v*.*.*"

{% if docker_io_enabled %}
env:
  REGISTRY: docker.io
  IMAGE_NAME: {{ docker_io_owner }}/{{ docker_io_image_name }}
{% endif %}

jobs:
  docker_image_build_publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


{% if docker_io_enabled %}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
{% raw %}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
{% endraw %}
{% endif %}

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
{% raw %}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
{% endraw %}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
{% if docker_io_enabled %}
{% raw %}
           images: |
            ${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
{% endraw %}
{% else %}
{% raw %}
          images: |
            ghcr.io/${{ github.repository }}
{% endraw %}
{% endif %}
{% raw %}
          tags: |
            # set latest tag for releases
            type=raw,value=latest
            # set semver tags from git tags (v1.2.3 -> 1.2.3, 1.2, 1)
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
{% endraw %}

{% raw %}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
{% endraw %}

{% if docker_io_enabled %}
{% raw %}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
{% endraw %}
{% endif %}
