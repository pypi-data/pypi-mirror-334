Metadata-Version: 2.2
Name: mavcom
Version: 1.1.8
Summary: A python package that creates a simplified programming interface for controlling Mavlink-capable flight controllers
Author-email: ArduCrow <arducrow@xee4c.33mail.com>
License: MIT License
        
        Copyright (c) 2023 Arducrow
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/ArduCrow/Mavcom
Keywords: mavlink,drone,drones,pymavlink,dronekit
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pymavlink
Requires-Dist: pyserial
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: pip-tools; extra == "dev"
Requires-Dist: pytest; extra == "dev"

# MAVCOM

### Mavlink Communicator

Provides a simplified python interface for controlling Mavlink capable flight controllers.

## Installation

```pip install mavcom```

## Basic Usage

This is an example of how to use Mavcom with a simulated vehicle. To connect to a flight controller, you will most likely use UART0, therefore the connection path will instead be "/dev/ttyS0".

Run SITL:

```sim_vehicle.py -v ArduCopter```

```python
from mavcom.mavcontrol import Mavcom
import time

vehicle = Mavcom(
    connection_path = "127.0.0.1:14550",
)

vehicle.start()

while not vehicle.ready:
    print("Waiting for vehicle to initialise...")
    time.sleep(1)

vehicle.motors_armed = True
while not vehicle.motors_armed:
    print("Waiting for motors to spin up...")
    time.sleep(1)
    
vehicle.flight_mode = "GUIDED"
vehicle.takeoff(alt=10)
```
