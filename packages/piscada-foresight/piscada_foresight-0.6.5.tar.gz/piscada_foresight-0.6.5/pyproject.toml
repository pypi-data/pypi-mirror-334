[project]
name = "piscada-foresight"
version = "0.6.5"
description = "Library for Piscada Foresight; Access knowledge-graph and timeseries data."
readme = "README.md"
authors = [
    { name = "Tim Jagenberg", email = "tim.jagenberg@piscada.com" },
    { name = "Filip Henrik Larsen", email = "filip.larsen@piscada.com" },
    { name = "Robin Vacher", email = "robin.vacher@piscada.com" },
]
requires-python = ">=3.12"
dependencies = [
    "authlib>=1.3.2",
    "gql[httpx]>=3.5.0",
    "jinja2==3.1.4",
    "pandas>=2.2.3",
    "pydantic>=2.9.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "ipykernel>=6.29.5",
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "ruff>=0.6.9",
    "matplotlib>=3.9.2",
    "bandit>=1.7.10",
    "mypy>=1.12.1",
    "pandas-stubs>=2.2.3.241009",
    "pytest-mock>=3.14.0",
]

[tool.mypy]
files = ["src", "tests"]
mypy_path = "src"
python_version = "3.12"
disable_error_code = "import-untyped"
exclude = "examples/.*"

[tool.ruff]
target-version = "py312"
exclude = ["examples/**"]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D203", "D213", "UP", "YTT", "DJ", "FAST", "AIR"]

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
addopts = "--cov=src/piscada_foresight --junit-xml=test-reports/pytest.xml --cov-report=xml:test-reports/coverage.xml --cov-report=html:test-reports/coverage-html"
