python-execo (2.8.2) unstable; urgency=medium

  * [execo_g5k] planning: fix exclusion of hosts/cluster additional constraint
  * [execo_g5k] api_utils: get_cluster_site() returns None for an unknown cluster instead of raising an exception (to be consistent with the rest of the api eg. get_host_cluster()
  * [execo, execo_g5k] fix escape sequences (in regexes or in strings)
  * [execo, execo_g5k] use pipes.quote or shlex.quote depending on py version
  * [doc] fix bug reporting url
  * [execo] utils: singleton_to_collection better None handling -> empty list
  * [execo_g5k] oar: add -t origin=execo to all jobs
  * [execo_g5k] remove oargridsub (but the examples in the user guide still need to be updated)

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Tue, 18 Mar 2025 13:09:22 +0100

python-execo (2.8.1) unstable; urgency=medium

  * [execo, execo_g5k, execi_engine] fix regexes thanks to python 3.12 improved handling of invalid escape sequences (https://docs.python.org/3/whatsnew/3.12.html#other-language-changes)
  * [execo_engine] add option for using pty to copy_outputs() useful for having working cmdline completion in ipdb when ipdb is spawned from a an execo script
  * [execo] Remote: fix corner case in process args handling fix passing None to a Remote's Process args stdout/err handler caused exception due to not handling special case in substitutions
  * [execo_g5k] Kaconsole: fix default prompt regex
  * [execo_g5k] Add Kaconsole to documentation

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Mon, 21 Oct 2024 09:22:37 +0200

python-execo (2.8) unstable; urgency=medium

  * |packaging] git-based version numbers compliant with recent distutils
  * [execo_g5k] api utils: fix APIConnection handling of http return codes
  * [execo_g5k] oar: adapt to changes in oarstat output format
  * fix again version naming for compliance with pep 440
  * [execo_g5k] g5k api cache: stored as json instead of pickle
  * [execo_g5k] compatibility with old and new oarstat output formats
  * [execo_g5k] support clusters names ending with numbers
  * [execo_g5k] canonical_host_name: handle interface, kavlan, ipv6 + support clusters names ending with numbers
  * [execo_g5k] get_host_longname: correct behaviour when site unknown
  * [execo_g5k] planning: add include_hosts flag to compute_slots()
  * [execo_g5k] planning: rewrite of get_jobs_specs to handle individual hosts
  * [packaging] remove v prefix from version for package naming
  * [execo] Process: lifecycle handlers in separate threads to avoid blocking + refactoring
  * [execo] Process: handle encoding (py3+) when writing to Process
  * [execo] Process: expect improvements - expect handler constructor takes process to be able to scan at init - scanning code factorized between stdin / stderr events and constructor - debug log - allow passing an explicit expect_output_handler (instead of the default   automatic thread local one) to the expect method for more control in   specific situations - protect from uninitialized thread local expect output handler
  * [execo_g5k] api_utils - canonical_host_name: fix for ifname != ethX (eg. fpgaX) - add get_host_interface
  * [execo_g5k] add get_cluster_queues, get_cluster_jobtypes
  * [execo_g5k] kadeploy: add KaconsoleProcess
  * [execo] Process: ExpectOutputHandler debug log
  * [remote] add substitutions to filenames in stdout/stderr handlers
  * [execo_g5k] KaConsoleProcess: add close()
  * [execo_g5k] planning: log level warn instead of detail for errors while getting data from oar db with sql
  * [execo_engine] add an optional separator to slugify
  * [execo] ExpectOutputHandler: improve debug logging
  * [execo] ProcessOuputHandler: rename member var
  * [execo] Get, Put: scp command as list and shell=False to (securely) handle spaces in path
  * [execo] full redesign of the expect implementation
  * [execo_g5k] fix KaConsoleProcess
  * [execo] conductor: fix eating 100% of one core iterating through high number of fd to close them

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Tue, 11 Jun 2024 16:00:16 +0200

python-execo (2.7) unstable; urgency=low

  * new upstream release:

    - [execo] bugfixes of ProcessOutputHandlers, with a slight API change, hence the switch to 2.7 serie

    - [documentation] update doc and examples to python3

    - [execo_g5k] no more allow_classic_ssh in examples (grid5000 doesn't have this job type anymore)

    - [documentation] various minor improvements and updates to examples

    - [execo_g5k] fix g5k API cache validity check

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Wed, 25 Jan 2023 10:58:00 +0100

python-execo (2.6.8) unstable; urgency=low

  * new upstream release:

    - [execo_g5k] get_oar_job_nodes use network_address instead of host (to prepare change in oar)

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Tue, 17 Nov 2021 09:53:00 +0100

python-execo (2.6.7) unstable; urgency=low

  * new upstream release:

    - [execo_g5k] planning: fix: add one seconds to job for oar resources to be really available

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Tue, 28 Sep 2021 10:15:00 +0200

python-execo (2.6.6) unstable; urgency=low

  * new upstream release:

    - [execo_g5k] charter: fix python3 compatibility

    - [execo_g5k] planning: fix find_free_slots when asking for kavlans

    - [execo_g5k] topology: updates for python3 and recent networkx

    - [execo_g5k] topology: handle channels, add ".<site>" to names of network equipments to avoid conflicts and various bugfixes

    - [execo_g5k] planning: oar api param must be literal

    - migration from inria forge to inria gitlab (source code, packages, website, add CI)

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Thu, 16 Sep 2021 09:50:00 +0200

python-execo (2.6.5) unstable; urgency=low

  * new upstream release:

    - bugfix: list of nodes returned by get_oar_job_nodes is always in the same order

    - bugfix: logging for python3.8

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Tue, 30 Mar 2021 11:16:00 +0100

python-execo (2.6.4) unstable; urgency=low

  * new upstream release:

    - misc python3 support fixes

    - basic documentation for wheezy compatible package build

    - remove some debug outputs

    - fix crash in processes conductor in some situations

    - improve/fix process stdout/stderr handlers

    - fix get_cluster_network_equipments

    - add a FAQ

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Mon, 03 Dec 2018 11:12:00 +0100

python-execo (2.6.3) unstable; urgency=low

  * new upstream release:

    - add vagrant vm + scripts for building debian wheezy compatible
    packages

    - major fixes and improvements in topology

    - fix various python 3 compatibility issues

    - engine: fix doc

    - various other fixes and improvements

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Wed, 29 Nov 2017 16:48:00 +0100

python-execo (2.6.2) unstable; urgency=low

  * new upstream release:

    - fix process output decoding for python3 <= 3.4

    - ProcessOutputHandler: fix line handling issue

    - switch from httplib2 to requests

    - fix optparse to argparse migration issue

    - remove unneeded warning in topology

    - fix and improve get_hosts_metric

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Fri, 9 Jun 2017 10:30:00 +0200

python-execo (2.6.1) unstable; urgency=low

  * new upstream release:

    - fix debian packaging for python2 / python3

    - make it packageable under wheezy

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Tue, 11 Oct 2016 16:22:00 +0200

python-execo (2.6) unstable; urgency=low

  * new upstream release:

    - Compatible with python 2.6, 2.7, >3.2. A few API have changed due to
    this major improvement.

    - Major optimization of Process output handling when dealing with
    outputs with lots of lines

    - execo_g5k.topology: fix lack of discrimination of links between
    different interfaces of a node and different linecards of a single
    network equip

    - execo_g5k: use nb_cores instead of smt_size to accommodate the
    change in g5k api

    - execo_g5k.api_utils: add get_hosts_metric() and remove
    get_g5k_measures()

    - execo_g5k.api_utils: get_oar_job_kavlan() now returns a list

    - execo_g5k api_utils add set_nodes_vlan

    - misc bugfixes and improvements

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Wed, 5 Oct 2016 15:25:00 +0200

python-execo (2.5.4) unstable; urgency=low

  * new upstream release:

    - execo_g5k.topology: fix wrong log template causing crash, log
    messages, documentation

    - execo_g5k.planning: handle oar queues in planning

    - execo_g5k.charter: fix bad sql results indexing causing crash

    - make execo / execo_g5k runnable with void environment (no $HOME)

    - execo.process: important optimization: bypass heavy string
    processing of iodebug logger when possible

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Tue, 3 May 2016 17:00:00 +0200

python-execo (2.5.3) unstable; urgency=low

  * new upstream release:

    - execo_g5k.topology: fix crash with empty linecards

    - execo_g5k.oarsub: fix oar command in corner cases

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Mon, 25 Jan 2016 15:31:00 +0200

python-execo (2.5.2) unstable; urgency=low

  * new upstream release:

    - bugfixes in timeouts handling

    - bugfixes and improvements in the auto force killing mechanism

    - planning: resources in maintenance mode

    - exact same behavior of api planning or postgresql planning

    - planning fix corner cases bugs with empty sites (no resources)

    - planning fix sites not responding handled correctly

    - planning add besteffort option

    - add filtering of g5k clusters on oar queues (allowing auto selection
    of the relevant clusters by default)

    - bugfixes in port forwarders (timeout handling)

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Tue, 1 Dec 2015 09:34:00 +0200

python-execo (2.5.1) unstable; urgency=low

  * new upstream release:

    - update execo_g5k to postgresql (due to g5k migration from mysql to
    postgres)

    - execo_engine.ParamSweeper: add batched versions of combinations API

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Wed, 30 Sep 2015 13:29:00 +0200

python-execo (2.5) unstable; urgency=low

  * new upstream release:

    - User-friendly way to write to processes stdin. Processes and Remotes
    can be used as file-like objects. Additionally, process stdin is not
    anymore closed by default.

    - Automatic ignoring of process errors when explicitly killing them

    - Add processes and actions context managers

    - Add special processes and actions for communicating with local or
    remote (through ssh) serial ports

    - Add expect-like syntax to processes and actions (for easy scripting
    of interactive local/remote/serial sessions)

    - The return of the revenge of the infamous keyword arguments

    - On-disk caching of most of the g5k api, for fast api requests

    - Add multigraph support to g5k topology

    - Add handling of g5k network equipments in api_utils

    - Internal taktuk interface bugfixes

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Wed, 02 Sep 2015 10:10:00 +0200

python-execo (2.4.3) unstable; urgency=low

  * new upstream bugfix release: again fix pip packaging

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Thu, 21 Nov 2014 08:48:00 +0100

python-execo (2.4.2) unstable; urgency=low

  * new upstream bugfix release: fix pip packaging

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Thu, 20 Nov 2014 14:50:00 +0100

python-execo (2.4) unstable; urgency=low

  * Initial debian packaging release

 -- Matthieu Imbert <matthieu.imbert@inria.fr>  Thu, 20 Nov 2014 10:46:00 +0100
