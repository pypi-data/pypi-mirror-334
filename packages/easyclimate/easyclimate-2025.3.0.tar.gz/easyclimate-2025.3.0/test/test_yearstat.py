"""
pytest for yearstat.py
"""

import pytest

import easyclimate as ecl
import numpy as np
import xarray as xr
from pathlib import Path
from .const_define import TEST_DATA_PATH

data_nino34_area = xr.open_dataset(
    str(Path(TEST_DATA_PATH, "test_input_nino34.nc"))
).sst


def test_calc_yearly_climatological_mean():
    result_data = ecl.calc_yearly_climatological_mean(data_nino34_area).data
    refer_data = np.array(
        [
            28.05561,
            27.54706,
            26.360346,
            26.331762,
            27.150057,
            28.361261,
            25.931389,
            26.22251,
            27.185822,
            27.675474,
            27.68206,
            27.405327,
            27.438723,
            26.833366,
            26.55396,
            28.280241,
            26.888123,
            25.850866,
            26.144049,
            26.782167,
            27.768991,
            27.336067,
            27.41667,
            27.152414,
            27.20459,
            26.508265,
            26.299393,
            27.408394,
            26.581076,
            26.203554,
            27.019026,
            26.81861,
            27.279343,
            28.620821,
            27.416452,
            26.947464,
            27.125938,
            27.583597,
            26.687197,
            26.497004,
            26.133987,
        ]
    )
    assert np.isclose(result_data, refer_data).all()


def test_calc_yearly_climatological_sum():
    result_data = ecl.calc_yearly_climatological_sum(data_nino34_area).data
    refer_data = np.array(
        [
            336.66733,
            330.56473,
            316.32416,
            315.98114,
            325.8007,
            340.33514,
            311.17667,
            314.6701,
            326.22986,
            332.10568,
            332.18472,
            328.86392,
            329.26468,
            322.0004,
            318.64752,
            339.36288,
            322.65747,
            310.2104,
            313.72858,
            321.38602,
            333.2279,
            328.0328,
            329.00003,
            325.82898,
            326.45508,
            318.09918,
            315.5927,
            328.90073,
            318.9729,
            314.44266,
            324.2283,
            321.8233,
            327.3521,
            343.44986,
            328.99744,
            323.36957,
            325.51126,
            331.00317,
            320.24637,
            317.96405,
            313.60785,
        ]
    )
    assert np.isclose(result_data, refer_data).all()


def test_calc_yearly_climatological_std():
    result_data = ecl.calc_yearly_climatological_std(data_nino34_area).data
    refer_data = np.array(
        [
            0.781642,
            1.447736,
            0.71981126,
            0.4682538,
            0.6436484,
            0.42396465,
            1.1429315,
            0.6836834,
            0.47439286,
            0.5162975,
            1.0556604,
            0.73062456,
            0.4938108,
            0.88939285,
            0.5717457,
            1.1294414,
            1.6210439,
            0.6984898,
            0.73770326,
            0.60698843,
            0.54717666,
            0.33623984,
            0.37495157,
            0.6960779,
            0.69846976,
            0.98992085,
            0.8155603,
            0.84391856,
            1.3736537,
            0.7953866,
            0.7212148,
            0.48427,
            0.654426,
            0.7627099,
            1.2827027,
            0.8893827,
            0.67814404,
            0.626694,
            0.9927236,
            0.7345214,
            0.4557853,
        ]
    )
    assert np.isclose(result_data, refer_data).all()


def test_calc_yearly_climatological_var():
    result_data = ecl.calc_yearly_climatological_var(data_nino34_area).data
    refer_data = np.array(
        [
            0.61096424,
            2.0959396,
            0.5181282,
            0.21926162,
            0.41428322,
            0.17974602,
            1.3062924,
            0.46742302,
            0.22504857,
            0.26656312,
            1.1144189,
            0.5338122,
            0.2438491,
            0.7910196,
            0.32689315,
            1.2756379,
            2.6277835,
            0.48788795,
            0.5442061,
            0.36843494,
            0.29940233,
            0.11305723,
            0.14058869,
            0.4845244,
            0.48786,
            0.9799433,
            0.66513854,
            0.71219856,
            1.8869243,
            0.6326399,
            0.5201508,
            0.23451744,
            0.42827338,
            0.5817264,
            1.6453263,
            0.79100156,
            0.4598793,
            0.3927454,
            0.98550004,
            0.53952163,
            0.20774025,
        ]
    )
    assert np.isclose(result_data, refer_data).all()


def test_calc_yearly_climatological_max():
    result_data = ecl.calc_yearly_climatological_max(data_nino34_area).data
    refer_data = np.array(
        [
            29.209,
            29.35432,
            27.386578,
            27.1092,
            27.72616,
            29.02186,
            27.318258,
            27.08392,
            28.05628,
            28.360598,
            29.13572,
            28.81692,
            28.03586,
            27.926918,
            27.36664,
            29.31066,
            29.099718,
            26.964699,
            27.11696,
            27.67564,
            28.42584,
            27.80502,
            28.050442,
            28.1996,
            27.905638,
            27.774899,
            27.185339,
            28.2901,
            28.358177,
            27.45816,
            27.95456,
            27.67382,
            28.30268,
            29.593298,
            29.163437,
            28.298698,
            27.842237,
            28.592398,
            28.339378,
            27.610699,
            26.92092,
        ]
    )
    assert np.isclose(result_data, refer_data).all()


def test_calc_yearly_climatological_min():
    result_data = ecl.calc_yearly_climatological_min(data_nino34_area).data
    refer_data = np.array(
        [
            26.69558,
            25.57518,
            24.9959,
            25.427319,
            25.7817,
            27.59936,
            24.26578,
            24.52396,
            26.54562,
            26.92286,
            26.330418,
            26.686317,
            26.584,
            25.563059,
            25.733839,
            25.954578,
            24.78018,
            24.89312,
            24.64976,
            25.73842,
            26.49118,
            26.84684,
            26.73786,
            25.88236,
            25.63848,
            24.96648,
            24.704678,
            25.538061,
            24.943438,
            24.92612,
            25.4802,
            26.151379,
            26.05032,
            27.102139,
            25.9505,
            25.785618,
            25.81622,
            26.694141,
            25.297081,
            25.570898,
            25.633379,
        ]
    )
    assert np.isclose(result_data, refer_data).all()
