# Library
library/*

# Outputs
outputs/
outputs/*
**/outputs/
**/outputs/*

# .env
.env
!template.env

# Python
.idea/
.vscode/
.venv*/
venv*/
.env*/
env*/
__pycache__/
.pytest_cache/
build/
dist/
.coverage*
htmlcov/
.tox/
docs/_build/
*.egg-info/

# Local .terraform directories
.terraform/
**/.terraform/*
src/.terraform/**

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
!template.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
**/.terraform.lock.hcl
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
