[tool.poetry]
name = "manas-ai"
version = "0.1.3"
description = "A framework for building LLM-powered applications with intelligent agents, task decomposition, and RAG"
authors = ["Gaurav Koley <gaurav@koley.in>"]
readme = "README.md"
packages = [
    {include = "core"},
    {include = "core/nodes"},
    {include = "core/providers"},
    {include = "core/vectorstores"},
    {include = "__init__.py"}
]
license = "MIT"  # Make sure this matches your actual license
repository = "https://github.com/arkokoley/manas"  # Update with your actual repository URL
keywords = ["llm", "agents", "rag", "ai", "nlp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.11"
asyncio = "^3.4.3"
typing-extensions = "^4.5.0"
tiktoken = "^0.5.2"
numpy = "^1.24.0"
aiohttp = "^3.9.1"
networkx = "^3.2.1"
openai = "^1.0.0"
transformers = "^4.30.0"
torch = "^2.0.0"
anthropic = "^0.3.0"
google-cloud-aiplatform = "^1.25.0"
faiss-cpu = "^1.7.0"
chromadb = "^0.4.0"
pillow = "^11.1.0"
google-generativeai = "^0.8.4"
pinecone = "^6.0.1"
pandas = "^2.2.3"
scipy = "^1.15.2"
aiofiles = "=22.1.0"  # Fixed version for gradio compatibility
langchain-community = "^0.3.18"
pydantic = ">=2.9.2,<2.10.0"  # Fixed version for unstructured-client
python-dotenv = ">=1.0.1,<2.0.0"  # Fixed version for pymilvus
anyio = ">=4.4.0,<5.0.0"  # Fixed version for langfuse
protobuf = ">=4.21.6,<5.0"  # Fixed version for grpcio-tools and opentelemetry-proto

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.23.5"
black = "^23.7.0"
isort = "^5.12.0"

[tool.poetry.extras]
openai = ["openai", "tiktoken"]
huggingface = ["transformers", "torch"]
anthropic = ["anthropic"]
vertexai = ["google-cloud-aiplatform"]
faiss = ["faiss-cpu"]  # Removed numpy since it's now a main dependency
faiss-gpu = ["faiss-gpu"]
chroma = ["chromadb"]
vector-stores = ["faiss-cpu", "chromadb"]
vector-stores-gpu = ["faiss-gpu", "chromadb"]
minimal = ["openai", "tiktoken", "faiss-cpu"]
all-cpu = ["openai", "transformers", "torch", "anthropic", "google-cloud-aiplatform", "faiss-cpu", "chromadb", "tiktoken"]
all-gpu = ["openai", "transformers", "torch", "anthropic", "google-cloud-aiplatform", "faiss-gpu", "chromadb", "tiktoken"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "strict"

[tool.pytest.ini_options]
addopts = "-v --strict-markers"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "llm: marks tests related to LLM functionality",
    "rag: marks tests related to RAG functionality",
    "agent: marks tests related to agent functionality",
    "asyncio: mark test functions as requiring asyncio"
]