<htsl>

<head>
  <title>Nodezator Manual</title>
</head>

<body>

<h1>Nodezator Manual</h1>

<p>Welcome to the nodezator manual. This guide is meant for Nodezator's users.</p>

<p>You may also want to take a look at the <a href="https://github.com/IndieSmiths/nodezator/blob/main/README.md">README</a> file of Nodezator's repository, since it showcases a lot of Nodezator's features and capabilities. Or you may want to <a href="https://gallery.nodezator.com">download example nodes</a>, like the ones used in the <a href="https://www.youtube.com/watch?v=GlQJvuU7Z_8">video presenting Nodezator</a>.</p>


<h2>Table of contents</h2>

<ol>

  <li><a href="ch-defining-your-first-node.htsl">Defining your first node</a>

    <ol>
      <li><a href="ch-defining-your-first-node.htsl#node-pack">A node pack and its purpose</a></li>
      <li><a href="ch-defining-your-first-node.htsl#category-folder">Categories within a node pack</a></li>
      <li><a href="ch-defining-your-first-node.htsl#script-folder">The script folder</a></li>
      <li><a href="ch-defining-your-first-node.htsl#defining-node">Defining the node</a></li>
      <li><a href="ch-defining-your-first-node.htsl#loading-testing-first-node">Loading and testing your first node</a></li>
      <li><a href="ch-defining-your-first-node.htsl#node-pack-anatomy">The anatomy of a node pack</a></li>
      <li><a href="ch-defining-your-first-node.htsl#sharing-resources-among-nodes">Sharing resources among your nodes</a></li>
      <li><a href="ch-defining-your-first-node.htsl#expanded-collapsed-callable-modes">Expanded, collapsed and callable mode for nodes</a></li>
    </ol>

  </li>

  <li><a href="ch-defining-viewer-nodes.htsl">Defining viewer nodes</a>

    <ol>
      <li><a href="ch-defining-viewer-nodes.htsl#returning-visual-beside-node">Returning a visual to be displayed beside your node</a></li>
      <li><a href="ch-defining-viewer-nodes.htsl#returning-larger-visual">Returning a larger visual to be displayed in a Nodezator viewer</a></li>
      <li><a href="ch-defining-viewer-nodes.htsl#visualizing-text">Visualizing text</a></li>
      <li><a href="ch-defining-viewer-nodes.htsl#available-by-default">Viewer nodes available by default</a></li>
      <li><a href="ch-defining-viewer-nodes.htsl#in-graph-only-vs-full-visual">Brief note: in-graph only vs full visual</a></li>
      <li><a href="ch-defining-viewer-nodes.htsl#callable-mode-and-visuals">Callable mode and visuals</a></li>
    </ol>

  </li>

  <li><a href="ch-nodes-variable-parameters-custom-outputs.htsl">Nodes with variable parameters and custom outputs</a>

    <ol>
      <li><a href="ch-nodes-variable-parameters-custom-outputs.htsl#defining-variable-parameters">Defining variable parameters</a></li>
      <li><a href="ch-nodes-variable-parameters-custom-outputs.htsl#naming-output">Naming an output</a></li>
      <li><a href="ch-nodes-variable-parameters-custom-outputs.htsl#defining-node-more-output">Defining a node with more than one output</a></li>
    </ol>

  </li>

  <li><a href="ch-more-ways-define-nodes.htsl">More ways to define nodes</a>

    <ol>
      <li><a href="ch-more-ways-define-nodes.htsl#defining-node-existing-callable">Defining a node by importing an existing callable</a></li>
      <li><a href="ch-more-ways-define-nodes.htsl#incompatible-callables-custom-signatures">Incompatible callables and custom signatures</a></li>
      <li><a href="ch-more-ways-define-nodes.htsl#call-formatting">Call formatting for improving definitions and solving issues</a></li>
    </ol>

  </li>

  <li><a href="ch-loading-nodes.htsl">Loading your nodes</a>

    <ol>
      <li><a href="ch-loading-nodes.htsl#obtaining-node-packs-kinds">Obtaining node packs (and their different kinds)</a></li>
      <li><a href="ch-loading-nodes.htsl#loading-node-packs">Loading the node pack(s) you obtained</a></li>
      <li><a href="ch-loading-nodes.htsl#opening-file-external-source">Opening a file from an external source</a></li>
      <li><a href="ch-loading-nodes.htsl#other-possible-problems">Other possible problems</a></li>
    </ol>

  </li>

  <li><a href="ch-color-coding-inputs-outputs.htsl">Color-coding inputs and outputs</a>

    <ol>
      <li><a href="ch-color-coding-inputs-outputs.htsl#examples">Examples</a></li>
      <li><a href="ch-color-coding-inputs-outputs.htsl#types-dedicated-colors">Types with dedicated colors</a></li>
      <li><a href="ch-color-coding-inputs-outputs.htsl#color-coding-named-socket">Color-coding a named output socket</a></li>
      <li><a href="ch-color-coding-inputs-outputs.htsl#color-coding-multiple-sockets">Color-coding multiple output sockets</a></li>
    </ol>

  </li>

  <li><a href="ch-basic-way-define-widgets.htsl">Basic way to define widgets</a>

    <ol>
      <li><a href="ch-basic-way-define-widgets.htsl#default-holder">The default holder widget</a></li>
      <li><a href="ch-basic-way-define-widgets.htsl#check-button">The check button widget</a></li>
      <li><a href="ch-basic-way-define-widgets.htsl#string-entry">The string entry widget</a></li>
      <li><a href="ch-basic-way-define-widgets.htsl#int-float-entry">The intfloat entry widget</a></li>
      <li><a href="ch-basic-way-define-widgets.htsl#brief-comment">Brief comment on type hints</a></li>
    </ol>

  </li>

  <li><a href="ch-full-syntax-more-widgets.htsl">Full widget definition syntax and more widgets</a>

    <ol>
      <li><a href="ch-full-syntax-more-widgets.htsl#presenting-syntax">Presenting the full syntax</a></li>
      <li><a href="ch-full-syntax-more-widgets.htsl#text-display">The text display widget</a></li>
      <li><a href="ch-full-syntax-more-widgets.htsl#color-button">the color button widget</a></li>
      <li><a href="ch-full-syntax-more-widgets.htsl#revisiting-string-entry">Revisiting the string entry widget</a></li>
      <li><a href="ch-full-syntax-more-widgets.htsl#revisiting-int-float-entry">Revisiting the intfloat entry widget</a></li>
    </ol>

  </li>

  <li><a href="ch-widget-presets-more-widgets.htsl">Widget definition presets and more widgets</a>

    <ol>
      <li><a href="ch-widget-presets-more-widgets.htsl#presenting-presets">Presenting widget definition presets</a></li>
      <li><a href="ch-widget-presets-more-widgets.htsl#literal-entry">The literal entry widget</a></li>
      <li><a href="ch-widget-presets-more-widgets.htsl#literal-display">The literal display widget</a></li>
      <li><a href="ch-widget-presets-more-widgets.htsl#option-menu">The option menu widget</a></li>
      <li><a href="ch-widget-presets-more-widgets.htsl#option-tray">The option tray widget</a></li>
      <li><a href="ch-widget-presets-more-widgets.htsl#sorting-button">The sorting button widget</a></li>
    </ol>

  </li>

  <li><a href="ch-preview-widgets.htsl">Preview widgets</a>

    <ol>
      <li><a href="ch-preview-widgets.htsl#what-are-preview-widgets">What are preview widget?</a></li>
      <li><a href="ch-preview-widgets.htsl#path-preview">The path preview widget</a></li>
      <li><a href="ch-preview-widgets.htsl#text-preview">The text preview widget</a></li>
      <li><a href="ch-preview-widgets.htsl#audio-preview">The audio preview widget</a></li>
      <li><a href="ch-preview-widgets.htsl#image-preview">The image preview widget</a></li>
      <li><a href="ch-preview-widgets.htsl#video-preview">The video preview widget</a></li>
      <li><a href="ch-preview-widgets.htsl#font-preview">The font preview widget</a></li>
    </ol>

  </li>

  <li><a href="ch-other-objects.htsl">Other objects</a>

    <ol>
      <li><a href="ch-other-objects.htsl#text-blocks">Text blocks</a></li>
      <li><a href="ch-other-objects.htsl#app-defined-nodes">App-defined nodes</a>
          <ol>
              <li><a href="ch-other-objects.htsl#operation-nodes">Operation nodes</a></li>
              <li><a href="ch-other-objects.htsl#builtin-nodes">Built-in nodes</a></li>
              <li><a href="ch-other-objects.htsl#standard-library-nodes">Standard library nodes</a></li>
              <li><a href="ch-other-objects.htsl#snippet-nodes">Snippet nodes</a></li>
              <li><a href="ch-other-objects.htsl#data-nodes">Data nodes</a></li>
              <li><a href="ch-other-objects.htsl#redirect-nodes">Redirect nodes</a></li>
              <li><a href="ch-other-objects.htsl#general-viewer-nodes">General viewer nodes</a></li>
              <li><a href="ch-other-objects.htsl#pygame-ce-nodes">Pygame-ce nodes</a></li>
          </ol>
      </li>
      <li><a href="ch-other-objects.htsl#relationship-data-redirect-nodes">Relationship between data nodes and redirect nodes</a></li>
      <li><a href="ch-other-objects.htsl#callable-mode-app-defined-nodes">Callable mode in app-defined nodes</a></li>
    </ol>

  </li>

  <li><a href="ch-distributing-nodes.htsl">Distributing your nodes</a>

    <ol>
      <li><a href="ch-distributing-nodes.htsl#distributing-as-local">Distributing as a local node pack</a></li>
      <li><a href="ch-distributing-nodes.htsl#distributing-as-installable">Distributing as an installable node pack</a></li>
      <li><a href="ch-distributing-nodes.htsl#summary-distribution-methods">Summary of distribution methods</a></li>
      <li><a href="ch-distributing-nodes.htsl#combining-local-installable">Combining local and installable distributions</a></li>
      <li><a href="ch-distributing-nodes.htsl#template-installable-pack">Template to package and publish an installable node pack</a></li>
    </ol>

  </li>

  <li><a href="ch-conditional-execution.htsl">Conditional execution (branching) in Nodezator</a>

    <ol>
      <li><a href="ch-conditional-execution.htsl#analyzing-problem-presenting-solution">Analyzing a problem and presenting a solution</a></li>
      <li><a href="ch-conditional-execution.htsl#solution-efficiency">Quick note on the efficiency of our solution</a></li>
      <li><a href="ch-conditional-execution.htsl#extending-problem-solution">Extending the problem and our solution</a></li>
      <li><a href="ch-conditional-execution.htsl#dict-based-simplification">A dict-based simplification</a></li>
      <li><a href="ch-conditional-execution.htsl#different-signatures-arguments">Different signatures and arguments</a></li>
      <li><a href="ch-conditional-execution.htsl#crucial-missing-piece-subgraphs">A crucial missing piece: subgraphs/group nodes</a></li>
      <li><a href="ch-conditional-execution.htsl#other-missing-pieces">Other missing pieces</a></li>
    </ol>

  </li>

  <li><a href="ch-looping.htsl">Looping/iterating in Nodezator</a>

    <ol>
      <li><a href="ch-looping.htsl#looping-with-functions">Looping with functions</a></li>
      <li><a href="ch-looping.htsl#map-for-item-in-obj-pass">map() and for_item_in_obj_pass()</a></li>
      <li><a href="ch-looping.htsl#other-nodes">Other nodes</a></li>
      <li><a href="ch-looping.htsl#crucial-missing-piece-subgraphs">A crucial missing piece: subgraphs/group nodes</a></li>
    </ol>

  </li>

  <li><a href="ch-viewer-nodes-with-custom-visualization-loops.htsl">Defining a custom visualization loop for viewer nodes</a>

    <ol>
      <li><a href="ch-viewer-nodes-with-custom-visualization-loops.htsl#defining-node">Defining the node</a></li>
      <li><a href="ch-viewer-nodes-with-custom-visualization-loops.htsl#dismissing-execution-time-tracking">Dismissing execution time tracking</a></li>
      <li><a href="ch-viewer-nodes-with-custom-visualization-loops.htsl#callable-mode-custom-visualization-loops">Callable mode in nodes with custom visualization loops</a></li>
    </ol>

  </li>

  <li><a href="ch-defining-complex-viewer-nodes.htsl">Defining a more complex viewer node</a></li>

  <li><a href="ch-more-advanced-viewer-node-features-part1.htsl">More advanced viewer node features - Part 1</a>

    <ol>
      <li><a href="ch-more-advanced-viewer-node-features-part1.htsl#separating-into-processing-looping">Separating the main callable into processing and looping</a></li>
      <li><a href="ch-more-advanced-viewer-node-features-part1.htsl#note-on-output-key">Brief note on "output" key in backdoor dictionary</a></li>
      <li><a href="ch-more-advanced-viewer-node-features-part1.htsl#callable-mode-backdoor">Callable mode and the backdoor</a></li>
    </ol>

  </li>

  <li><a href="ch-more-advanced-viewer-node-features-part2.htsl">More advanced viewer node features - Part 2</a>

    <ol>
      <li><a href="ch-more-advanced-viewer-node-features-part2.htsl#instructional-vs-practical-value">On instructional vs practical value of previous example</a></li>
      <li><a href="ch-more-advanced-viewer-node-features-part2.htsl#backdoor-without-loop">Using the backdoor without a custom visualization loop</a></li>
      <li><a href="ch-more-advanced-viewer-node-features-part2.htsl#only-in-graph-via-backdoor">Providing only in-graph visual via backdoor</a></li>
      <li><a href="ch-more-advanced-viewer-node-features-part2.htsl#final-comment-on-backdoors">Final comment on backdoors</a></li>
      <li><a href="ch-more-advanced-viewer-node-features-part2.htsl#final-optional-change">A final optional change to nodes with custom visualization loops</a></li>
      <li><a href="ch-more-advanced-viewer-node-features-part2.htsl#visualization-for-still-images">Small advice on visualization for still images</a></li>
    </ol>

  </li>

  <li>Different ways of using Nodezator (chapter not written yet)

    <ol>
      <li>As a standalone application</li>
      <li>Integrated with your regular Python coding</li>
      <li>To create parametric functions</li>
      <li>To create parametric data</li>
      <li>As a no-code or low-code tool</li>
    </ol>

  </li>

</ol>

<ul>

  <li><a href="appendix-color-coded-annotations.htsl">Appendix: Color-coded annotations</a></li>
  <li><a href="appendix-intfloat-words.htsl">Appendix: Words available inside intfloat entries</a></li>
  <li><a href="appendix-widget-configurations.htsl">Appendix: All widget configurations</a></li>
  <li><a href="appendix-widget-presets.htsl">Appendix: Widget presets</a></li>

  <li><a href="appendix-recipes.htsl">Appendix: Recipes</a>

    <ul>
        <li><a href="appendix-recipes.htsl#functools-reduce">Multiple operations at once with functools.reduce() standard library node</a></li>
        <li><a href="appendix-recipes.htsl#importing-getattr-executing">Importing values/objects, getting attributes, executing callable objects</a></li>
        <li><a href="appendix-recipes.htsl#namespace-from-exec">The namespace_from_exec() snippet node</a></li>
        <li><a href="appendix-recipes.htsl#images-into-pygame-ce">Converting images into pygame-ce surfaces for easy visualization and saving</a></li>
    </ul>

  </li>

</ul>

</body>

</htsl>
