# coding: utf-8

"""
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

The version of the OpenAPI document: 2.44.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from defectdojo_api_generated.models.re_import_scan import ReImportScan


class TestReImportScan(unittest.TestCase):
    """ReImportScan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReImportScan:
        """Test ReImportScan
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ReImportScan`
        """
        model = ReImportScan()
        if include_optional:
            return ReImportScan(
                scan_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                minimum_severity = 'Info',
                active = True,
                verified = True,
                endpoint_to_add = 56,
                file = '',
                product_type_name = '',
                product_name = '',
                engagement_name = '',
                engagement_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                source_code_management_uri = '',
                test_title = '',
                auto_create_context = True,
                deduplication_on_engagement = True,
                lead = 56,
                push_to_jira = True,
                environment = '',
                build_id = '',
                branch_tag = '',
                commit_hash = '',
                api_scan_configuration = 56,
                service = '',
                group_by = 'component_name',
                create_finding_groups_for_all_findings = True,
                test_id = 56,
                engagement_id = 56,
                product_id = 56,
                product_type_id = 56,
                statistics = defectdojo_api_generated.models.import_statistics.ImportStatistics(
                    before = null, 
                    delta = null, 
                    after = null, ),
                apply_tags_to_findings = True,
                apply_tags_to_endpoints = True,
                do_not_reactivate = True,
                scan_type = 'Acunetix Scan',
                test = 56,
                close_old_findings = True,
                close_old_findings_product_scope = True,
                version = '',
                tags = [
                    ''
                    ]
            )
        else:
            return ReImportScan(
                test_id = 56,
                engagement_id = 56,
                product_id = 56,
                product_type_id = 56,
                statistics = defectdojo_api_generated.models.import_statistics.ImportStatistics(
                    before = null, 
                    delta = null, 
                    after = null, ),
                scan_type = 'Acunetix Scan',
        )
        """

    def testReImportScan(self):
        """Test ReImportScan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
