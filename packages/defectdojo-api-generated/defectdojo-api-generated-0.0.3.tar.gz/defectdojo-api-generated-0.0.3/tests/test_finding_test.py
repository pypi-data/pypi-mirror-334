# coding: utf-8

"""
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

The version of the OpenAPI document: 2.44.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from defectdojo_api_generated.models.finding_test import FindingTest


class TestFindingTest(unittest.TestCase):
    """FindingTest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FindingTest:
        """Test FindingTest
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `FindingTest`
        """
        model = FindingTest()
        if include_optional:
            return FindingTest(
                id = 56,
                title = '',
                test_type = defectdojo_api_generated.models.finding_test_type.FindingTestType(
                    id = 56, 
                    name = '', ),
                engagement = defectdojo_api_generated.models.finding_engagement.FindingEngagement(
                    id = 56, 
                    name = '', 
                    description = '', 
                    product = defectdojo_api_generated.models.finding_product.FindingProduct(
                        id = 56, 
                        name = '', 
                        prod_type = defectdojo_api_generated.models.finding_prod_type.FindingProdType(
                            id = 56, 
                            name = '', ), ), 
                    target_start = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    target_end = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    branch_tag = '', 
                    engagement_type = 'Interactive', 
                    build_id = '', 
                    commit_hash = '', 
                    version = '', 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                environment = defectdojo_api_generated.models.finding_environment.FindingEnvironment(
                    id = 56, 
                    name = '', ),
                branch_tag = '',
                build_id = '',
                commit_hash = '',
                version = ''
            )
        else:
            return FindingTest(
                id = 56,
        )
        """

    def testFindingTest(self):
        """Test FindingTest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
