# coding: utf-8

"""
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

The version of the OpenAPI document: 2.44.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from defectdojo_api_generated.models.paginated_test_import_list import PaginatedTestImportList


class TestPaginatedTestImportList(unittest.TestCase):
    """PaginatedTestImportList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedTestImportList:
        """Test PaginatedTestImportList
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `PaginatedTestImportList`
        """
        model = PaginatedTestImportList()
        if include_optional:
            return PaginatedTestImportList(
                count = 123,
                next = 'http://api.example.org/accounts/?offset=400&limit=100',
                previous = 'http://api.example.org/accounts/?offset=200&limit=100',
                results = [
                    defectdojo_api_generated.models.test_import.TestImport(
                        id = 56, 
                        test_import_finding_action_set = [
                            defectdojo_api_generated.models.test_import_finding_action.TestImportFindingAction(
                                id = 56, 
                                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                action = 'N', 
                                test_import = 56, 
                                finding = 56, )
                            ], 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        import_settings = null, 
                        type = '', 
                        version = '', 
                        build_id = '', 
                        commit_hash = '', 
                        branch_tag = '', 
                        test = 56, 
                        findings_affected = [
                            56
                            ], )
                    ]
            )
        else:
            return PaginatedTestImportList(
                count = 123,
                results = [
                    defectdojo_api_generated.models.test_import.TestImport(
                        id = 56, 
                        test_import_finding_action_set = [
                            defectdojo_api_generated.models.test_import_finding_action.TestImportFindingAction(
                                id = 56, 
                                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                action = 'N', 
                                test_import = 56, 
                                finding = 56, )
                            ], 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        import_settings = null, 
                        type = '', 
                        version = '', 
                        build_id = '', 
                        commit_hash = '', 
                        branch_tag = '', 
                        test = 56, 
                        findings_affected = [
                            56
                            ], )
                    ],
        )
        """

    def testPaginatedTestImportList(self):
        """Test PaginatedTestImportList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
