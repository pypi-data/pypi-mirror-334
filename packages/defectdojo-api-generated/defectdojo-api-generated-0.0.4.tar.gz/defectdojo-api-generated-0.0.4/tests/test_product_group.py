# coding: utf-8

"""
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

The version of the OpenAPI document: 2.44.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from defectdojo_api_generated.models.product_group import ProductGroup


class TestProductGroup(unittest.TestCase):
    """ProductGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductGroup:
        """Test ProductGroup
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ProductGroup`
        """
        model = ProductGroup()
        if include_optional:
            return ProductGroup(
                id = 56,
                product = 56,
                group = 56,
                role = 56,
                prefetch = defectdojo_api_generated.models.paginated_product_group_list_prefetch.PaginatedProductGroupList_prefetch(
                    group = {
                        'key' : defectdojo_api_generated.models.dojo_group.DojoGroup(
                            id = 56, 
                            configuration_permissions = [
                                56
                                ], 
                            name = '', 
                            description = '', 
                            social_provider = 'AzureAD', 
                            users = [
                                56
                                ], )
                        }, 
                    product = {
                        'key' : defectdojo_api_generated.models.product.Product(
                            id = 56, 
                            findings_count = 56, 
                            findings_list = [
                                56
                                ], 
                            tags = [
                                ''
                                ], 
                            product_meta = [
                                defectdojo_api_generated.models.product_meta.ProductMeta(
                                    name = '', 
                                    value = '', )
                                ], 
                            name = '', 
                            description = '', 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            prod_numeric_grade = -2147483648, 
                            business_criticality = 'very high', 
                            platform = 'web service', 
                            lifecycle = 'construction', 
                            origin = 'third party library', 
                            user_records = 0, 
                            revenue = '-8072888001.', 
                            external_audience = True, 
                            internet_accessible = True, 
                            enable_product_tag_inheritance = True, 
                            enable_simple_risk_acceptance = True, 
                            enable_full_risk_acceptance = True, 
                            disable_sla_breach_notifications = True, 
                            product_manager = 56, 
                            technical_contact = 56, 
                            team_manager = 56, 
                            prod_type = 56, 
                            sla_configuration = 56, 
                            members = [
                                56
                                ], 
                            authorization_groups = [
                                56
                                ], 
                            regulations = [
                                56
                                ], )
                        }, 
                    role = {
                        'key' : defectdojo_api_generated.models.role.Role(
                            id = 56, 
                            name = '', 
                            is_owner = True, )
                        }, )
            )
        else:
            return ProductGroup(
                id = 56,
                product = 56,
                group = 56,
                role = 56,
        )
        """

    def testProductGroup(self):
        """Test ProductGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
