# coding: utf-8

"""
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

The version of the OpenAPI document: 2.44.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from defectdojo_api_generated.models.product_type import ProductType


class TestProductType(unittest.TestCase):
    """ProductType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductType:
        """Test ProductType
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ProductType`
        """
        model = ProductType()
        if include_optional:
            return ProductType(
                id = 56,
                name = '',
                description = '',
                critical_product = True,
                key_product = True,
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                members = [
                    56
                    ],
                authorization_groups = [
                    56
                    ],
                prefetch = defectdojo_api_generated.models.paginated_product_type_list_prefetch.PaginatedProductTypeList_prefetch(
                    authorization_groups = {
                        'key' : defectdojo_api_generated.models.dojo_group.DojoGroup(
                            id = 56, 
                            configuration_permissions = [
                                56
                                ], 
                            name = '', 
                            description = '', 
                            social_provider = 'AzureAD', 
                            users = [
                                56
                                ], )
                        }, 
                    members = {
                        'key' : defectdojo_api_generated.models.user_stub.UserStub(
                            id = 56, 
                            username = 'A', 
                            first_name = '', 
                            last_name = '', )
                        }, )
            )
        else:
            return ProductType(
                id = 56,
                name = '',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                members = [
                    56
                    ],
                authorization_groups = [
                    56
                    ],
        )
        """

    def testProductType(self):
        """Test ProductType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
