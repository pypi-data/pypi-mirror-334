# coding: utf-8

"""
Defect Dojo API v2

Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.

The version of the OpenAPI document: 2.44.1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from defectdojo_api_generated.models.note_history import NoteHistory


class TestNoteHistory(unittest.TestCase):
    """NoteHistory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NoteHistory:
        """Test NoteHistory
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `NoteHistory`
        """
        model = NoteHistory()
        if include_optional:
            return NoteHistory(
                id = 56,
                current_editor = defectdojo_api_generated.models.user_stub.UserStub(
                    id = 56, 
                    username = 'A', 
                    first_name = '', 
                    last_name = '', ),
                note_type = defectdojo_api_generated.models.note_type.NoteType(
                    id = 56, 
                    name = '', 
                    description = '', 
                    is_single = True, 
                    is_active = True, 
                    is_mandatory = True, ),
                data = '',
                time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return NoteHistory(
                id = 56,
                current_editor = defectdojo_api_generated.models.user_stub.UserStub(
                    id = 56, 
                    username = 'A', 
                    first_name = '', 
                    last_name = '', ),
                note_type = defectdojo_api_generated.models.note_type.NoteType(
                    id = 56, 
                    name = '', 
                    description = '', 
                    is_single = True, 
                    is_active = True, 
                    is_mandatory = True, ),
                data = '',
                time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testNoteHistory(self):
        """Test NoteHistory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
