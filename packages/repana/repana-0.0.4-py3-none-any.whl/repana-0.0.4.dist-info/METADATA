Metadata-Version: 2.4
Name: repana
Version: 0.0.4
Dynamic: Requires-Dist
Summary: A simple framework for analyzing model representations
Author: Bertram Højer
License: Copyright (c) 2025 Bertram Højer
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Description-Content-Type: text/markdown

## Table of Contents
- [Overview](#overview)
- [Features](#features)
- [Installation](#installation)
- [Quick Start](#quick-start)
- [Acknowledgements](#acknowledgements)

## Overview
Repana was developed based on the [repeng](https://github.com/vgel/repeng) library for research purposes. It is intended for doing representation analysis of large language models. `Repana` allows you to insert a (or more) `ControlBlock` into a standard torch transformer model creating a `ControlModel` instance. You can then "read" model representations, use these to derive a `ControlVector`, which can be applied to the `ControlModel` during inference.

## Features
- ControlModel
- ControlVector
  - Reading vector
  - Contrast vector
  - PCA-based contrast vector

## Installation
```bash
pip install repana
```

## Acknowledgements
This library is based off of the [repeng](https://github.com/vgel/repeng) library (MIT License) developed by Theia Vogel. If you want to merely train control vectors fast, we suggest taking a look at that great library!

