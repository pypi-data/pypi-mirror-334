Metadata-Version: 2.2
Name: ApiModkey
Version: 0.2.3
Summary: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–ø–∏ –æ—Ç Modkey.space
Home-page: https://modkey.space/
Author: MAKCNMOB
Author-email: support@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests==2.32.3
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary


![–õ–æ–≥–æ](https://i.ibb.co/zhP8MptB/IMG-20250301-153001-834.jpg)

### üìö **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `apimodkey`**

–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ `apimodkey` –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–¥–æ–±–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API Modkey.space. –° –µ—ë –ø–æ–º–æ—â—å—é –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–ª—é—á–∏, –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö —Å—Ç–∞—Ç—É—Å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—è API-–∫–ª—é—á –ø—Ä—è–º–æ –≤ –∫–æ–¥–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.

---

#### ‚öôÔ∏è **–ú–µ—Ç–æ–¥: `create_key`**

–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.

**–û–ø–∏—Å–∞–Ω–∏–µ**:
- –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–µ—Ç –∫–ª—é—á —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ —Ç–∏–ø–æ–º –∫–ª—é—á–∞.
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏–ª–∏ –æ—à–∏–±–∫–æ–π.

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã**:
- `api_key` (str): –í–∞—à API-–∫–ª—é—á.
- `days` (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–µ–π—Å—Ç–≤–∏—è –∫–ª—é—á–∞.
- `devices` (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á.
- `key_type` (str): –¢–∏–ø –∫–ª—é—á–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'APK' –∏–ª–∏ 'INJECTOR').

**–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ**:
- –°—Ç—Ä–æ–∫–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª—é—á–∞ –∏–ª–∏ –æ—à–∏–±–∫–æ–π.

---

**–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**:

```python
from apimodkey import create_key

# –£–∫–∞–∑—ã–≤–∞–µ–º API-–∫–ª—é—á
api_key = "YOUR_API_KEY"

# –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –Ω–∞ 30 –¥–Ω–µ–π –¥–ª—è 3 —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å —Ç–∏–ø–æ–º 'APK'
result = create_key(api_key, 30, 3, 'APK')

# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print(result)
```

**–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞**:
```
–ö–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!
–í–∞—à –∫–ª—é—á: abc123xyz
```

---

#### üîß **–ú–µ—Ç–æ–¥: `edit_key_status`**

–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª—é—á–∞.

**–û–ø–∏—Å–∞–Ω–∏–µ**:
- –ú–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–ª—é—á–∞ –Ω–∞ –Ω–æ–≤—ã–π.
- –í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ä—ã–π –∏ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∫–ª—é—á–∞, –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã**:
- `api_key` (str): –í–∞—à API-–∫–ª—é—á.
- `key` (str): –ö–ª—é—á, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å.
- `new_status` (str): –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∫–ª—é—á–∞ ('block' –∏–ª–∏ 'active').

**–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ**:
- None, –Ω–æ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç–∞—Ä—ã–π –∏ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∫–ª—é—á–∞.

---

**–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**:

```python
from apimodkey import edit_key_status

# –£–∫–∞–∑—ã–≤–∞–µ–º API-–∫–ª—é—á
api_key = "YOUR_API_KEY"

# –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª—é—á–∞ –Ω–∞ 'inactive'
edit_key_status(api_key, 'your_key', 'inactive')
```

**–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞**:
```
–°—Ç–∞—Ç—É—Å –∫–ª—é—á–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!
–°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: active
–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: inactive
```

---

#### üí° **–ú–µ—Ç–æ–¥: `edit_key_max_devices`**

–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á.

**–û–ø–∏—Å–∞–Ω–∏–µ**:
- –ú–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞.
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ä–æ–µ –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤.

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã**:
- `api_key` (str): –í–∞—à API-–∫–ª—é—á.
- `key` (str): –ö–ª—é—á, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤.
- `new_max_devices` (int): –ù–æ–≤–æ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤.

**–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ**:
- None, –Ω–æ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ä–æ–µ –∏ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤.

---

**–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**:

```python
from apimodkey import edit_key_max_devices

# –£–∫–∞–∑—ã–≤–∞–µ–º API-–∫–ª—é—á
api_key = "YOUR_API_KEY"

# –ò–∑–º–µ–Ω—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –Ω–∞ 5
edit_key_max_devices(api_key, 'your_key', 5)
```

**–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞**:
```
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!
–°—Ç–∞—Ä–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: 3
–ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: 5
```

---

#### üÜï **–ú–µ—Ç–æ–¥: `edit_user_key`**

–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

**–û–ø–∏—Å–∞–Ω–∏–µ**:
- –ú–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ/–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –∫–ª—é—á –∏–ª–∏ –æ—à–∏–±–∫—É.

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã**:
- `api_key` (str): –í–∞—à API-–∫–ª—é—á.
- `key` (str): –ö–ª—é—á, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å.
- `new_user_key` (str): –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞.

**–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ**:
- –ù–æ–≤—ã–π –∫–ª—é—á –∏–ª–∏ –æ—à–∏–±–∫–∞, –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å.

---

**–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**:

```python
from apimodkey import edit_user_key

# –£–∫–∞–∑—ã–≤–∞–µ–º API-–∫–ª—é—á
api_key = "YOUR_API_KEY"

# –ò–∑–º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –Ω–∞ –Ω–æ–≤–æ–µ
result = edit_user_key(api_key, 'your_key', 'new_key_name')

# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print(result)
```

**–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞**:
```
–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ 'new_key_name'.
```

---

#### üí° **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?**

–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –∏–∑ —ç—Ç–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –≤–∞–º –Ω—É–∂–Ω–æ:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É —á–µ—Ä–µ–∑ `pip`.
2. –í –≤–∞—à–µ–º –∫–æ–¥–µ –ø–µ—Ä–µ–¥–∞—Ç—å API-–∫–ª—é—á –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Ç–æ–¥–∞.

---

### üöÄ **–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏**

–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:

```bash
pip install apimodkey
```

---

#### üìù **–ü—Ä–∏–º–µ—Ä —Å –ø–æ–ª–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π**:

```python
from apimodkey import create_key, edit_key_status, edit_key_max_devices, edit_user_key

# –£–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–π API-–∫–ª—é—á
api_key = "YOUR_API_KEY"

#–°–û–ó–î–ê–ù–ò–ï –ö–õ–Æ–ß–ê 
created_key = create_key(api_key, days=30, devices=5, key_type='INJECTOR') #–≤ –∫–µ–π —Ç–∏–ø –ª–∏–±–æ APK –∏–ª–∏ INJECTOR

#–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞
if created_key:
	edit_key_status(api_key, created_key, new_status='active')  # –∏–ª–∏ 'active'

#–∏–∑–º–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
if created_key:
	edit_key_max_devices(api_key, created_key, new_max_devices=10)

#–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª—é—á–∞
if created_key:
	edit_user_key(api_key, created_key, new_user_key='Test')

```
---
#### **–ü—Ä–∏–º–µ—Ä —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ –±–æ—Ç–∞**
```python
import telebot
from apimodkey import create_key, edit_key_status, edit_key_max_devices, edit_user_key

api = "–í–ê–®_–¢–û–ö–ï–ù_–ò–ó_–ú–û–î–ö–ï–ô"


bot = telebot.TeleBot('YOUR_TELEGRAM_BOT_TOKEN')


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API ModKey. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")


@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/createkey <days> <devices> <type> - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á
/editstatus <key> <new_status> - –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–ª—é—á–∞
/editmaxdevices <key> <new_max_devices> - –ò–∑–º–µ–Ω–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
/edituserkey <key> <new_user_key> - –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–ª—é—á
"""
    bot.reply_to(message, help_text)


@bot.message_handler(commands=['createkey'])
def create_key_command(message):
    try:
        _, days, devices, key_type = message.text.split()
        key = create_key(api, int(days), int(devices), key_type)
        if key:
            bot.reply_to(message, f"–ö–ª—é—á —Å–æ–∑–¥–∞–Ω: {key}")
        else:
            bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª—é—á–∞")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {str(e)}")


@bot.message_handler(commands=['editstatus'])
def edit_key_status_command(message):
    try:
        _, key, new_status = message.text.split()
        new_status = edit_key_status(api, key, new_status)
        if new_status:
            bot.reply_to(message, f"–°—Ç–∞—Ç—É—Å –∫–ª—é—á–∞ –∏–∑–º–µ–Ω–µ–Ω: {new_status}")
        else:
            bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª—é—á–∞")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {str(e)}")


@bot.message_handler(commands=['editmaxdevices'])
def edit_key_max_devices_command(message):
    try:
        _, key, new_max_devices = message.text.split()
        new_max_devices = edit_key_max_devices(api, key, int(new_max_devices))
        if new_max_devices:
            bot.reply_to(message, f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏–∑–º–µ–Ω–µ–Ω–æ: {new_max_devices}")
        else:
            bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {str(e)}")


@bot.message_handler(commands=['edituserkey'])
def edit_user_key_command(message):
    try:
        _, key, new_user_key = message.text.split()
        new_user_key = edit_user_key(api, key, new_user_key)
        if new_user_key:
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∫–ª—é—á –∏–∑–º–µ–Ω–µ–Ω: {new_user_key}")
        else:
            bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª—é—á–∞")
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {str(e)}")


bot.polling()
```
---

#### üéâ **–¢–≤–æ–π –ø–µ—Ä–≤—ã–π –∫–ª—é—á —É–∂–µ —Å–æ–∑–¥–∞–Ω!**

–ò—Å–ø–æ–ª—å–∑—É—è —ç—Ç–∏ –ø—Ä–æ—Å—Ç—ã–µ –º–µ—Ç–æ–¥—ã, –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª—é—á–∞–º–∏ –≤ Modkey.space. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–∞–±–æ—Ç–æ–π —Å API! üéâ

---

### üìú **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏**:
- **–ù–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–π—Ç–µ —Å–≤–æ–π API-–∫–ª—é—á**! –û–Ω –¥–æ–ª–∂–µ–Ω —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ –∫–æ–¥–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∫–ª—é—á–∞.

#### Work
>–í–ª–∞–¥–µ–ª—å—Ü–µ–º –ø—Ä–æ–µ–∫—Ç–∞(modkey.space) —è–≤–ª—è–µ—Ç—Å—è [CATPoN](https://t.me/EXPERT_CATPON)
>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞ modkey.space [Wardex](https://t.me/Autoritetion)

>**–ù–∞–¥ –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π —Ä–∞–±–æ—Ç–∞–ª [@MAKCNMOB](https://t.me/MAKCNMOB)**
