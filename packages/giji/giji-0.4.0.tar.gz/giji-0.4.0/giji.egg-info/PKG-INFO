Metadata-Version: 2.2
Name: giji
Version: 0.4.0
Summary: Git tools for Commitizen and PR Summary Generation using AI
Home-page: https://github.com/cometa/giji
Author: Cometa
Author-email: Cometa <apps@getcometa.com>
License: MIT
Project-URL: Homepage, https://github.com/cometa/giji
Project-URL: Bug Tracker, https://github.com/cometa/giji/issues
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Version Control :: Git
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: typer>=0.9.0
Requires-Dist: rich>=13.7.0
Requires-Dist: jira>=3.5.1
Requires-Dist: google-generativeai>=0.3.2
Requires-Dist: questionary>=2.0.1
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# Giji - Herramientas de Desarrollo

Colecci√≥n de herramientas para optimizar el flujo de desarrollo:
- ü§ñ Commits inteligentes con IA
- üìù Generaci√≥n de PRs con descripci√≥n autom√°tica
- üé´ Integraci√≥n con Jira
- üîî Integraci√≥n con Slack

## Instalaci√≥n

```bash
pip install giji
```

## Configuraci√≥n

### Configurar Gemini (Requerido)
```bash
export GEMINI_API_KEY='your-api-key'
```

### Configurar Jira (Opcional)
```bash
export JIRA_SERVER_URL='https://your-domain.atlassian.net'
export JIRA_EMAIL='your.email@company.com'
export JIRA_TOKEN='your-api-token'
```

### Configurar Slack (Opcional)
Para recibir notificaciones en Slack, necesitas configurar un Incoming Webhook:

1. Ve a tu Slack workspace en el navegador
2. Haz click en el nombre del canal donde quieres recibir las notificaciones
3. En el men√∫ del canal, selecciona "Configuraci√≥n > Integraciones"
4. Click en "A√±adir una aplicaci√≥n"
5. Busca y selecciona "Incoming WebHooks"
6. Click en "A√±adir a Slack"
7. Elige el canal y click en "A√±adir integraci√≥n"
8. Copia el Webhook URL y config√∫ralo:
```bash
export SLACK_WEBHOOK_URL='https://hooks.slack.com/services/XXX/YYY/ZZZ'
```

Para verificar tu configuraci√≥n:
```bash
giji config        # Verificar toda la configuraci√≥n
giji config -t slack  # Verificar solo configuraci√≥n de Slack
```

## Comandos

### Pull Requests

Crear un PR con descripci√≥n generada por IA:
```bash
# PR b√°sico
giji pr -b main

# PR como borrador
giji pr -b main -d

# PR con ticket Jira
giji pr -b main -t SIS-123

# PR sin auto-commit
giji pr -b main -n

# PR con notificaci√≥n a Slack
giji pr -b main -s

# PR con notificaci√≥n a Slack y mensaje personalizado
giji pr -b main -s -m "Por favor revisar los cambios en el componente X"

# PR completo con todas las integraciones
giji pr -b main -s -m "Listo para review" -t SIS-123 -c -d
```

Opciones disponibles:
- `-b, --base`: Rama base (default: master)
- `-t, --ticket`: N√∫mero de ticket JIRA
- `-d, --draft`: Crear PR como borrador
- `-n, --no-commit`: No hacer commit autom√°tico
- `-c, --comment`: Agregar comentario en Jira
- `-s, --slack`: Enviar notificaci√≥n a Slack
- `-m, --message`: Mensaje adicional para la notificaci√≥n de Slack

### Slack

Enviar mensajes directamente a Slack:
```bash
# Mensaje simple
giji slack send "Hola equipo!"

# Mensaje con emojis
giji slack send "Deploy completado ‚úÖ"

# Mensaje con m√∫ltiples l√≠neas
giji slack send "üöÄ Nueva versi√≥n desplegada
‚Ä¢ Feature 1
‚Ä¢ Feature 2"
```

## Notificaciones de Slack

Las notificaciones de PR en Slack incluyen:
- URL del Pull Request
- N√∫mero de ticket Jira (con enlace directo)
- Mensaje personalizado (opcional)

Ejemplo de notificaci√≥n:
```
üéâ *Nuevo Pull Request creado*
‚Ä¢ *URL:* https://github.com/...
‚Ä¢ *Ticket:* SIS-123 (enlace a Jira)
üí¨ *Mensaje:* Por favor revisar los cambios en el componente X
```

## Ejemplos y Ayuda

Ver ejemplos detallados:
```bash
giji examples
```

Ver ayuda de cualquier comando:
```bash
giji --help
giji pr --help
giji slack --help
```

## Requisitos

- Python 3.7+
- Git
- GitHub CLI (`gh`)
- API key de Gemini
- Credenciales de Jira (para funcionalidades de Jira)

## Licencia

MIT License - ver [LICENSE](LICENSE) para m√°s detalles.


## Soporte

Si encuentras alg√∫n problema o tienes una sugerencia, por favor crea un issue en el [repositorio de GitHub](https://github.com/cometa/giji/issues).
