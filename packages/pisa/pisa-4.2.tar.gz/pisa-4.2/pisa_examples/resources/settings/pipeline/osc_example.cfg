#include settings/binning/example.cfg as binning
#include settings/osc/nufitv20.cfg as osc
#include settings/osc/earth.cfg as earth

# These first few lines import other config files that will be useful here...


#------------------------------------------------------------------------------
# Settings directly affecting or handled by the pipeline
#------------------------------------------------------------------------------

[pipeline]

# Define order of stages to be excecuted one after another, and specify the
# service to use for each of them as stage1:serviceA, stage2:serviceB, ...

name = neutrinos

order = data.toy_event_generator, flux.barr_simple, osc.prob3

# Select the params denoted by param.<param_selector>.<param_name>
# This feature allows a whole subset of parameters to be selected,
# in this case normal hierarchy values for oscillation parameters
param_selections = nh

# if maps should be created as the output of the stage
output_binning = calc_grid
output_key = weights


#------------------------------------------------------------------------------
# 'data' stage parameters
#------------------------------------------------------------------------------

# This stage is used to generate toy events
[data.toy_event_generator]

calc_mode = calc_grid
apply_mode = calc_grid

output_names = nue_cc, numu_cc, nutau_cc, nue_nc, numu_nc, nutau_nc, nuebar_cc, numubar_cc, nutaubar_cc, nuebar_nc, numubar_nc, nutaubar_nc

param.n_events = 1e4
param.seed = 0
param.random = False

[flux.barr_simple]

calc_mode = calc_grid
apply_mode = events

# nu/nubar ratio
param.nu_nubar_ratio = 1.0 +/- 0.1
param.nu_nubar_ratio.fixed = True
param.nu_nubar_ratio.range = nominal + [-3., +3.] * sigma

# nu_e/nu_mu ratio
param.nue_numu_ratio = 1.0 +/- 0.05
param.nue_numu_ratio.fixed = True
param.nue_numu_ratio.range = nominal + [-0.5, +0.5]

# Barr flux up/horizontal
param.Barr_uphor_ratio = 0.0 +/- 1.0
param.Barr_uphor_ratio.fixed = True
param.Barr_uphor_ratio.range = nominal + [-3.0, +3.0]

# Barr flux nu/nubar
param.Barr_nu_nubar_ratio = 0.0 +/- 1.0
param.Barr_nu_nubar_ratio.fixed = True
param.Barr_nu_nubar_ratio.range = nominal + [-3.0, +3.0]

# Spectral index
param.delta_index = 0.0 +/- 0.1
param.delta_index.fixed = False
param.delta_index.range = nominal + [-5, +5] * sigma


#------------------------------------------------------------------------------
# 'oscillation' stage parameters
#------------------------------------------------------------------------------

# The oscillations stage uses prob3 to calculate oscillation probabilities
# for the events according to the values of the mass splitting, mixing angles,
# etc provided.
# Note that the oscillation probabilities here are computed on a grid and assigned
# to the individual events (it is also possible just to compute exactly for
# each event, but this might be slower depending on sample size)

[osc.prob3]

# Here our input and output will be events, but we perform the ocillation 
# probability calculation on a grid for speed
calc_mode = calc_grid
apply_mode = calc_grid

# Preliminary Reference Earth Model
param.earth_model = osc/PREM_12layer.dat

# electron densities
param.YeI = ${earth:YeI}
param.YeM = ${earth:YeM}
param.YeO = ${earth:YeO}

# depth of detector below Earth surface and
# neutrino production height in the atmosphere
# (e.g., for vertically downgoing,
# baseline = depth + height)
param.detector_depth = ${earth:detector_depth}
param.prop_height = ${earth:prop_height}

# solar angle
param.theta12 = ${osc:theta12}
param.theta12.fixed = True

# reactor angle
param.nh.theta13 = ${osc:theta13_nh}
param.nh.theta13.fixed = True
param.nh.theta13.range = ${osc:theta13_nh.range}
param.ih.theta13 = ${osc:theta13_ih}
param.ih.theta13.fixed = True
param.ih.theta13.range = ${osc:theta13_ih.range}

# atmospheric angle
param.nh.theta23 = 42. * units.degree
param.nh.theta23.fixed = False
param.nh.theta23.range = [0.,90.] * units.degree
param.nh.theta23.prior = uniform
param.ih.theta23 = 42. * units.degree
param.ih.theta23.fixed = False
param.ih.theta23.range = [0.,90.] * units.degree
param.ih.theta23.prior = uniform

# dirac phase
param.nh.deltacp = 0.0 * units.degree
param.nh.deltacp.fixed = True
param.nh.deltacp.range = ${osc:deltacp_nh.range}
param.nh.deltacp.prior = uniform
param.ih.deltacp = 0.0 * units.degree
param.ih.deltacp.fixed = True

# solar mass splitting
param.deltam21 = ${osc:deltam21}
param.deltam21.fixed = True

# atmospheric mass splitting
param.nh.deltam31 = ${osc:deltam31_nh}
param.nh.deltam31.fixed = True
param.nh.deltam31.prior = uniform
param.nh.deltam31.range = [0.001, +0.007] * units.eV**2
param.ih.deltam31 = ${osc:deltam31_ih}
param.ih.deltam31.fixed = True
param.ih.deltam31.prior = uniform
param.ih.deltam31.range = [-0.007, -0.001] * units.eV**2
