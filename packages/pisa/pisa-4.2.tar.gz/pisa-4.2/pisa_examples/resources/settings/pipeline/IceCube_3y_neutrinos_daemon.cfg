#include settings/binning/IceCube_3y_oscillations.cfg as binning
#include settings/osc/nufitv20.cfg as osc
#include settings/osc/earth.cfg as earth

# These first few lines import other config files that will be useful here...


#------------------------------------------------------------------------------
# Settings directly affecting or handled by the pipeline
#------------------------------------------------------------------------------

[pipeline]

# Define order of stages to be excecuted one after another, and specify the
# service to use for each of them as stage1:serviceA, stage2:serviceB, ...
order = data.csv_loader, flux.daemon_flux, osc.prob3, aeff.aeff, utils.hist, discr_sys.hypersurfaces

# Select the params denoted by param.<param_selector>.<param_name>
# This feature allows a whole subset of parameters to be selected,
# in this case normal hierarchy values for oscillation parameters
param_selections = nh

name = neutrinos

output_binning = dragon_datarelease
output_key = weights, errors

#------------------------------------------------------------------------------
# 'data' stage parameters
#------------------------------------------------------------------------------

[data.csv_loader]

calc_mode = events
apply_mode = events

output_names = nue_cc, numu_cc, nutau_cc, nue_nc, numu_nc, nutau_nc, nuebar_cc, numubar_cc, nutaubar_cc, nuebar_nc, numubar_nc, nutaubar_nc

events_file = events/IceCube_3y_oscillations/neutrino_mc.csv.bz2

[flux.daemon_flux]

calc_mode = events
apply_mode = events

param.daemon_K_158G = 0.0 +/- 1.0
param.daemon_K_158G.fixed = False
param.daemon_K_158G.range = nominal + [-3., +3.] * sigma

param.daemon_K_2P = 0.0 +/- 1.0
param.daemon_K_2P.fixed = False
param.daemon_K_2P.range = nominal + [-3., +3.] * sigma

param.daemon_K_31G = 0.0 +/- 1.0
param.daemon_K_31G.fixed = False
param.daemon_K_31G.range = nominal + [-3., +3.] * sigma

param.daemon_antiK_158G = 0.0 +/- 1.0
param.daemon_antiK_158G.fixed = False
param.daemon_antiK_158G.range = nominal + [-3., +3.] * sigma

param.daemon_antiK_2P = 0.0 +/- 1.0
param.daemon_antiK_2P.fixed = False
param.daemon_antiK_2P.range = nominal + [-3., +3.] * sigma

param.daemon_antiK_31G = 0.0 +/- 1.0
param.daemon_antiK_31G.fixed = False
param.daemon_antiK_31G.range = nominal + [-3., +3.] * sigma

param.daemon_n_158G = 0.0 +/- 1.0
param.daemon_n_158G.fixed = False
param.daemon_n_158G.range = nominal + [-3., +3.] * sigma

param.daemon_n_2P = 0.0 +/- 1.0
param.daemon_n_2P.fixed = False
param.daemon_n_2P.range = nominal + [-3., +3.] * sigma

param.daemon_p_158G = 0.0 +/- 1.0
param.daemon_p_158G.fixed = False
param.daemon_p_158G.range = nominal + [-3., +3.] * sigma

param.daemon_p_2P = 0.0 +/- 1.0
param.daemon_p_2P.fixed = False
param.daemon_p_2P.range = nominal + [-3., +3.] * sigma

param.daemon_pi_158G = 0.0 +/- 1.0
param.daemon_pi_158G.fixed = False
param.daemon_pi_158G.range = nominal + [-3., +3.] * sigma

param.daemon_pi_20T = 0.0 +/- 1.0
param.daemon_pi_20T.fixed = False
param.daemon_pi_20T.range = nominal + [-3., +3.] * sigma

param.daemon_pi_2P = 0.0 +/- 1.0
param.daemon_pi_2P.fixed = False
param.daemon_pi_2P.range = nominal + [-3., +3.] * sigma

param.daemon_pi_31G = 0.0 +/- 1.0
param.daemon_pi_31G.fixed = False
param.daemon_pi_31G.range = nominal + [-3., +3.] * sigma

param.daemon_antipi_158G = 0.0 +/- 1.0
param.daemon_antipi_158G.fixed = False
param.daemon_antipi_158G.range = nominal + [-3., +3.] * sigma

param.daemon_antipi_20T = 0.0 +/- 1.0
param.daemon_antipi_20T.fixed = False
param.daemon_antipi_20T.range = nominal + [-3., +3.] * sigma

param.daemon_antipi_2P = 0.0 +/- 1.0
param.daemon_antipi_2P.fixed = False
param.daemon_antipi_2P.range = nominal + [-3., +3.] * sigma

param.daemon_antipi_31G = 0.0 +/- 1.0
param.daemon_antipi_31G.fixed = False
param.daemon_antipi_31G.range = nominal + [-3., +3.] * sigma

param.daemon_GSF_1 = 0.0 +/- 1.0
param.daemon_GSF_1.fixed = False
param.daemon_GSF_1.range = nominal + [-3., +3.] * sigma

param.daemon_GSF_2 = 0.0 +/- 1.0
param.daemon_GSF_2.fixed = False
param.daemon_GSF_2.range = nominal + [-3., +3.] * sigma

param.daemon_GSF_3 = 0.0 +/- 1.0
param.daemon_GSF_3.fixed = False
param.daemon_GSF_3.range = nominal + [-3., +3.] * sigma

param.daemon_GSF_4 = 0.0 +/- 1.0
param.daemon_GSF_4.fixed = False
param.daemon_GSF_4.range = nominal + [-3., +3.] * sigma

param.daemon_GSF_5 = 0.0 +/- 1.0
param.daemon_GSF_5.fixed = False
param.daemon_GSF_5.range = nominal + [-3., +3.] * sigma

param.daemon_GSF_6 = 0.0 +/- 1.0
param.daemon_GSF_6.fixed = False
param.daemon_GSF_6.range = nominal + [-3., +3.] * sigma


[osc.prob3]

calc_mode = true_allsky_fine
apply_mode = events

# Preliminary Reference Earth Model
param.earth_model = osc/PREM_12layer.dat
# electron densities
param.YeI = ${earth:YeI}
param.YeM = ${earth:YeM}
param.YeO = ${earth:YeO}
# height
param.detector_depth = ${earth:detector_depth}
param.prop_height = ${earth:prop_height}
# solar angle
param.theta12 = ${osc:theta12}
param.theta12.fixed = True
# reactor angle
param.nh.theta13 = ${osc:theta13_nh}
param.nh.theta13.fixed = False
param.nh.theta13.range = ${osc:theta13_nh.range}
param.ih.theta13 = ${osc:theta13_ih}
param.ih.theta13.fixed = False
param.ih.theta13.range = ${osc:theta13_ih.range}
# atmospheric angle
param.nh.theta23 = ${osc:theta23_nh}
param.nh.theta23.fixed = False
param.nh.theta23.range = ${osc:theta23_nh.range}
param.nh.theta23.prior = uniform
param.ih.theta23 = ${osc:theta23_ih}
param.ih.theta23.fixed = False
param.ih.theta23.range = ${osc:theta23_ih.range}
param.ih.theta23.prior = uniform
# dirac phase
param.nh.deltacp = 0.0 * units.degree
param.nh.deltacp.fixed = True
param.nh.deltacp.range = ${osc:deltacp_nh.range}
param.nh.deltacp.prior = uniform
param.ih.deltacp = 0.0 * units.degree
param.ih.deltacp.fixed = True
# solar mass splitting
param.deltam21 = ${osc:deltam21}
param.deltam21.fixed = True
# atmospheric mass splitting
param.nh.deltam31 = ${osc:deltam31_nh}
param.nh.deltam31.fixed = False
param.nh.deltam31.prior = uniform
param.nh.deltam31.range = [0.001, +0.007] * units.eV**2
param.ih.deltam31 = ${osc:deltam31_ih}
param.ih.deltam31.fixed = False
param.ih.deltam31.prior = uniform
param.ih.deltam31.range = [-0.007, -0.001] * units.eV**2


[aeff.aeff]

calc_mode = events
apply_mode = events

param.livetime = 2.5 * units.common_year

# overall norm
param.aeff_scale = 1.0
param.aeff_scale.fixed = False
param.aeff_scale.prior = uniform
param.aeff_scale.range = [0.,3.] * units.dimensionless

# CC tau neutrino norm
param.nutau_cc_norm = 1.0
param.nutau_cc_norm.fixed = True
param.nutau_cc_norm.range = [0.2, 2.0] * units.dimensionless
param.nutau_cc_norm.prior = uniform

# CC+NC nutau norm
param.nutau_norm = 1.0
param.nutau_norm.fixed = False
param.nutau_norm.range = [-1.0, 8.5] * units.dimensionless
param.nutau_norm.prior = uniform

# NC norm
param.nu_nc_norm = 1.0 +/- 0.2
param.nu_nc_norm.fixed = False
param.nu_nc_norm.range = nominal + [-.5,+.5]

[utils.hist]

calc_mode = events
apply_mode = dragon_datarelease

error_method = sumw2


[discr_sys.hypersurfaces]

calc_mode = ${utils.hist:apply_mode}
apply_mode = ${utils.hist:apply_mode}

error_method = sumw2

links = {'nue_cc+nuebar_cc':['nue_cc', 'nuebar_cc'], 'numu_cc+numubar_cc':['numu_cc', 'numubar_cc'], 'nutau_cc+nutaubar_cc':['nutau_cc', 'nutaubar_cc'], 'nu_nc+nubar_nc':['nue_nc', 'numu_nc', 'nutau_nc', 'nuebar_nc', 'numubar_nc', 'nutaubar_nc']}

fit_results_file = events/IceCube_3y_oscillations/hyperplanes_*.csv.bz2

# DOM efficiency
param.opt_eff_overall = 1.0 +/- 0.1
param.opt_eff_overall.fixed = False
param.opt_eff_overall.range = [0.8, 1.2] * units.dimensionless

# hole ice scattering
param.opt_eff_lateral = 25 +/- 10
param.opt_eff_lateral.fixed = False
param.opt_eff_lateral.range = [5, 50] * units.dimensionless

# hole ice forward
param.opt_eff_headon = 0.0
param.opt_eff_headon.fixed = False
param.opt_eff_headon.range = [-5.0, 2.0] * units.dimensionless
param.opt_eff_headon.prior = uniform

# bulk_scatter
param.ice_scattering = 0.0 +/- 10.0
param.ice_scattering.fixed = False
param.ice_scattering.range = [-15, 15] * units.dimensionless

# bulk_abs
param.ice_absorption = 0.0 +/- 10.0
param.ice_absorption.fixed = False
param.ice_absorption.range = [-15, 15] * units.dimensionless
