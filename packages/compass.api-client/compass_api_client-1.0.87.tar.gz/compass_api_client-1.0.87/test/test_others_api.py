# coding: utf-8

"""
    Compass API

      <h3>With this API you can:</h3> <ul> <li><strong>Execute complex DeFi transactions:&nbsp; </strong>Swap, lend, borrow, stake, LP, and more, with high-level on-chain actions.</li> <li><strong>Stay secure &amp; non-custodial</strong> &ndash; Transactions are signed locally, and you retain full control.</li> <li><strong>Build AI &amp; automation workflows</strong> &ndash; Power AI agents, trading bots, yield products and DeFi applications with programmatic transaction execution. Integrate seamlessly into existing workflows.</li> <li><strong>Interact across multiple protocols &amp; chains</strong>&nbsp;&ndash; Spot, lending, staking on Ethereum, Arbitrum, Base. Many more to come!</li> </ul>  <h3 id=\"quick-links\" class=\"docs-chapter-header\"><a class=\"not-prose group hover:text-compass-pink transition-colors flex w-fit\" href=\"https://www.compasslabs.ai/api-docs#quick-links\">Quick links</a></h3> <ul> <li><a href=\"https://api.compasslabs.ai/\" target=\"_blank\" rel=\"noopener\">API reference</a></li> <li><a href=\"https://github.com/CompassLabs/compass_api_examples\" target=\"_blank\" rel=\"noopener\">5 min quickstart</a></li> <li><a href=\"https://discord.gg/qjP8dCYZ58\" target=\"_blank\" rel=\"noopener\">Discord</a></li> <li><a href=\"https://www.compasslabs.ai/\" target=\"_blank\" rel=\"noopener\">Compass Labs</a></li> </ul>

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from compass.api_client.api.others_api import OthersApi


class TestOthersApi(unittest.TestCase):
    """OthersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = OthersApi()

    def tearDown(self) -> None:
        pass

    def test_get_tokens_v0_generic_supported_tokens_get_post(self) -> None:
        """Test case for get_tokens_v0_generic_supported_tokens_get_post

        Get supported token
        """
        pass

    def test_process_request_v0_generic_allowance_get_post(self) -> None:
        """Test case for process_request_v0_generic_allowance_get_post

        Show the allowance of a user on a protocol
        """
        pass

    def test_process_request_v0_generic_allowance_set_any_post(self) -> None:
        """Test case for process_request_v0_generic_allowance_set_any_post

        Sets allowance for any arbitrary ERC20 token address.
        """
        pass

    def test_process_request_v0_generic_allowance_set_post(self) -> None:
        """Test case for process_request_v0_generic_allowance_set_post

        Change the allowance of a user on a protocol
        """
        pass

    def test_process_request_v0_generic_balance_get_post(self) -> None:
        """Test case for process_request_v0_generic_balance_get_post

        Get an address balance of a token
        """
        pass

    def test_process_request_v0_generic_ens_get_post(self) -> None:
        """Test case for process_request_v0_generic_ens_get_post

        Get the wallet address and registrant of an ENS name
        """
        pass

    def test_process_request_v0_generic_portfolio_get_post(self) -> None:
        """Test case for process_request_v0_generic_portfolio_get_post

        Get the portfolio details for a wallet addressincluding balances and values of all tokens.
        """
        pass

    def test_process_request_v0_generic_unwrap_weth_post(self) -> None:
        """Test case for process_request_v0_generic_unwrap_weth_post

        Change WETH into raw ETH
        """
        pass

    def test_process_request_v0_generic_visualize_portfolio_get_post(self) -> None:
        """Test case for process_request_v0_generic_visualize_portfolio_get_post

        Visualize the token portfolio of a wallet address as a pie chart
        """
        pass

    def test_process_request_v0_generic_wrap_eth_post(self) -> None:
        """Test case for process_request_v0_generic_wrap_eth_post

        Change raw ETH into WETH
        """
        pass


if __name__ == '__main__':
    unittest.main()
