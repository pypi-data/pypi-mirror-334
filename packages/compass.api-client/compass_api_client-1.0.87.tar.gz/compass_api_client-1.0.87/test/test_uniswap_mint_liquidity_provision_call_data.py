# coding: utf-8

"""
    Compass API

      <h3>With this API you can:</h3> <ul> <li><strong>Execute complex DeFi transactions:&nbsp; </strong>Swap, lend, borrow, stake, LP, and more, with high-level on-chain actions.</li> <li><strong>Stay secure &amp; non-custodial</strong> &ndash; Transactions are signed locally, and you retain full control.</li> <li><strong>Build AI &amp; automation workflows</strong> &ndash; Power AI agents, trading bots, yield products and DeFi applications with programmatic transaction execution. Integrate seamlessly into existing workflows.</li> <li><strong>Interact across multiple protocols &amp; chains</strong>&nbsp;&ndash; Spot, lending, staking on Ethereum, Arbitrum, Base. Many more to come!</li> </ul>  <h3 id=\"quick-links\" class=\"docs-chapter-header\"><a class=\"not-prose group hover:text-compass-pink transition-colors flex w-fit\" href=\"https://www.compasslabs.ai/api-docs#quick-links\">Quick links</a></h3> <ul> <li><a href=\"https://api.compasslabs.ai/\" target=\"_blank\" rel=\"noopener\">API reference</a></li> <li><a href=\"https://github.com/CompassLabs/compass_api_examples\" target=\"_blank\" rel=\"noopener\">5 min quickstart</a></li> <li><a href=\"https://discord.gg/qjP8dCYZ58\" target=\"_blank\" rel=\"noopener\">Discord</a></li> <li><a href=\"https://www.compasslabs.ai/\" target=\"_blank\" rel=\"noopener\">Compass Labs</a></li> </ul>

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from compass.api_client.models.uniswap_mint_liquidity_provision_call_data import UniswapMintLiquidityProvisionCallData

class TestUniswapMintLiquidityProvisionCallData(unittest.TestCase):
    """UniswapMintLiquidityProvisionCallData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UniswapMintLiquidityProvisionCallData:
        """Test UniswapMintLiquidityProvisionCallData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UniswapMintLiquidityProvisionCallData`
        """
        model = UniswapMintLiquidityProvisionCallData()
        if include_optional:
            return UniswapMintLiquidityProvisionCallData(
                token0 = '1INCH',
                token1 = '1INCH',
                fee = '0.01',
                tick_lower = 56,
                tick_upper = 56,
                amount0_desired = None,
                amount1_desired = None,
                amount0_min = None,
                amount1_min = None,
                recipient = ''
            )
        else:
            return UniswapMintLiquidityProvisionCallData(
                token0 = '1INCH',
                token1 = '1INCH',
                fee = '0.01',
                tick_lower = 56,
                tick_upper = 56,
                amount0_desired = None,
                amount1_desired = None,
                amount0_min = None,
                amount1_min = None,
        )
        """

    def testUniswapMintLiquidityProvisionCallData(self):
        """Test UniswapMintLiquidityProvisionCallData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
