[package]
name = "ergotree-ir"
version = "0.28.0"
license = "CC0-1.0"
authors = ["Denys Zadorozhnyi <denys@zadorozhnyi.com>"]
repository.workspace = true
edition.workspace = true
description = "ErgoTree IR, serialization"
exclude = ["proptest-regressions/*"]
readme = "README.md"

[lib]
crate-type = ["rlib"]

[dependencies]
sigma-ser = { workspace = true }
sigma-util = { workspace = true }
ergo-chain-types = { workspace = true }
k256 = { workspace = true }
elliptic-curve = { workspace = true }
thiserror = { workspace = true }
lazy_static = { workspace = true }
derive_more = { workspace = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
bs58 = { workspace = true }
base16 = { workspace = true }
num-bigint = { workspace = true }
bounded-vec = { workspace = true, features = ["serde"] }
num-traits = { workspace = true }
num-derive = { workspace = true }
num-integer = { workspace = true }
indexmap = { workspace = true }
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
serde_with = { workspace = true, optional = true }
bnum = { version = "0.12.0", features = ["numtraits"] }
impl-trait-for-tuples = "0.2.0"
strum = { version = "0.26.2", default-features = false, features = ["derive"] }
strum_macros = { version = "0.26.4", default-features = false }
miette = { workspace = true, optional = true }
hashbrown = { workspace = true }
core2 = { workspace = true }
foldhash = { version = "0.1.3", default-features = false }
[features]
default = ["json", "std"]
arbitrary = ["std", "proptest", "proptest-derive", "ergo-chain-types/arbitrary"]
json = [
    "serde",
    "serde_json",
    "serde_with",
    "bounded-vec/serde",
    "ergo-chain-types/json",
    "indexmap/serde",
]
std = ["core2/std", "dep:miette", "ergo-chain-types/std", "sigma-ser/std"]

[dev-dependencies]
sigma-test-util = { workspace = true }
rand = { workspace = true }
pretty_assertions = { workspace = true }
expect-test = { workspace = true }
