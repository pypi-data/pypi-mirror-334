[package]
name = "ergotree-interpreter"
version = "0.28.0"
license = "CC0-1.0"
authors = ["Denys Zadorozhnyi <denys@zadorozhnyi.com>"]
repository.workspace = true
edition.workspace = true
description = "ErgoTree interpreter"
exclude = ["proptest-regressions/*"]
readme = "README.md"

[lib]
crate-type = ["rlib"]

[dependencies]
sigma-util = { workspace = true }
sigma-ser = { workspace = true }
ergo-chain-types = { workspace = true }
ergotree-ir = { workspace = true }
indexmap = { workspace = true }
k256 = { workspace = true }
elliptic-curve = { workspace = true }
blake2 = { workspace = true }
rand = { workspace = true, optional = true }
lazy_static = { workspace = true }
thiserror = { workspace = true }
derive_more = { workspace = true }
num-traits = { workspace = true }
base16 = { workspace = true }
proptest-derive = { workspace = true, optional = true }
bytes = { workspace = true }
num-bigint = { workspace = true }
bounded-vec = { workspace = true }
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
serde_with = { workspace = true, optional = true }
proptest = { workspace = true, optional = true }
ergo_avltree_rust = { version = "0.1.1" }
gf2_192 = { version = "^0.28.0", path = "../gf2_192" }
miette = { workspace = true, optional = true }
hashbrown = { workspace = true }
core2 = { workspace = true }
[features]
json = [
    "serde",
    "serde_json",
    "serde_with",
    "bounded-vec/serde",
    "ergotree-ir/json",
    "ergo-chain-types/json",
]
default = ["json", "std"]
std = ["rand", "miette", "ergotree-ir/std"]
arbitrary = [
    "std",
    "proptest",
    "proptest-derive",
    "ergotree-ir/arbitrary",
    "ergo-chain-types/arbitrary",
    "gf2_192/arbitrary",
]

[dev-dependencies]
ergotree-ir = { workspace = true, features = ["arbitrary"] }
ergoscript-compiler = { workspace = true }
proptest = { workspace = true }
sigma-test-util = { workspace = true }
expect-test = { workspace = true }
