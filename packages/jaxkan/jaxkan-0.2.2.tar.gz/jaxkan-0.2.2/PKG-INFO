Metadata-Version: 2.2
Name: jaxkan
Version: 0.2.2
Summary: A JAX implementation of Kolmogorov-Arnold Networks
Author-email: Spyros Rigas <rigassp@gmail.com>, Michalis Papachristou <mixpap@phys.uoa.gr>
License: MIT License
        
        Copyright (c) 2024 Spyros Rigas, Michalis Papachristou
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Repository, https://github.com/srigas/jaxkan
Project-URL: Issues, https://github.com/srigas/jaxkan/issues
Keywords: JAX,NNX,KANs,Kolmogorov-Arnold,PIKAN
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=2.1.3
Requires-Dist: scipy>=1.14.1
Requires-Dist: jax[cpu]>=0.4.35
Requires-Dist: optax>=0.2.4
Requires-Dist: flax>=0.10.2
Provides-Extra: gpu
Requires-Dist: jax[cuda12]; extra == "gpu"
Provides-Extra: doc
Requires-Dist: jupyterlab; extra == "doc"
Requires-Dist: matplotlib; extra == "doc"
Requires-Dist: scikit-learn; extra == "doc"
Requires-Dist: pytest; extra == "doc"
Requires-Dist: sphinx; extra == "doc"
Requires-Dist: sphinx-rtd-theme; extra == "doc"
Requires-Dist: sphinx-autobuild; extra == "doc"
Requires-Dist: myst-parser; extra == "doc"
Requires-Dist: sphinx_design; extra == "doc"
Requires-Dist: sphinx-autodoc-typehints; extra == "doc"
Requires-Dist: nbsphinx; extra == "doc"
Requires-Dist: nbsphinx-link; extra == "doc"
Requires-Dist: pandoc; extra == "doc"

[![Doc](https://img.shields.io/badge/docs-dev-blue.svg)](https://jaxkan.readthedocs.io/)
[![License](https://img.shields.io/github/license/srigas/jaxkan)](https://github.com/srigas/jaxKAN/blob/main/LICENSE)
[![Run Tests](https://github.com/srigas/jaxKAN/actions/workflows/test.yml/badge.svg)](https://github.com/srigas/jaxKAN/actions/workflows/test.yml)
[![PyPI version](https://img.shields.io/pypi/v/jaxkan.svg)](https://pypi.org/project/jaxkan/)

# jaxKAN

jaxKAN is a Python package designed to enable the training of Kolmogorov-Arnold Networks (KANs) using the JAX framework. Built on Flax's NNX module, jaxKAN provides a collection of KAN layers that serve as foundational building blocks for various KAN architectures, such as the EfficientKAN and the ChebyKAN. While it includes standard features like initialization and forward pass methods, the KAN class in jaxKAN introduces an `extend_grids` method, which facilitates the extension of the grids for all layers in the network, irrespective of how those grids are defined. For instance, in the case of ChebyKAN, where a traditional grid concept doesn't exist, the method extends the order of the Chebyshev polynomials utilized in the model.


## Documentation

Extensive documentation on jaxKAN, including installation & contributing guidelines, API reference and tutorials, can be found [here](https://jaxkan.readthedocs.io/).


## Contributing

We warmly welcome community contributions to jaxKAN! For details on the types of contributions that will help jaxKAN evolve, as well as guidelines on how to contribute, visit [this](https://jaxkan.readthedocs.io/en/latest/contributing.html) page of our documentation.


## Citation

There is a JOSS paper currently submitted under review for jaxKAN. Until it is published, if you utilized `jaxKAN` for your own academic work, please consider using the following citation, which is the paper in which the framework was first introduced for PIKANs:

```
@article{10763509,
      author = {Rigas, Spyros and Papachristou, Michalis and Papadopoulos, Theofilos and Anagnostopoulos, Fotios and Alexandridis, Georgios},
      journal = {IEEE Access}, 
      title = {Adaptive Training of Grid-Dependent Physics-Informed Kolmogorov-Arnold Networks}, 
      year = {2024},
      volume = {12},
      pages = {176982-176998},
      doi = {10.1109/ACCESS.2024.3504962}
}
```
