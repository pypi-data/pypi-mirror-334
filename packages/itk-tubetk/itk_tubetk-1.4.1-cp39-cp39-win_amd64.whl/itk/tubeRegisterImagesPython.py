# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeRegisterImagesPython
else:
    import _tubeRegisterImagesPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.ITKCommonBasePython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkBSplineTransformPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkBSplineBaseTransformPython
import itk.itkBSplineInterpolationWeightFunctionPython
import itk.itkFunctionBasePython
import itk.itkContinuousIndexPython
import itk.itkTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkSpatialObjectBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython

def tubeRegisterImagesD2_New():
    return tubeRegisterImagesD2.New()

class tubeRegisterImagesD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesD2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesD2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageD2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageD2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageD2

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageD2 const *
        matrixTransform: itkAffineTransformD2 const *
        defaultPixelValue: double
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageD2

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageD2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD2 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD23 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD22"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesD2

        Create a new object of the class tubeRegisterImagesD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesD2 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesD2_swigregister(tubeRegisterImagesD2)

def tubeRegisterImagesD3_New():
    return tubeRegisterImagesD3.New()

class tubeRegisterImagesD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesD3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesD3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageD3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageD3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageD3

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageD3 const *
        matrixTransform: itkAffineTransformD3 const *
        defaultPixelValue: double
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageD3

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageD3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD3 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD33 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesD3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesD3

        Create a new object of the class tubeRegisterImagesD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesD3 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesD3_swigregister(tubeRegisterImagesD3)

def tubeRegisterImagesF2_New():
    return tubeRegisterImagesF2.New()

class tubeRegisterImagesF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesF2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesF2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageF2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageF2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageF2

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageF2 const *
        matrixTransform: itkAffineTransformD2 const *
        defaultPixelValue: float
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageF2

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: float

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageF2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageF2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageF2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageF2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageF2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageF2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageF2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD2 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD23 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD22"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesF2

        Create a new object of the class tubeRegisterImagesF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesF2 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesF2_swigregister(tubeRegisterImagesF2)

def tubeRegisterImagesF3_New():
    return tubeRegisterImagesF3.New()

class tubeRegisterImagesF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesF3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesF3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageF3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageF3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageF3

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageF3 const *
        matrixTransform: itkAffineTransformD3 const *
        defaultPixelValue: float
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageF3

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: float

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageF3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageF3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD3 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD33 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesF3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesF3

        Create a new object of the class tubeRegisterImagesF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesF3 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesF3_swigregister(tubeRegisterImagesF3)

def tubeRegisterImagesSS2_New():
    return tubeRegisterImagesSS2.New()

class tubeRegisterImagesSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesSS2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesSS2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageSS2

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageSS2 const *
        matrixTransform: itkAffineTransformD2 const *
        defaultPixelValue: short
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageSS2

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: short

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageSS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageSS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageSS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageSS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageSS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageSS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD2 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD23 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD22"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesSS2

        Create a new object of the class tubeRegisterImagesSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesSS2 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesSS2_swigregister(tubeRegisterImagesSS2)

def tubeRegisterImagesSS3_New():
    return tubeRegisterImagesSS3.New()

class tubeRegisterImagesSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesSS3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesSS3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageSS3

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageSS3 const *
        matrixTransform: itkAffineTransformD3 const *
        defaultPixelValue: short
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageSS3

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: short

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageSS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD3 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD33 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesSS3

        Create a new object of the class tubeRegisterImagesSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesSS3 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesSS3_swigregister(tubeRegisterImagesSS3)

def tubeRegisterImagesUC2_New():
    return tubeRegisterImagesUC2.New()

class tubeRegisterImagesUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesUC2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesUC2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageUC2

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageUC2 const *
        matrixTransform: itkAffineTransformD2 const *
        defaultPixelValue: unsigned char
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageUC2

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: unsigned char

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageUC2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageUC2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageUC2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageUC2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageUC2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageUC2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD2 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD23 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD22"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesUC2

        Create a new object of the class tubeRegisterImagesUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesUC2 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesUC2_swigregister(tubeRegisterImagesUC2)

def tubeRegisterImagesUC3_New():
    return tubeRegisterImagesUC3.New()

class tubeRegisterImagesUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesUC3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesUC3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageUC3

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageUC3 const *
        matrixTransform: itkAffineTransformD3 const *
        defaultPixelValue: unsigned char
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageUC3

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: unsigned char

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageUC3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD3 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD33 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesUC3

        Create a new object of the class tubeRegisterImagesUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesUC3 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesUC3_swigregister(tubeRegisterImagesUC3)

def tubeRegisterImagesUS2_New():
    return tubeRegisterImagesUS2.New()

class tubeRegisterImagesUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesUS2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesUS2_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD2

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageUS2

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageUS2 const *
        matrixTransform: itkAffineTransformD2 const *
        defaultPixelValue: unsigned short
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageUS2

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: unsigned short

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageUS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageUS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageUS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageUS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageUS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageUS2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD2 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD23 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD22"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD2"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD23"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesUS2

        Create a new object of the class tubeRegisterImagesUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesUS2 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesUS2_swigregister(tubeRegisterImagesUS2)

def tubeRegisterImagesUS3_New():
    return tubeRegisterImagesUS3.New()

class tubeRegisterImagesUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeRegisterImagesUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeRegisterImagesUS3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeRegisterImagesUS3_Pointer"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_Clone(self)

    def LoadFixedImage(self, value):
        r"""
        LoadFixedImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadFixedImage(self, value)

    def SetFixedImage(self, value):
        r"""
        SetFixedImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedImage(self, value)

    def LoadMovingImage(self, value):
        r"""
        LoadMovingImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadMovingImage(self, value)

    def SetMovingImage(self, value):
        r"""
        SetMovingImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingImage(self, value)

    def SetRandomNumberSeed(self, value):
        r"""
        SetRandomNumberSeed(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRandomNumberSeed(self, value)

    def GetRandomNumberSeed(self):
        r"""GetRandomNumberSeed(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRandomNumberSeed(self)

    def SetUseFixedImageMaskObject(self, value):
        r"""
        SetUseFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseFixedImageMaskObject(self, value)

    def GetUseFixedImageMaskObject(self):
        r"""GetUseFixedImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseFixedImageMaskObject(self)

    def SetFixedImageMaskObject(self, value):
        r"""
        SetFixedImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedImageMaskObject(self, value)

    def GetFixedImageMaskObject(self):
        r"""GetFixedImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFixedImageMaskObject(self)

    def SetUseMovingImageMaskObject(self, value):
        r"""
        SetUseMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseMovingImageMaskObject(self, value)

    def GetUseMovingImageMaskObject(self):
        r"""GetUseMovingImageMaskObject(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseMovingImageMaskObject(self)

    def SetMovingImageMaskObject(self, value):
        r"""
        SetMovingImageMaskObject(self, value)

        Parameters
        ----------
        value: itkSpatialObject3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingImageMaskObject(self, value)

    def GetMovingImageMaskObject(self):
        r"""GetMovingImageMaskObject(self) -> itkSpatialObject3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMovingImageMaskObject(self)

    def SetUseRegionOfInterest(self, value):
        r"""
        SetUseRegionOfInterest(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseRegionOfInterest(self, value)

    def GetUseRegionOfInterest(self):
        r"""GetUseRegionOfInterest(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseRegionOfInterest(self)

    def SetRegionOfInterestPoint1(self, value):
        r"""
        SetRegionOfInterestPoint1(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegionOfInterestPoint1(self, value)

    def GetRegionOfInterestPoint1(self):
        r"""GetRegionOfInterestPoint1(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRegionOfInterestPoint1(self)

    def SetRegionOfInterestPoint2(self, value):
        r"""
        SetRegionOfInterestPoint2(self, value)

        Parameters
        ----------
        value: itkPointD3

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegionOfInterestPoint2(self, value)

    def GetRegionOfInterestPoint2(self):
        r"""GetRegionOfInterestPoint2(self) -> itkPointD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRegionOfInterestPoint2(self)

    def SetSampleFromOverlap(self, value):
        r"""
        SetSampleFromOverlap(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetSampleFromOverlap(self, value)

    def GetSampleFromOverlap(self):
        r"""GetSampleFromOverlap(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetSampleFromOverlap(self)

    def SetSampleIntensityPortion(self, value):
        r"""
        SetSampleIntensityPortion(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetSampleIntensityPortion(self, value)

    def GetSampleIntensityPortion(self):
        r"""GetSampleIntensityPortion(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetSampleIntensityPortion(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_Initialize(self)

    def ResampleImage(self, *args):
        r"""
        ResampleImage(self, interp="LINEAR", movingImage=None, matrixTransform=None, defaultPixelValue=0, portionOfTransformToApply=1.) -> itkImageUS3

        Parameters
        ----------
        interp: std::string
        movingImage: itkImageUS3 const *
        matrixTransform: itkAffineTransformD3 const *
        defaultPixelValue: unsigned short
        portionOfTransformToApply: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_ResampleImage(self, *args)

    def GetFinalMovingImage(self, *args):
        r"""
        GetFinalMovingImage(self, interp="LINEAR_INTERPOLATION", defaultPixelValue=0) -> itkImageUS3

        Parameters
        ----------
        interp: std::string
        defaultPixelValue: unsigned short

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFinalMovingImage(self, *args)

    def LoadBaselineImage(self, value):
        r"""
        LoadBaselineImage(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadBaselineImage(self, value)

    def SetBaselineImage(self, value):
        r"""
        SetBaselineImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineImage(self, value)

    def SetBaselineNumberOfFailedPixelsTolerance(self, value):
        r"""
        SetBaselineNumberOfFailedPixelsTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineNumberOfFailedPixelsTolerance(self, value)

    def SetBaselineIntensityTolerance(self, value):
        r"""
        SetBaselineIntensityTolerance(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineIntensityTolerance(self, value)

    def SetBaselineRadiusTolerance(self, value):
        r"""
        SetBaselineRadiusTolerance(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBaselineRadiusTolerance(self, value)

    def ComputeBaselineDifference(self):
        r"""ComputeBaselineDifference(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_ComputeBaselineDifference(self)

    def GetBaselineDifferenceImage(self):
        r"""GetBaselineDifferenceImage(self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineDifferenceImage(self)

    def GetBaselineResampledMovingImage(self):
        r"""GetBaselineResampledMovingImage(self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineResampledMovingImage(self)

    def GetBaselineNumberOfFailedPixels(self):
        r"""GetBaselineNumberOfFailedPixels(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineNumberOfFailedPixels(self)

    def GetBaselineTestPassed(self):
        r"""GetBaselineTestPassed(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBaselineTestPassed(self)

    def SetEnableLoadedRegistration(self, value):
        r"""
        SetEnableLoadedRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableLoadedRegistration(self, value)

    def GetEnableLoadedRegistration(self):
        r"""GetEnableLoadedRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableLoadedRegistration(self)

    def EnableLoadedRegistrationOn(self):
        r"""EnableLoadedRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableLoadedRegistrationOn(self)

    def EnableLoadedRegistrationOff(self):
        r"""EnableLoadedRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableLoadedRegistrationOff(self)

    def SetEnableInitialRegistration(self, value):
        r"""
        SetEnableInitialRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableInitialRegistration(self, value)

    def GetEnableInitialRegistration(self):
        r"""GetEnableInitialRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableInitialRegistration(self)

    def EnableInitialRegistrationOn(self):
        r"""EnableInitialRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableInitialRegistrationOn(self)

    def EnableInitialRegistrationOff(self):
        r"""EnableInitialRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableInitialRegistrationOff(self)

    def SetEnableRigidRegistration(self, value):
        r"""
        SetEnableRigidRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableRigidRegistration(self, value)

    def GetEnableRigidRegistration(self):
        r"""GetEnableRigidRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableRigidRegistration(self)

    def EnableRigidRegistrationOn(self):
        r"""EnableRigidRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableRigidRegistrationOn(self)

    def EnableRigidRegistrationOff(self):
        r"""EnableRigidRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableRigidRegistrationOff(self)

    def SetEnableAffineRegistration(self, value):
        r"""
        SetEnableAffineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableAffineRegistration(self, value)

    def GetEnableAffineRegistration(self):
        r"""GetEnableAffineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableAffineRegistration(self)

    def EnableAffineRegistrationOn(self):
        r"""EnableAffineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableAffineRegistrationOn(self)

    def EnableAffineRegistrationOff(self):
        r"""EnableAffineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableAffineRegistrationOff(self)

    def SetEnableBSplineRegistration(self, value):
        r"""
        SetEnableBSplineRegistration(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetEnableBSplineRegistration(self, value)

    def GetEnableBSplineRegistration(self):
        r"""GetEnableBSplineRegistration(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetEnableBSplineRegistration(self)

    def EnableBSplineRegistrationOn(self):
        r"""EnableBSplineRegistrationOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableBSplineRegistrationOn(self)

    def EnableBSplineRegistrationOff(self):
        r"""EnableBSplineRegistrationOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_EnableBSplineRegistrationOff(self)

    def SetRegistration(self, reg):
        r"""
        SetRegistration(self, reg)

        Parameters
        ----------
        reg: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRegistration(self, reg)

    def SetInterpolation(self, interp):
        r"""
        SetInterpolation(self, interp)

        Parameters
        ----------
        interp: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetInterpolation(self, interp)

    def SetMetric(self, metric):
        r"""
        SetMetric(self, metric)

        Parameters
        ----------
        metric: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMetric(self, metric)

    def SetUseEvolutionaryOptimization(self, value):
        r"""
        SetUseEvolutionaryOptimization(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetUseEvolutionaryOptimization(self, value)

    def GetUseEvolutionaryOptimization(self):
        r"""GetUseEvolutionaryOptimization(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetUseEvolutionaryOptimization(self)

    def SetExpectedOffsetMagnitude(self, value):
        r"""
        SetExpectedOffsetMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedOffsetMagnitude(self, value)

    def GetExpectedOffsetMagnitude(self):
        r"""GetExpectedOffsetMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedOffsetMagnitude(self)

    def SetExpectedRotationMagnitude(self, value):
        r"""
        SetExpectedRotationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedRotationMagnitude(self, value)

    def GetExpectedRotationMagnitude(self):
        r"""GetExpectedRotationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedRotationMagnitude(self)

    def SetExpectedScaleMagnitude(self, value):
        r"""
        SetExpectedScaleMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedScaleMagnitude(self, value)

    def GetExpectedScaleMagnitude(self):
        r"""GetExpectedScaleMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedScaleMagnitude(self)

    def SetExpectedSkewMagnitude(self, value):
        r"""
        SetExpectedSkewMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedSkewMagnitude(self, value)

    def GetExpectedSkewMagnitude(self):
        r"""GetExpectedSkewMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedSkewMagnitude(self)

    def SetExpectedDeformationMagnitude(self, value):
        r"""
        SetExpectedDeformationMagnitude(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetExpectedDeformationMagnitude(self, value)

    def GetExpectedDeformationMagnitude(self):
        r"""GetExpectedDeformationMagnitude(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetExpectedDeformationMagnitude(self)

    def GetCurrentMatrixTransform(self):
        r"""GetCurrentMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentMatrixTransform(self)

    def GetCurrentBSplineTransform(self):
        r"""GetCurrentBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentBSplineTransform(self)

    def GetCurrentMovingImage(self):
        r"""GetCurrentMovingImage(self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetCurrentMovingImage(self)

    def GetLoadedTransformResampledImage(self):
        r"""GetLoadedTransformResampledImage(self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedTransformResampledImage(self)

    def GetMatrixTransformResampledImage(self):
        r"""GetMatrixTransformResampledImage(self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMatrixTransformResampledImage(self)

    def GetBSplineTransformResampledImage(self):
        r"""GetBSplineTransformResampledImage(self) -> itkImageUS3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTransformResampledImage(self)

    def GetFinalMetricValue(self):
        r"""GetFinalMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetFinalMetricValue(self)

    def SetReportProgress(self, value):
        r"""
        SetReportProgress(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetReportProgress(self, value)

    def GetReportProgress(self):
        r"""GetReportProgress(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetReportProgress(self)

    def ReportProgressOn(self):
        r"""ReportProgressOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_ReportProgressOn(self)

    def ReportProgressOff(self):
        r"""ReportProgressOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_ReportProgressOff(self)

    def SetMinimizeMemory(self, value):
        r"""
        SetMinimizeMemory(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMinimizeMemory(self, value)

    def GetMinimizeMemory(self):
        r"""GetMinimizeMemory(self) -> bool"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetMinimizeMemory(self)

    def MinimizeMemoryOn(self):
        r"""MinimizeMemoryOn(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_MinimizeMemoryOn(self)

    def MinimizeMemoryOff(self):
        r"""MinimizeMemoryOff(self)"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_MinimizeMemoryOff(self)

    def LoadTransform(self, transform, invertLoadedTransform=False):
        r"""
        LoadTransform(self, transform, invertLoadedTransform=False)

        Parameters
        ----------
        transform: std::string const &
        invertLoadedTransform: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_LoadTransform(self, transform, invertLoadedTransform)

    def SaveTransform(self, value):
        r"""
        SaveTransform(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SaveTransform(self, value)

    def SaveDisplacementField(self, value):
        r"""
        SaveDisplacementField(self, value)

        Parameters
        ----------
        value: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SaveDisplacementField(self, value)

    def SetLoadedMatrixTransform(self, tfm, invert=False):
        r"""
        SetLoadedMatrixTransform(self, tfm, invert=False)

        Parameters
        ----------
        tfm: itkAffineTransformD3 const &
        invert: bool

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetLoadedMatrixTransform(self, tfm, invert)

    def GetLoadedMatrixTransform(self):
        r"""GetLoadedMatrixTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedMatrixTransform(self)

    def SetLoadedBSplineTransform(self, value):
        r"""
        SetLoadedBSplineTransform(self, value)

        Parameters
        ----------
        value: itkBSplineTransformD33 const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetLoadedBSplineTransform(self, value)

    def GetLoadedBSplineTransform(self):
        r"""GetLoadedBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetLoadedBSplineTransform(self)

    def SetInitialMethodEnum(self, initialMethod):
        r"""
        SetInitialMethodEnum(self, initialMethod)

        Parameters
        ----------
        initialMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetInitialMethodEnum(self, initialMethod)

    def GetInitialMethodEnum(self):
        r"""GetInitialMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetInitialMethodEnum(self)

    def SetFixedLandmarks(self, value):
        r"""
        SetFixedLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetFixedLandmarks(self, value)

    def SetMovingLandmarks(self, value):
        r"""
        SetMovingLandmarks(self, value)

        Parameters
        ----------
        value: std::vector< std::vector< float,std::allocator< float > >,std::allocator< std::vector< float,std::allocator< float > > > >

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetMovingLandmarks(self, value)

    def SetRigidSamplingRatio(self, value):
        r"""
        SetRigidSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidSamplingRatio(self, value)

    def GetRigidSamplingRatio(self):
        r"""GetRigidSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidSamplingRatio(self)

    def SetRigidTargetError(self, value):
        r"""
        SetRigidTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidTargetError(self, value)

    def GetRigidTargetError(self):
        r"""GetRigidTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidTargetError(self)

    def SetRigidMaxIterations(self, value):
        r"""
        SetRigidMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidMaxIterations(self, value)

    def GetRigidMaxIterations(self):
        r"""GetRigidMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMaxIterations(self)

    def SetRigidMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetRigidMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidMetricMethodEnum(self, rigidMetricMethod)

    def GetRigidMetricMethodEnum(self):
        r"""GetRigidMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMetricMethodEnum(self)

    def SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetRigidInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetRigidInterpolationMethodEnum(self):
        r"""GetRigidInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidInterpolationMethodEnum(self)

    def GetRigidTransform(self):
        r"""GetRigidTransform(self) -> itkMatrixOffsetTransformBaseD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidTransform(self)

    def GetRigidMetricValue(self):
        r"""GetRigidMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetRigidMetricValue(self)

    def SetAffineSamplingRatio(self, value):
        r"""
        SetAffineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineSamplingRatio(self, value)

    def GetAffineSamplingRatio(self):
        r"""GetAffineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineSamplingRatio(self)

    def SetAffineTargetError(self, value):
        r"""
        SetAffineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineTargetError(self, value)

    def GetAffineTargetError(self):
        r"""GetAffineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineTargetError(self)

    def SetAffineMaxIterations(self, value):
        r"""
        SetAffineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineMaxIterations(self, value)

    def GetAffineMaxIterations(self):
        r"""GetAffineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMaxIterations(self)

    def SetAffineMetricMethodEnum(self, rigidMetricMethod):
        r"""
        SetAffineMetricMethodEnum(self, rigidMetricMethod)

        Parameters
        ----------
        rigidMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineMetricMethodEnum(self, rigidMetricMethod)

    def GetAffineMetricMethodEnum(self):
        r"""GetAffineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMetricMethodEnum(self)

    def SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod):
        r"""
        SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

        Parameters
        ----------
        rigidInterpolationMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetAffineInterpolationMethodEnum(self, rigidInterpolationMethod)

    def GetAffineInterpolationMethodEnum(self):
        r"""GetAffineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineInterpolationMethodEnum(self)

    def GetAffineTransform(self):
        r"""GetAffineTransform(self) -> itkAffineTransformD3"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineTransform(self)

    def GetAffineMetricValue(self):
        r"""GetAffineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetAffineMetricValue(self)

    def SetBSplineSamplingRatio(self, value):
        r"""
        SetBSplineSamplingRatio(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineSamplingRatio(self, value)

    def GetBSplineSamplingRatio(self):
        r"""GetBSplineSamplingRatio(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineSamplingRatio(self)

    def SetBSplineTargetError(self, value):
        r"""
        SetBSplineTargetError(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineTargetError(self, value)

    def GetBSplineTargetError(self):
        r"""GetBSplineTargetError(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTargetError(self)

    def SetBSplineMaxIterations(self, value):
        r"""
        SetBSplineMaxIterations(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineMaxIterations(self, value)

    def GetBSplineMaxIterations(self):
        r"""GetBSplineMaxIterations(self) -> unsigned int"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMaxIterations(self)

    def SetBSplineControlPointPixelSpacing(self, value):
        r"""
        SetBSplineControlPointPixelSpacing(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineControlPointPixelSpacing(self, value)

    def GetBSplineControlPointPixelSpacing(self):
        r"""GetBSplineControlPointPixelSpacing(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineControlPointPixelSpacing(self)

    def SetBSplineMetricMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineMetricMethodEnum(self, bSplineMetricMethod)

    def GetBSplineMetricMethodEnum(self):
        r"""GetBSplineMetricMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMetricMethodEnum(self)

    def SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod):
        r"""
        SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

        Parameters
        ----------
        bSplineMetricMethod: std::string const &

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_SetBSplineInterpolationMethodEnum(self, bSplineMetricMethod)

    def GetBSplineInterpolationMethodEnum(self):
        r"""GetBSplineInterpolationMethodEnum(self) -> std::string const"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineInterpolationMethodEnum(self)

    def GetBSplineTransform(self):
        r"""GetBSplineTransform(self) -> itkBSplineTransformD33"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineTransform(self)

    def GetBSplineMetricValue(self):
        r"""GetBSplineMetricValue(self) -> double"""
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_GetBSplineMetricValue(self)
    __swig_destroy__ = _tubeRegisterImagesPython.delete_tubeRegisterImagesUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeRegisterImagesUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeRegisterImagesPython.tubeRegisterImagesUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeRegisterImagesUS3

        Create a new object of the class tubeRegisterImagesUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeRegisterImagesUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeRegisterImagesUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeRegisterImagesUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeRegisterImagesUS3 in _tubeRegisterImagesPython:
_tubeRegisterImagesPython.tubeRegisterImagesUS3_swigregister(tubeRegisterImagesUS3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def register_images(*args,  fixed_image: itkt.Image=..., moving_image: itkt.Image=..., random_number_seed: int=..., use_fixed_image_mask_object: bool=..., fixed_image_mask_object=..., use_moving_image_mask_object: bool=..., moving_image_mask_object=..., use_region_of_interest: bool=..., region_of_interest_point1: Sequence[float]=..., region_of_interest_point2: Sequence[float]=..., sample_from_overlap: bool=..., sample_intensity_portion: float=..., baseline_image: itkt.Image=..., baseline_number_of_failed_pixels_tolerance: int=..., baseline_intensity_tolerance: float=..., baseline_radius_tolerance: int=..., enable_loaded_registration: bool=..., enable_initial_registration: bool=..., enable_rigid_registration: bool=..., enable_affine_registration: bool=..., enable_b_spline_registration: bool=..., registration: str=..., interpolation: str=..., metric: str=..., use_evolutionary_optimization: bool=..., expected_offset_magnitude: float=..., expected_rotation_magnitude: float=..., expected_scale_magnitude: float=..., expected_skew_magnitude: float=..., expected_deformation_magnitude: float=..., report_progress: bool=..., minimize_memory: bool=..., loaded_matrix_transform=..., loaded_b_spline_transform=..., initial_method_enum: str=..., fixed_landmarks=..., moving_landmarks=..., rigid_sampling_ratio: float=..., rigid_target_error: float=..., rigid_max_iterations: int=..., rigid_metric_method_enum: str=..., rigid_interpolation_method_enum: str=..., affine_sampling_ratio: float=..., affine_target_error: float=..., affine_max_iterations: int=..., affine_metric_method_enum: str=..., affine_interpolation_method_enum: str=..., b_spline_sampling_ratio: float=..., b_spline_target_error: float=..., b_spline_max_iterations: int=..., b_spline_control_point_pixel_spacing: float=..., b_spline_metric_method_enum: str=..., b_spline_interpolation_method_enum: str=...,**kwargs):
    """Functional interface for RegisterImages"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image,'random_number_seed':random_number_seed,'use_fixed_image_mask_object':use_fixed_image_mask_object,'fixed_image_mask_object':fixed_image_mask_object,'use_moving_image_mask_object':use_moving_image_mask_object,'moving_image_mask_object':moving_image_mask_object,'use_region_of_interest':use_region_of_interest,'region_of_interest_point1':region_of_interest_point1,'region_of_interest_point2':region_of_interest_point2,'sample_from_overlap':sample_from_overlap,'sample_intensity_portion':sample_intensity_portion,'baseline_image':baseline_image,'baseline_number_of_failed_pixels_tolerance':baseline_number_of_failed_pixels_tolerance,'baseline_intensity_tolerance':baseline_intensity_tolerance,'baseline_radius_tolerance':baseline_radius_tolerance,'enable_loaded_registration':enable_loaded_registration,'enable_initial_registration':enable_initial_registration,'enable_rigid_registration':enable_rigid_registration,'enable_affine_registration':enable_affine_registration,'enable_b_spline_registration':enable_b_spline_registration,'registration':registration,'interpolation':interpolation,'metric':metric,'use_evolutionary_optimization':use_evolutionary_optimization,'expected_offset_magnitude':expected_offset_magnitude,'expected_rotation_magnitude':expected_rotation_magnitude,'expected_scale_magnitude':expected_scale_magnitude,'expected_skew_magnitude':expected_skew_magnitude,'expected_deformation_magnitude':expected_deformation_magnitude,'report_progress':report_progress,'minimize_memory':minimize_memory,'loaded_matrix_transform':loaded_matrix_transform,'loaded_b_spline_transform':loaded_b_spline_transform,'initial_method_enum':initial_method_enum,'fixed_landmarks':fixed_landmarks,'moving_landmarks':moving_landmarks,'rigid_sampling_ratio':rigid_sampling_ratio,'rigid_target_error':rigid_target_error,'rigid_max_iterations':rigid_max_iterations,'rigid_metric_method_enum':rigid_metric_method_enum,'rigid_interpolation_method_enum':rigid_interpolation_method_enum,'affine_sampling_ratio':affine_sampling_ratio,'affine_target_error':affine_target_error,'affine_max_iterations':affine_max_iterations,'affine_metric_method_enum':affine_metric_method_enum,'affine_interpolation_method_enum':affine_interpolation_method_enum,'b_spline_sampling_ratio':b_spline_sampling_ratio,'b_spline_target_error':b_spline_target_error,'b_spline_max_iterations':b_spline_max_iterations,'b_spline_control_point_pixel_spacing':b_spline_control_point_pixel_spacing,'b_spline_metric_method_enum':b_spline_metric_method_enum,'b_spline_interpolation_method_enum':b_spline_interpolation_method_enum }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.RegisterImages.New(*args, **kwargs)

    return instance.__internal_call__()

def register_images_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TubeTK.RegisterImages
    register_images.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    register_images.__doc__ = filter_object.__doc__



