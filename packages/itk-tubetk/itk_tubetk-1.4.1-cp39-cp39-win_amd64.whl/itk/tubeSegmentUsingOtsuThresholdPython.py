# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeSegmentUsingOtsuThresholdPython
else:
    import _tubeSegmentUsingOtsuThresholdPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.ITKCommonBasePython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython

def tubeSegmentUsingOtsuThresholdD2SS_New():
    return tubeSegmentUsingOtsuThresholdD2SS.New()

class tubeSegmentUsingOtsuThresholdD2SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD2SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD2SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD2SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdD2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD2SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2SS_swigregister(tubeSegmentUsingOtsuThresholdD2SS)

def tubeSegmentUsingOtsuThresholdD2UC_New():
    return tubeSegmentUsingOtsuThresholdD2UC.New()

class tubeSegmentUsingOtsuThresholdD2UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD2UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD2UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD2UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdD2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD2UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2UC_swigregister(tubeSegmentUsingOtsuThresholdD2UC)

def tubeSegmentUsingOtsuThresholdD2US_New():
    return tubeSegmentUsingOtsuThresholdD2US.New()

class tubeSegmentUsingOtsuThresholdD2US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD2US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD2US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD2US

        Create a new object of the class tubeSegmentUsingOtsuThresholdD2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD2US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD2US_swigregister(tubeSegmentUsingOtsuThresholdD2US)

def tubeSegmentUsingOtsuThresholdD3SS_New():
    return tubeSegmentUsingOtsuThresholdD3SS.New()

class tubeSegmentUsingOtsuThresholdD3SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD3SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD3SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD3SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdD3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD3SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3SS_swigregister(tubeSegmentUsingOtsuThresholdD3SS)

def tubeSegmentUsingOtsuThresholdD3UC_New():
    return tubeSegmentUsingOtsuThresholdD3UC.New()

class tubeSegmentUsingOtsuThresholdD3UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD3UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD3UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD3UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdD3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD3UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3UC_swigregister(tubeSegmentUsingOtsuThresholdD3UC)

def tubeSegmentUsingOtsuThresholdD3US_New():
    return tubeSegmentUsingOtsuThresholdD3US.New()

class tubeSegmentUsingOtsuThresholdD3US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD3US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD3US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD3US

        Create a new object of the class tubeSegmentUsingOtsuThresholdD3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD3US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD3US_swigregister(tubeSegmentUsingOtsuThresholdD3US)

def tubeSegmentUsingOtsuThresholdD4SS_New():
    return tubeSegmentUsingOtsuThresholdD4SS.New()

class tubeSegmentUsingOtsuThresholdD4SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD4SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD4SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD4SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdD4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD4SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4SS_swigregister(tubeSegmentUsingOtsuThresholdD4SS)

def tubeSegmentUsingOtsuThresholdD4UC_New():
    return tubeSegmentUsingOtsuThresholdD4UC.New()

class tubeSegmentUsingOtsuThresholdD4UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD4UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD4UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD4UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdD4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD4UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4UC_swigregister(tubeSegmentUsingOtsuThresholdD4UC)

def tubeSegmentUsingOtsuThresholdD4US_New():
    return tubeSegmentUsingOtsuThresholdD4US.New()

class tubeSegmentUsingOtsuThresholdD4US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdD4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdD4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdD4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: double

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdD4US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdD4US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdD4US

        Create a new object of the class tubeSegmentUsingOtsuThresholdD4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdD4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdD4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdD4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdD4US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdD4US_swigregister(tubeSegmentUsingOtsuThresholdD4US)

def tubeSegmentUsingOtsuThresholdF2SS_New():
    return tubeSegmentUsingOtsuThresholdF2SS.New()

class tubeSegmentUsingOtsuThresholdF2SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF2SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF2SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF2SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdF2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF2SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2SS_swigregister(tubeSegmentUsingOtsuThresholdF2SS)

def tubeSegmentUsingOtsuThresholdF2UC_New():
    return tubeSegmentUsingOtsuThresholdF2UC.New()

class tubeSegmentUsingOtsuThresholdF2UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF2UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF2UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF2UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdF2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF2UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2UC_swigregister(tubeSegmentUsingOtsuThresholdF2UC)

def tubeSegmentUsingOtsuThresholdF2US_New():
    return tubeSegmentUsingOtsuThresholdF2US.New()

class tubeSegmentUsingOtsuThresholdF2US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF2US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF2US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF2US

        Create a new object of the class tubeSegmentUsingOtsuThresholdF2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF2US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF2US_swigregister(tubeSegmentUsingOtsuThresholdF2US)

def tubeSegmentUsingOtsuThresholdF3SS_New():
    return tubeSegmentUsingOtsuThresholdF3SS.New()

class tubeSegmentUsingOtsuThresholdF3SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF3SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF3SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF3SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdF3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF3SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3SS_swigregister(tubeSegmentUsingOtsuThresholdF3SS)

def tubeSegmentUsingOtsuThresholdF3UC_New():
    return tubeSegmentUsingOtsuThresholdF3UC.New()

class tubeSegmentUsingOtsuThresholdF3UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF3UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF3UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF3UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdF3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF3UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3UC_swigregister(tubeSegmentUsingOtsuThresholdF3UC)

def tubeSegmentUsingOtsuThresholdF3US_New():
    return tubeSegmentUsingOtsuThresholdF3US.New()

class tubeSegmentUsingOtsuThresholdF3US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF3US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF3US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF3US

        Create a new object of the class tubeSegmentUsingOtsuThresholdF3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF3US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF3US_swigregister(tubeSegmentUsingOtsuThresholdF3US)

def tubeSegmentUsingOtsuThresholdF4SS_New():
    return tubeSegmentUsingOtsuThresholdF4SS.New()

class tubeSegmentUsingOtsuThresholdF4SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF4SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF4SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF4SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdF4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF4SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4SS_swigregister(tubeSegmentUsingOtsuThresholdF4SS)

def tubeSegmentUsingOtsuThresholdF4UC_New():
    return tubeSegmentUsingOtsuThresholdF4UC.New()

class tubeSegmentUsingOtsuThresholdF4UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF4UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF4UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF4UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdF4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF4UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4UC_swigregister(tubeSegmentUsingOtsuThresholdF4UC)

def tubeSegmentUsingOtsuThresholdF4US_New():
    return tubeSegmentUsingOtsuThresholdF4US.New()

class tubeSegmentUsingOtsuThresholdF4US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdF4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdF4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdF4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdF4US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdF4US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdF4US

        Create a new object of the class tubeSegmentUsingOtsuThresholdF4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdF4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdF4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdF4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdF4US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdF4US_swigregister(tubeSegmentUsingOtsuThresholdF4US)

def tubeSegmentUsingOtsuThresholdSS2SS_New():
    return tubeSegmentUsingOtsuThresholdSS2SS.New()

class tubeSegmentUsingOtsuThresholdSS2SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS2SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS2SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS2SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS2SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2SS_swigregister(tubeSegmentUsingOtsuThresholdSS2SS)

def tubeSegmentUsingOtsuThresholdSS2UC_New():
    return tubeSegmentUsingOtsuThresholdSS2UC.New()

class tubeSegmentUsingOtsuThresholdSS2UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS2UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS2UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS2UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS2UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2UC_swigregister(tubeSegmentUsingOtsuThresholdSS2UC)

def tubeSegmentUsingOtsuThresholdSS2US_New():
    return tubeSegmentUsingOtsuThresholdSS2US.New()

class tubeSegmentUsingOtsuThresholdSS2US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS2US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS2US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS2US

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS2US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS2US_swigregister(tubeSegmentUsingOtsuThresholdSS2US)

def tubeSegmentUsingOtsuThresholdSS3SS_New():
    return tubeSegmentUsingOtsuThresholdSS3SS.New()

class tubeSegmentUsingOtsuThresholdSS3SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS3SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS3SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS3SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS3SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3SS_swigregister(tubeSegmentUsingOtsuThresholdSS3SS)

def tubeSegmentUsingOtsuThresholdSS3UC_New():
    return tubeSegmentUsingOtsuThresholdSS3UC.New()

class tubeSegmentUsingOtsuThresholdSS3UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS3UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS3UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS3UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS3UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3UC_swigregister(tubeSegmentUsingOtsuThresholdSS3UC)

def tubeSegmentUsingOtsuThresholdSS3US_New():
    return tubeSegmentUsingOtsuThresholdSS3US.New()

class tubeSegmentUsingOtsuThresholdSS3US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS3US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS3US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS3US

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS3US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS3US_swigregister(tubeSegmentUsingOtsuThresholdSS3US)

def tubeSegmentUsingOtsuThresholdSS4SS_New():
    return tubeSegmentUsingOtsuThresholdSS4SS.New()

class tubeSegmentUsingOtsuThresholdSS4SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS4SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS4SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS4SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS4SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4SS_swigregister(tubeSegmentUsingOtsuThresholdSS4SS)

def tubeSegmentUsingOtsuThresholdSS4UC_New():
    return tubeSegmentUsingOtsuThresholdSS4UC.New()

class tubeSegmentUsingOtsuThresholdSS4UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS4UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS4UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS4UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS4UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4UC_swigregister(tubeSegmentUsingOtsuThresholdSS4UC)

def tubeSegmentUsingOtsuThresholdSS4US_New():
    return tubeSegmentUsingOtsuThresholdSS4US.New()

class tubeSegmentUsingOtsuThresholdSS4US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdSS4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdSS4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdSS4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdSS4US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdSS4US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdSS4US

        Create a new object of the class tubeSegmentUsingOtsuThresholdSS4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdSS4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdSS4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdSS4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdSS4US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdSS4US_swigregister(tubeSegmentUsingOtsuThresholdSS4US)

def tubeSegmentUsingOtsuThresholdUC2SS_New():
    return tubeSegmentUsingOtsuThresholdUC2SS.New()

class tubeSegmentUsingOtsuThresholdUC2SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC2SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC2SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC2SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC2SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2SS_swigregister(tubeSegmentUsingOtsuThresholdUC2SS)

def tubeSegmentUsingOtsuThresholdUC2UC_New():
    return tubeSegmentUsingOtsuThresholdUC2UC.New()

class tubeSegmentUsingOtsuThresholdUC2UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC2UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC2UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC2UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC2UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2UC_swigregister(tubeSegmentUsingOtsuThresholdUC2UC)

def tubeSegmentUsingOtsuThresholdUC2US_New():
    return tubeSegmentUsingOtsuThresholdUC2US.New()

class tubeSegmentUsingOtsuThresholdUC2US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC2US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC2US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC2US

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC2US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC2US_swigregister(tubeSegmentUsingOtsuThresholdUC2US)

def tubeSegmentUsingOtsuThresholdUC3SS_New():
    return tubeSegmentUsingOtsuThresholdUC3SS.New()

class tubeSegmentUsingOtsuThresholdUC3SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC3SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC3SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC3SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC3SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3SS_swigregister(tubeSegmentUsingOtsuThresholdUC3SS)

def tubeSegmentUsingOtsuThresholdUC3UC_New():
    return tubeSegmentUsingOtsuThresholdUC3UC.New()

class tubeSegmentUsingOtsuThresholdUC3UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC3UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC3UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC3UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC3UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3UC_swigregister(tubeSegmentUsingOtsuThresholdUC3UC)

def tubeSegmentUsingOtsuThresholdUC3US_New():
    return tubeSegmentUsingOtsuThresholdUC3US.New()

class tubeSegmentUsingOtsuThresholdUC3US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC3US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC3US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC3US

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC3US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC3US_swigregister(tubeSegmentUsingOtsuThresholdUC3US)

def tubeSegmentUsingOtsuThresholdUC4SS_New():
    return tubeSegmentUsingOtsuThresholdUC4SS.New()

class tubeSegmentUsingOtsuThresholdUC4SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC4SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC4SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC4SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC4SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4SS_swigregister(tubeSegmentUsingOtsuThresholdUC4SS)

def tubeSegmentUsingOtsuThresholdUC4UC_New():
    return tubeSegmentUsingOtsuThresholdUC4UC.New()

class tubeSegmentUsingOtsuThresholdUC4UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC4UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC4UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC4UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC4UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4UC_swigregister(tubeSegmentUsingOtsuThresholdUC4UC)

def tubeSegmentUsingOtsuThresholdUC4US_New():
    return tubeSegmentUsingOtsuThresholdUC4US.New()

class tubeSegmentUsingOtsuThresholdUC4US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUC4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUC4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUC4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned char

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned char"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUC4US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUC4US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUC4US

        Create a new object of the class tubeSegmentUsingOtsuThresholdUC4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUC4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUC4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUC4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUC4US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUC4US_swigregister(tubeSegmentUsingOtsuThresholdUC4US)

def tubeSegmentUsingOtsuThresholdUS2SS_New():
    return tubeSegmentUsingOtsuThresholdUS2SS.New()

class tubeSegmentUsingOtsuThresholdUS2SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS2SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS2SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS2SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS2SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS2SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2SS_swigregister(tubeSegmentUsingOtsuThresholdUS2SS)

def tubeSegmentUsingOtsuThresholdUS2UC_New():
    return tubeSegmentUsingOtsuThresholdUS2UC.New()

class tubeSegmentUsingOtsuThresholdUS2UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS2UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS2UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS2UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS2UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS2UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2UC_swigregister(tubeSegmentUsingOtsuThresholdUS2UC)

def tubeSegmentUsingOtsuThresholdUS2US_New():
    return tubeSegmentUsingOtsuThresholdUS2US.New()

class tubeSegmentUsingOtsuThresholdUS2US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS2US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS2"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS2US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS2US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS2US

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS2US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS2US_swigregister(tubeSegmentUsingOtsuThresholdUS2US)

def tubeSegmentUsingOtsuThresholdUS3SS_New():
    return tubeSegmentUsingOtsuThresholdUS3SS.New()

class tubeSegmentUsingOtsuThresholdUS3SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS3SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS3SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS3SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS3SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS3SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3SS_swigregister(tubeSegmentUsingOtsuThresholdUS3SS)

def tubeSegmentUsingOtsuThresholdUS3UC_New():
    return tubeSegmentUsingOtsuThresholdUS3UC.New()

class tubeSegmentUsingOtsuThresholdUS3UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS3UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS3UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS3UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS3UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS3UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3UC_swigregister(tubeSegmentUsingOtsuThresholdUS3UC)

def tubeSegmentUsingOtsuThresholdUS3US_New():
    return tubeSegmentUsingOtsuThresholdUS3US.New()

class tubeSegmentUsingOtsuThresholdUS3US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS3US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS3"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS3US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS3US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS3US

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS3US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS3US_swigregister(tubeSegmentUsingOtsuThresholdUS3US)

def tubeSegmentUsingOtsuThresholdUS4SS_New():
    return tubeSegmentUsingOtsuThresholdUS4SS.New()

class tubeSegmentUsingOtsuThresholdUS4SS(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS4SS_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS4SS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS4SS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS4SS

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS4SS in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4SS_swigregister(tubeSegmentUsingOtsuThresholdUS4SS)

def tubeSegmentUsingOtsuThresholdUS4UC_New():
    return tubeSegmentUsingOtsuThresholdUS4UC.New()

class tubeSegmentUsingOtsuThresholdUS4UC(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS4UC_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS4UC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS4UC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS4UC

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS4UC in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4UC_swigregister(tubeSegmentUsingOtsuThresholdUS4UC)

def tubeSegmentUsingOtsuThresholdUS4US_New():
    return tubeSegmentUsingOtsuThresholdUS4US.New()

class tubeSegmentUsingOtsuThresholdUS4US(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeSegmentUsingOtsuThresholdUS4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeSegmentUsingOtsuThresholdUS4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeSegmentUsingOtsuThresholdUS4US_Pointer"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_Clone(self)

    def SetMaskImage(self, value):
        r"""
        SetMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_SetMaskImage(self, value)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_GetMaskImage(self)

    def SetMaskValue(self, value):
        r"""
        SetMaskValue(self, value)

        Parameters
        ----------
        value: unsigned short

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_SetMaskValue(self, value)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_GetMaskValue(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_GetInput(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS4"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_GetOutput(self)

    def GetThreshold(self):
        r"""GetThreshold(self) -> unsigned short"""
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_GetThreshold(self)
    __swig_destroy__ = _tubeSegmentUsingOtsuThresholdPython.delete_tubeSegmentUsingOtsuThresholdUS4US

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeSegmentUsingOtsuThresholdUS4US

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeSegmentUsingOtsuThresholdUS4US

        Create a new object of the class tubeSegmentUsingOtsuThresholdUS4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeSegmentUsingOtsuThresholdUS4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeSegmentUsingOtsuThresholdUS4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeSegmentUsingOtsuThresholdUS4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeSegmentUsingOtsuThresholdUS4US in _tubeSegmentUsingOtsuThresholdPython:
_tubeSegmentUsingOtsuThresholdPython.tubeSegmentUsingOtsuThresholdUS4US_swigregister(tubeSegmentUsingOtsuThresholdUS4US)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def segment_using_otsu_threshold(*args,  mask_image: itkt.Image=..., mask_value: int=...,**kwargs):
    """Functional interface for SegmentUsingOtsuThreshold"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'mask_value':mask_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SegmentUsingOtsuThreshold.New(*args, **kwargs)

    return instance.__internal_call__()

def segment_using_otsu_threshold_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TubeTK.SegmentUsingOtsuThreshold
    segment_using_otsu_threshold.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    segment_using_otsu_threshold.__doc__ = filter_object.__doc__



