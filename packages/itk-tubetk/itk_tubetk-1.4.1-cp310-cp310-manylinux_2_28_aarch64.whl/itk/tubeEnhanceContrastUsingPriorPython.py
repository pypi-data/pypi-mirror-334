# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeEnhanceContrastUsingPriorPython
else:
    import _tubeEnhanceContrastUsingPriorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython

def tubeEnhanceContrastUsingPriorD2_New():
    return tubeEnhanceContrastUsingPriorD2.New()

class tubeEnhanceContrastUsingPriorD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorD2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorD2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD2 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageD2 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageD2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageD2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorD2

        Create a new object of the class tubeEnhanceContrastUsingPriorD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorD2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD2_swigregister(tubeEnhanceContrastUsingPriorD2)

def tubeEnhanceContrastUsingPriorD3_New():
    return tubeEnhanceContrastUsingPriorD3.New()

class tubeEnhanceContrastUsingPriorD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorD3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorD3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD3 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageD3 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageD3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageD3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorD3

        Create a new object of the class tubeEnhanceContrastUsingPriorD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorD3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorD3_swigregister(tubeEnhanceContrastUsingPriorD3)

def tubeEnhanceContrastUsingPriorF2_New():
    return tubeEnhanceContrastUsingPriorF2.New()

class tubeEnhanceContrastUsingPriorF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorF2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorF2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF2 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageF2 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageF2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageF2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorF2

        Create a new object of the class tubeEnhanceContrastUsingPriorF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorF2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF2_swigregister(tubeEnhanceContrastUsingPriorF2)

def tubeEnhanceContrastUsingPriorF3_New():
    return tubeEnhanceContrastUsingPriorF3.New()

class tubeEnhanceContrastUsingPriorF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorF3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorF3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF3 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageF3 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageF3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageF3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorF3

        Create a new object of the class tubeEnhanceContrastUsingPriorF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorF3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorF3_swigregister(tubeEnhanceContrastUsingPriorF3)

def tubeEnhanceContrastUsingPriorSS2_New():
    return tubeEnhanceContrastUsingPriorSS2.New()

class tubeEnhanceContrastUsingPriorSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorSS2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorSS2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageSS2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorSS2

        Create a new object of the class tubeEnhanceContrastUsingPriorSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorSS2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS2_swigregister(tubeEnhanceContrastUsingPriorSS2)

def tubeEnhanceContrastUsingPriorSS3_New():
    return tubeEnhanceContrastUsingPriorSS3.New()

class tubeEnhanceContrastUsingPriorSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorSS3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorSS3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageSS3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorSS3

        Create a new object of the class tubeEnhanceContrastUsingPriorSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorSS3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorSS3_swigregister(tubeEnhanceContrastUsingPriorSS3)

def tubeEnhanceContrastUsingPriorUC2_New():
    return tubeEnhanceContrastUsingPriorUC2.New()

class tubeEnhanceContrastUsingPriorUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorUC2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorUC2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageUC2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorUC2

        Create a new object of the class tubeEnhanceContrastUsingPriorUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorUC2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC2_swigregister(tubeEnhanceContrastUsingPriorUC2)

def tubeEnhanceContrastUsingPriorUC3_New():
    return tubeEnhanceContrastUsingPriorUC3.New()

class tubeEnhanceContrastUsingPriorUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorUC3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorUC3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageUC3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorUC3

        Create a new object of the class tubeEnhanceContrastUsingPriorUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorUC3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUC3_swigregister(tubeEnhanceContrastUsingPriorUC3)

def tubeEnhanceContrastUsingPriorUS2_New():
    return tubeEnhanceContrastUsingPriorUS2.New()

class tubeEnhanceContrastUsingPriorUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorUS2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorUS2_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageUS2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS2"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorUS2

        Create a new object of the class tubeEnhanceContrastUsingPriorUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorUS2 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS2_swigregister(tubeEnhanceContrastUsingPriorUS2)

def tubeEnhanceContrastUsingPriorUS3_New():
    return tubeEnhanceContrastUsingPriorUS3.New()

class tubeEnhanceContrastUsingPriorUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeEnhanceContrastUsingPriorUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeEnhanceContrastUsingPriorUS3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeEnhanceContrastUsingPriorUS3_Pointer"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_Clone(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetInput(self, value)

    def SetInputMaskImage(self, value):
        r"""
        SetInputMaskImage(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetInputMaskImage(self, value)

    def GetInputMaskImage(self):
        r"""GetInputMaskImage(self) -> itkImageUS3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetInputMaskImage(self)

    def SetObjectScale(self, value):
        r"""
        SetObjectScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetObjectScale(self, value)

    def GetObjectScale(self):
        r"""GetObjectScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetObjectScale(self)

    def SetBackgroundScale(self, value):
        r"""
        SetBackgroundScale(self, value)

        Parameters
        ----------
        value: float

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetBackgroundScale(self, value)

    def GetBackgroundScale(self):
        r"""GetBackgroundScale(self) -> float"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetBackgroundScale(self)

    def SetMaskObjectValue(self, value):
        r"""
        SetMaskObjectValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetMaskObjectValue(self, value)

    def GetMaskObjectValue(self):
        r"""GetMaskObjectValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetMaskObjectValue(self)

    def SetMaskBackgroundValue(self, value):
        r"""
        SetMaskBackgroundValue(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetMaskBackgroundValue(self, value)

    def GetMaskBackgroundValue(self):
        r"""GetMaskBackgroundValue(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetMaskBackgroundValue(self)

    def SetOptimizationIterations(self, value):
        r"""
        SetOptimizationIterations(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetOptimizationIterations(self, value)

    def GetOptimizationIterations(self):
        r"""GetOptimizationIterations(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetOptimizationIterations(self)

    def SetOptimizationSeed(self, value):
        r"""
        SetOptimizationSeed(self, value)

        Parameters
        ----------
        value: int

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_SetOptimizationSeed(self, value)

    def GetOptimizationSeed(self):
        r"""GetOptimizationSeed(self) -> int"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetOptimizationSeed(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS3"""
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_GetOutput(self)
    __swig_destroy__ = _tubeEnhanceContrastUsingPriorPython.delete_tubeEnhanceContrastUsingPriorUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeEnhanceContrastUsingPriorUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeEnhanceContrastUsingPriorUS3

        Create a new object of the class tubeEnhanceContrastUsingPriorUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeEnhanceContrastUsingPriorUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeEnhanceContrastUsingPriorUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeEnhanceContrastUsingPriorUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeEnhanceContrastUsingPriorUS3 in _tubeEnhanceContrastUsingPriorPython:
_tubeEnhanceContrastUsingPriorPython.tubeEnhanceContrastUsingPriorUS3_swigregister(tubeEnhanceContrastUsingPriorUS3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def enhance_contrast_using_prior(*args,  input_mask_image: itkt.Image=..., object_scale: float=..., background_scale: float=..., mask_object_value: int=..., mask_background_value: int=..., optimization_iterations: int=..., optimization_seed: int=...,**kwargs):
    """Functional interface for EnhanceContrastUsingPrior"""
    import itk

    kwarg_typehints = { 'input_mask_image':input_mask_image,'object_scale':object_scale,'background_scale':background_scale,'mask_object_value':mask_object_value,'mask_background_value':mask_background_value,'optimization_iterations':optimization_iterations,'optimization_seed':optimization_seed }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.EnhanceContrastUsingPrior.New(*args, **kwargs)

    return instance.__internal_call__()

def enhance_contrast_using_prior_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TubeTK.EnhanceContrastUsingPrior
    enhance_contrast_using_prior.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    enhance_contrast_using_prior.__doc__ = filter_object.__doc__



