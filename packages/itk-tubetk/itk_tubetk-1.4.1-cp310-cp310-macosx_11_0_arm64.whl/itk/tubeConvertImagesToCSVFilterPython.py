# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeConvertImagesToCSVFilterPython
else:
    import _tubeConvertImagesToCSVFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkRGBPixelPython
import itk.itkSizePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython

def tubeConvertImagesToCSVID2ISS2_New():
    return tubeConvertImagesToCSVID2ISS2.New()

class tubeConvertImagesToCSVID2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID2ISS2

        Create a new object of the class tubeConvertImagesToCSVID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2ISS2_swigregister(tubeConvertImagesToCSVID2ISS2)

def tubeConvertImagesToCSVID2IUC2_New():
    return tubeConvertImagesToCSVID2IUC2.New()

class tubeConvertImagesToCSVID2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID2IUC2

        Create a new object of the class tubeConvertImagesToCSVID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUC2_swigregister(tubeConvertImagesToCSVID2IUC2)

def tubeConvertImagesToCSVID2IUS2_New():
    return tubeConvertImagesToCSVID2IUS2.New()

class tubeConvertImagesToCSVID2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID2IUS2

        Create a new object of the class tubeConvertImagesToCSVID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID2IUS2_swigregister(tubeConvertImagesToCSVID2IUS2)

def tubeConvertImagesToCSVID3ISS3_New():
    return tubeConvertImagesToCSVID3ISS3.New()

class tubeConvertImagesToCSVID3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID3ISS3

        Create a new object of the class tubeConvertImagesToCSVID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3ISS3_swigregister(tubeConvertImagesToCSVID3ISS3)

def tubeConvertImagesToCSVID3IUC3_New():
    return tubeConvertImagesToCSVID3IUC3.New()

class tubeConvertImagesToCSVID3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID3IUC3

        Create a new object of the class tubeConvertImagesToCSVID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUC3_swigregister(tubeConvertImagesToCSVID3IUC3)

def tubeConvertImagesToCSVID3IUS3_New():
    return tubeConvertImagesToCSVID3IUS3.New()

class tubeConvertImagesToCSVID3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID3IUS3

        Create a new object of the class tubeConvertImagesToCSVID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID3IUS3_swigregister(tubeConvertImagesToCSVID3IUS3)

def tubeConvertImagesToCSVID4ISS4_New():
    return tubeConvertImagesToCSVID4ISS4.New()

class tubeConvertImagesToCSVID4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID4ISS4

        Create a new object of the class tubeConvertImagesToCSVID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID4ISS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4ISS4_swigregister(tubeConvertImagesToCSVID4ISS4)

def tubeConvertImagesToCSVID4IUC4_New():
    return tubeConvertImagesToCSVID4IUC4.New()

class tubeConvertImagesToCSVID4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID4IUC4

        Create a new object of the class tubeConvertImagesToCSVID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID4IUC4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUC4_swigregister(tubeConvertImagesToCSVID4IUC4)

def tubeConvertImagesToCSVID4IUS4_New():
    return tubeConvertImagesToCSVID4IUS4.New()

class tubeConvertImagesToCSVID4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVID4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVID4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixD"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVID4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVID4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVID4IUS4

        Create a new object of the class tubeConvertImagesToCSVID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVID4IUS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVID4IUS4_swigregister(tubeConvertImagesToCSVID4IUS4)

def tubeConvertImagesToCSVIF2ISS2_New():
    return tubeConvertImagesToCSVIF2ISS2.New()

class tubeConvertImagesToCSVIF2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF2ISS2

        Create a new object of the class tubeConvertImagesToCSVIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2ISS2_swigregister(tubeConvertImagesToCSVIF2ISS2)

def tubeConvertImagesToCSVIF2IUC2_New():
    return tubeConvertImagesToCSVIF2IUC2.New()

class tubeConvertImagesToCSVIF2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF2IUC2

        Create a new object of the class tubeConvertImagesToCSVIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUC2_swigregister(tubeConvertImagesToCSVIF2IUC2)

def tubeConvertImagesToCSVIF2IUS2_New():
    return tubeConvertImagesToCSVIF2IUS2.New()

class tubeConvertImagesToCSVIF2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF2IUS2

        Create a new object of the class tubeConvertImagesToCSVIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF2IUS2_swigregister(tubeConvertImagesToCSVIF2IUS2)

def tubeConvertImagesToCSVIF3ISS3_New():
    return tubeConvertImagesToCSVIF3ISS3.New()

class tubeConvertImagesToCSVIF3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF3ISS3

        Create a new object of the class tubeConvertImagesToCSVIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3ISS3_swigregister(tubeConvertImagesToCSVIF3ISS3)

def tubeConvertImagesToCSVIF3IUC3_New():
    return tubeConvertImagesToCSVIF3IUC3.New()

class tubeConvertImagesToCSVIF3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF3IUC3

        Create a new object of the class tubeConvertImagesToCSVIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUC3_swigregister(tubeConvertImagesToCSVIF3IUC3)

def tubeConvertImagesToCSVIF3IUS3_New():
    return tubeConvertImagesToCSVIF3IUS3.New()

class tubeConvertImagesToCSVIF3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF3IUS3

        Create a new object of the class tubeConvertImagesToCSVIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF3IUS3_swigregister(tubeConvertImagesToCSVIF3IUS3)

def tubeConvertImagesToCSVIF4ISS4_New():
    return tubeConvertImagesToCSVIF4ISS4.New()

class tubeConvertImagesToCSVIF4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF4ISS4

        Create a new object of the class tubeConvertImagesToCSVIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF4ISS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4ISS4_swigregister(tubeConvertImagesToCSVIF4ISS4)

def tubeConvertImagesToCSVIF4IUC4_New():
    return tubeConvertImagesToCSVIF4IUC4.New()

class tubeConvertImagesToCSVIF4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF4IUC4

        Create a new object of the class tubeConvertImagesToCSVIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF4IUC4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUC4_swigregister(tubeConvertImagesToCSVIF4IUC4)

def tubeConvertImagesToCSVIF4IUS4_New():
    return tubeConvertImagesToCSVIF4IUS4.New()

class tubeConvertImagesToCSVIF4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIF4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIF4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixF"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIF4IUS4

        Create a new object of the class tubeConvertImagesToCSVIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIF4IUS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIF4IUS4_swigregister(tubeConvertImagesToCSVIF4IUS4)

def tubeConvertImagesToCSVISS2ISS2_New():
    return tubeConvertImagesToCSVISS2ISS2.New()

class tubeConvertImagesToCSVISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS2ISS2

        Create a new object of the class tubeConvertImagesToCSVISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2ISS2_swigregister(tubeConvertImagesToCSVISS2ISS2)

def tubeConvertImagesToCSVISS2IUC2_New():
    return tubeConvertImagesToCSVISS2IUC2.New()

class tubeConvertImagesToCSVISS2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS2IUC2

        Create a new object of the class tubeConvertImagesToCSVISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUC2_swigregister(tubeConvertImagesToCSVISS2IUC2)

def tubeConvertImagesToCSVISS2IUS2_New():
    return tubeConvertImagesToCSVISS2IUS2.New()

class tubeConvertImagesToCSVISS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS2IUS2

        Create a new object of the class tubeConvertImagesToCSVISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS2IUS2_swigregister(tubeConvertImagesToCSVISS2IUS2)

def tubeConvertImagesToCSVISS3ISS3_New():
    return tubeConvertImagesToCSVISS3ISS3.New()

class tubeConvertImagesToCSVISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS3ISS3

        Create a new object of the class tubeConvertImagesToCSVISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3ISS3_swigregister(tubeConvertImagesToCSVISS3ISS3)

def tubeConvertImagesToCSVISS3IUC3_New():
    return tubeConvertImagesToCSVISS3IUC3.New()

class tubeConvertImagesToCSVISS3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS3IUC3

        Create a new object of the class tubeConvertImagesToCSVISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUC3_swigregister(tubeConvertImagesToCSVISS3IUC3)

def tubeConvertImagesToCSVISS3IUS3_New():
    return tubeConvertImagesToCSVISS3IUS3.New()

class tubeConvertImagesToCSVISS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS3IUS3

        Create a new object of the class tubeConvertImagesToCSVISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS3IUS3_swigregister(tubeConvertImagesToCSVISS3IUS3)

def tubeConvertImagesToCSVISS4ISS4_New():
    return tubeConvertImagesToCSVISS4ISS4.New()

class tubeConvertImagesToCSVISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS4ISS4

        Create a new object of the class tubeConvertImagesToCSVISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS4ISS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4ISS4_swigregister(tubeConvertImagesToCSVISS4ISS4)

def tubeConvertImagesToCSVISS4IUC4_New():
    return tubeConvertImagesToCSVISS4IUC4.New()

class tubeConvertImagesToCSVISS4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS4IUC4

        Create a new object of the class tubeConvertImagesToCSVISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS4IUC4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUC4_swigregister(tubeConvertImagesToCSVISS4IUC4)

def tubeConvertImagesToCSVISS4IUS4_New():
    return tubeConvertImagesToCSVISS4IUS4.New()

class tubeConvertImagesToCSVISS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVISS4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVISS4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixSS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVISS4IUS4

        Create a new object of the class tubeConvertImagesToCSVISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVISS4IUS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVISS4IUS4_swigregister(tubeConvertImagesToCSVISS4IUS4)

def tubeConvertImagesToCSVIUC2ISS2_New():
    return tubeConvertImagesToCSVIUC2ISS2.New()

class tubeConvertImagesToCSVIUC2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC2ISS2

        Create a new object of the class tubeConvertImagesToCSVIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2ISS2_swigregister(tubeConvertImagesToCSVIUC2ISS2)

def tubeConvertImagesToCSVIUC2IUC2_New():
    return tubeConvertImagesToCSVIUC2IUC2.New()

class tubeConvertImagesToCSVIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC2IUC2

        Create a new object of the class tubeConvertImagesToCSVIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUC2_swigregister(tubeConvertImagesToCSVIUC2IUC2)

def tubeConvertImagesToCSVIUC2IUS2_New():
    return tubeConvertImagesToCSVIUC2IUS2.New()

class tubeConvertImagesToCSVIUC2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC2IUS2

        Create a new object of the class tubeConvertImagesToCSVIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC2IUS2_swigregister(tubeConvertImagesToCSVIUC2IUS2)

def tubeConvertImagesToCSVIUC3ISS3_New():
    return tubeConvertImagesToCSVIUC3ISS3.New()

class tubeConvertImagesToCSVIUC3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC3ISS3

        Create a new object of the class tubeConvertImagesToCSVIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3ISS3_swigregister(tubeConvertImagesToCSVIUC3ISS3)

def tubeConvertImagesToCSVIUC3IUC3_New():
    return tubeConvertImagesToCSVIUC3IUC3.New()

class tubeConvertImagesToCSVIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC3IUC3

        Create a new object of the class tubeConvertImagesToCSVIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUC3_swigregister(tubeConvertImagesToCSVIUC3IUC3)

def tubeConvertImagesToCSVIUC3IUS3_New():
    return tubeConvertImagesToCSVIUC3IUS3.New()

class tubeConvertImagesToCSVIUC3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC3IUS3

        Create a new object of the class tubeConvertImagesToCSVIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC3IUS3_swigregister(tubeConvertImagesToCSVIUC3IUS3)

def tubeConvertImagesToCSVIUC4ISS4_New():
    return tubeConvertImagesToCSVIUC4ISS4.New()

class tubeConvertImagesToCSVIUC4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC4ISS4

        Create a new object of the class tubeConvertImagesToCSVIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC4ISS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4ISS4_swigregister(tubeConvertImagesToCSVIUC4ISS4)

def tubeConvertImagesToCSVIUC4IUC4_New():
    return tubeConvertImagesToCSVIUC4IUC4.New()

class tubeConvertImagesToCSVIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC4IUC4

        Create a new object of the class tubeConvertImagesToCSVIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC4IUC4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUC4_swigregister(tubeConvertImagesToCSVIUC4IUC4)

def tubeConvertImagesToCSVIUC4IUS4_New():
    return tubeConvertImagesToCSVIUC4IUS4.New()

class tubeConvertImagesToCSVIUC4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUC4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUC4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUC"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUC4IUS4

        Create a new object of the class tubeConvertImagesToCSVIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUC4IUS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUC4IUS4_swigregister(tubeConvertImagesToCSVIUC4IUS4)

def tubeConvertImagesToCSVIUS2ISS2_New():
    return tubeConvertImagesToCSVIUS2ISS2.New()

class tubeConvertImagesToCSVIUS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS2ISS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS2ISS2

        Create a new object of the class tubeConvertImagesToCSVIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS2ISS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2ISS2_swigregister(tubeConvertImagesToCSVIUS2ISS2)

def tubeConvertImagesToCSVIUS2IUC2_New():
    return tubeConvertImagesToCSVIUS2IUC2.New()

class tubeConvertImagesToCSVIUS2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS2IUC2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS2IUC2

        Create a new object of the class tubeConvertImagesToCSVIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS2IUC2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUC2_swigregister(tubeConvertImagesToCSVIUS2IUC2)

def tubeConvertImagesToCSVIUS2IUS2_New():
    return tubeConvertImagesToCSVIUS2IUS2.New()

class tubeConvertImagesToCSVIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS2IUS2_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS2 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS2IUS2

        Create a new object of the class tubeConvertImagesToCSVIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS2IUS2 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS2IUS2_swigregister(tubeConvertImagesToCSVIUS2IUS2)

def tubeConvertImagesToCSVIUS3ISS3_New():
    return tubeConvertImagesToCSVIUS3ISS3.New()

class tubeConvertImagesToCSVIUS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS3ISS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS3ISS3

        Create a new object of the class tubeConvertImagesToCSVIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS3ISS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3ISS3_swigregister(tubeConvertImagesToCSVIUS3ISS3)

def tubeConvertImagesToCSVIUS3IUC3_New():
    return tubeConvertImagesToCSVIUS3IUC3.New()

class tubeConvertImagesToCSVIUS3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS3IUC3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS3IUC3

        Create a new object of the class tubeConvertImagesToCSVIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS3IUC3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUC3_swigregister(tubeConvertImagesToCSVIUS3IUC3)

def tubeConvertImagesToCSVIUS3IUS3_New():
    return tubeConvertImagesToCSVIUS3IUS3.New()

class tubeConvertImagesToCSVIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS3IUS3_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS3 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS3IUS3

        Create a new object of the class tubeConvertImagesToCSVIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS3IUS3 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS3IUS3_swigregister(tubeConvertImagesToCSVIUS3IUS3)

def tubeConvertImagesToCSVIUS4ISS4_New():
    return tubeConvertImagesToCSVIUS4ISS4.New()

class tubeConvertImagesToCSVIUS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS4ISS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageSS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageSS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS4ISS4

        Create a new object of the class tubeConvertImagesToCSVIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS4ISS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4ISS4_swigregister(tubeConvertImagesToCSVIUS4ISS4)

def tubeConvertImagesToCSVIUS4IUC4_New():
    return tubeConvertImagesToCSVIUS4IUC4.New()

class tubeConvertImagesToCSVIUS4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS4IUC4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUC4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUC4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS4IUC4

        Create a new object of the class tubeConvertImagesToCSVIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS4IUC4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUC4_swigregister(tubeConvertImagesToCSVIUS4IUC4)

def tubeConvertImagesToCSVIUS4IUS4_New():
    return tubeConvertImagesToCSVIUS4IUS4.New()

class tubeConvertImagesToCSVIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeConvertImagesToCSVIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeConvertImagesToCSVIUS4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeConvertImagesToCSVIUS4IUS4_Pointer"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_Clone(self)

    def SetInputMask(self, value):
        r"""
        SetInputMask(self, value)

        Parameters
        ----------
        value: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_SetInputMask(self, value)

    def GetInputMask(self):
        r"""GetInputMask(self) -> itkImageUS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_GetInputMask(self)

    def GetOutput(self):
        r"""GetOutput(self) -> vnl_matrixUS"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_GetOutput(self)

    def GetStride(self):
        r"""GetStride(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_GetStride(self)

    def SetStride(self, value):
        r"""
        SetStride(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_SetStride(self, value)

    def SetNumImages(self, value):
        r"""
        SetNumImages(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_SetNumImages(self, value)

    def GetNumImages(self):
        r"""GetNumImages(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_GetNumImages(self)

    def SetNumberRows(self, value):
        r"""
        SetNumberRows(self, value)

        Parameters
        ----------
        value: unsigned int

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_SetNumberRows(self, value)

    def GetNumberRows(self):
        r"""GetNumberRows(self) -> unsigned int"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_GetNumberRows(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_GetInput(self)

    def AddImage(self, arg0):
        r"""
        AddImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS4 *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_AddImage(self, arg0)
    __swig_destroy__ = _tubeConvertImagesToCSVFilterPython.delete_tubeConvertImagesToCSVIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeConvertImagesToCSVIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeConvertImagesToCSVIUS4IUS4

        Create a new object of the class tubeConvertImagesToCSVIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeConvertImagesToCSVIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeConvertImagesToCSVIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeConvertImagesToCSVIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeConvertImagesToCSVIUS4IUS4 in _tubeConvertImagesToCSVFilterPython:
_tubeConvertImagesToCSVFilterPython.tubeConvertImagesToCSVIUS4IUS4_swigregister(tubeConvertImagesToCSVIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def convert_images_to_csv(*args,  input_mask: itkt.Image=..., stride: int=..., num_images: int=..., number_rows: int=...,**kwargs):
    """Functional interface for ConvertImagesToCSV"""
    import itk

    kwarg_typehints = { 'input_mask':input_mask,'stride':stride,'num_images':num_images,'number_rows':number_rows }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ConvertImagesToCSV.New(*args, **kwargs)

    return instance.__internal_call__()

def convert_images_to_csv_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TubeTK.ConvertImagesToCSV
    convert_images_to_csv.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    convert_images_to_csv.__doc__ = filter_object.__doc__



