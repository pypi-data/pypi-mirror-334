# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _TubeTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tubeShrinkImageWithBlendingPython
else:
    import _tubeShrinkImageWithBlendingPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython

def tubeShrinkImageWithBlendingID2ID2_New():
    return tubeShrinkImageWithBlendingID2ID2.New()

class tubeShrinkImageWithBlendingID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingID2ID2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingID2ID2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD2 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF22 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageD2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingID2ID2

        Create a new object of the class tubeShrinkImageWithBlendingID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingID2ID2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID2ID2_swigregister(tubeShrinkImageWithBlendingID2ID2)

def tubeShrinkImageWithBlendingID3ID3_New():
    return tubeShrinkImageWithBlendingID3ID3.New()

class tubeShrinkImageWithBlendingID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingID3ID3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingID3ID3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD3 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF33 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageD3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingID3ID3

        Create a new object of the class tubeShrinkImageWithBlendingID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingID3ID3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID3ID3_swigregister(tubeShrinkImageWithBlendingID3ID3)

def tubeShrinkImageWithBlendingID4ID4_New():
    return tubeShrinkImageWithBlendingID4ID4.New()

class tubeShrinkImageWithBlendingID4ID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingID4ID4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingID4ID4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageD4 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF44 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageD4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingID4ID4

        Create a new object of the class tubeShrinkImageWithBlendingID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingID4ID4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingID4ID4_swigregister(tubeShrinkImageWithBlendingID4ID4)

def tubeShrinkImageWithBlendingIF2IF2_New():
    return tubeShrinkImageWithBlendingIF2IF2.New()

class tubeShrinkImageWithBlendingIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIF2IF2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIF2IF2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF2 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF22 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageF2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIF2IF2

        Create a new object of the class tubeShrinkImageWithBlendingIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIF2IF2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF2IF2_swigregister(tubeShrinkImageWithBlendingIF2IF2)

def tubeShrinkImageWithBlendingIF3IF3_New():
    return tubeShrinkImageWithBlendingIF3IF3.New()

class tubeShrinkImageWithBlendingIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIF3IF3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIF3IF3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF3 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF33 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageF3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIF3IF3

        Create a new object of the class tubeShrinkImageWithBlendingIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIF3IF3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF3IF3_swigregister(tubeShrinkImageWithBlendingIF3IF3)

def tubeShrinkImageWithBlendingIF4IF4_New():
    return tubeShrinkImageWithBlendingIF4IF4.New()

class tubeShrinkImageWithBlendingIF4IF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIF4IF4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIF4IF4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageF4 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF44 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageF4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIF4IF4

        Create a new object of the class tubeShrinkImageWithBlendingIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIF4IF4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIF4IF4_swigregister(tubeShrinkImageWithBlendingIF4IF4)

def tubeShrinkImageWithBlendingISS2ISS2_New():
    return tubeShrinkImageWithBlendingISS2ISS2.New()

class tubeShrinkImageWithBlendingISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingISS2ISS2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingISS2ISS2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS2 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF22 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingISS2ISS2

        Create a new object of the class tubeShrinkImageWithBlendingISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingISS2ISS2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS2ISS2_swigregister(tubeShrinkImageWithBlendingISS2ISS2)

def tubeShrinkImageWithBlendingISS3ISS3_New():
    return tubeShrinkImageWithBlendingISS3ISS3.New()

class tubeShrinkImageWithBlendingISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingISS3ISS3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingISS3ISS3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS3 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF33 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingISS3ISS3

        Create a new object of the class tubeShrinkImageWithBlendingISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingISS3ISS3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS3ISS3_swigregister(tubeShrinkImageWithBlendingISS3ISS3)

def tubeShrinkImageWithBlendingISS4ISS4_New():
    return tubeShrinkImageWithBlendingISS4ISS4.New()

class tubeShrinkImageWithBlendingISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingISS4ISS4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingISS4ISS4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageSS4 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF44 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageSS4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingISS4ISS4

        Create a new object of the class tubeShrinkImageWithBlendingISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingISS4ISS4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingISS4ISS4_swigregister(tubeShrinkImageWithBlendingISS4ISS4)

def tubeShrinkImageWithBlendingIUC2IUC2_New():
    return tubeShrinkImageWithBlendingIUC2IUC2.New()

class tubeShrinkImageWithBlendingIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIUC2IUC2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIUC2IUC2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC2 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF22 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUC2IUC2

        Create a new object of the class tubeShrinkImageWithBlendingIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUC2IUC2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC2IUC2_swigregister(tubeShrinkImageWithBlendingIUC2IUC2)

def tubeShrinkImageWithBlendingIUC3IUC3_New():
    return tubeShrinkImageWithBlendingIUC3IUC3.New()

class tubeShrinkImageWithBlendingIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIUC3IUC3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIUC3IUC3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC3 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF33 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUC3IUC3

        Create a new object of the class tubeShrinkImageWithBlendingIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUC3IUC3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC3IUC3_swigregister(tubeShrinkImageWithBlendingIUC3IUC3)

def tubeShrinkImageWithBlendingIUC4IUC4_New():
    return tubeShrinkImageWithBlendingIUC4IUC4.New()

class tubeShrinkImageWithBlendingIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIUC4IUC4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIUC4IUC4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUC4 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF44 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUC4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUC4IUC4

        Create a new object of the class tubeShrinkImageWithBlendingIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUC4IUC4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUC4IUC4_swigregister(tubeShrinkImageWithBlendingIUC4IUC4)

def tubeShrinkImageWithBlendingIUS2IUS2_New():
    return tubeShrinkImageWithBlendingIUS2IUS2.New()

class tubeShrinkImageWithBlendingIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIUS2IUS2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIUS2IUS2_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex2

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS2 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF22 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS2"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF22"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUS2IUS2

        Create a new object of the class tubeShrinkImageWithBlendingIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUS2IUS2 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS2IUS2_swigregister(tubeShrinkImageWithBlendingIUS2IUS2)

def tubeShrinkImageWithBlendingIUS3IUS3_New():
    return tubeShrinkImageWithBlendingIUS3IUS3.New()

class tubeShrinkImageWithBlendingIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIUS3IUS3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIUS3IUS3_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex3

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS3 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF33 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS3"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF33"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUS3IUS3

        Create a new object of the class tubeShrinkImageWithBlendingIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUS3IUS3 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS3IUS3_swigregister(tubeShrinkImageWithBlendingIUS3IUS3)

def tubeShrinkImageWithBlendingIUS4IUS4_New():
    return tubeShrinkImageWithBlendingIUS4IUS4.New()

class tubeShrinkImageWithBlendingIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ tubeShrinkImageWithBlendingIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> tubeShrinkImageWithBlendingIUS4IUS4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> tubeShrinkImageWithBlendingIUS4IUS4_Pointer"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_Clone(self)

    def SetShrinkFactors(self, value):
        r"""
        SetShrinkFactors(self, value)

        Parameters
        ----------
        value: itkFixedArrayUI4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetShrinkFactors(self, value)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactor(self, i):
        r"""
        GetShrinkFactor(self, i) -> unsigned int

        Parameters
        ----------
        i: unsigned int

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetShrinkFactor(self, i)

    def SetNewSize(self, value):
        r"""
        SetNewSize(self, value)

        Parameters
        ----------
        value: itkSize4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetNewSize(self, value)

    def GetNewSize(self):
        r"""GetNewSize(self) -> itkSize4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetNewSize(self)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetShrinkFactors(self)

    def SetOverlap(self, value):
        r"""
        SetOverlap(self, value)

        Parameters
        ----------
        value: itkIndex4

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetOverlap(self, value)

    def GetOverlap(self):
        r"""GetOverlap(self) -> itkIndex4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetOverlap(self)

    def SetBlendWithMean(self, value):
        r"""
        SetBlendWithMean(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetBlendWithMean(self, value)

    def GetBlendWithMean(self):
        r"""GetBlendWithMean(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetBlendWithMean(self)

    def SetBlendWithMax(self, value):
        r"""
        SetBlendWithMax(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetBlendWithMax(self, value)

    def GetBlendWithMax(self):
        r"""GetBlendWithMax(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetBlendWithMax(self)

    def SetBlendWithGaussianWeighting(self, value):
        r"""
        SetBlendWithGaussianWeighting(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetBlendWithGaussianWeighting(self, value)

    def GetBlendWithGaussianWeighting(self):
        r"""GetBlendWithGaussianWeighting(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetBlendWithGaussianWeighting(self)

    def SetUseLog(self, value):
        r"""
        SetUseLog(self, value)

        Parameters
        ----------
        value: bool

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetUseLog(self, value)

    def GetUseLog(self):
        r"""GetUseLog(self) -> bool"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetUseLog(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GenerateInputRequestedRegion(self)

    def SetInput(self, value):
        r"""
        SetInput(self, value)

        Parameters
        ----------
        value: itkImageUS4 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetInput(self, value)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetInput(self)

    def SetInputMipPointImage(self, value):
        r"""
        SetInputMipPointImage(self, value)

        Parameters
        ----------
        value: itkImageVF44 const *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_SetInputMipPointImage(self, value)

    def GetInputMipPointImage(self):
        r"""GetInputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetInputMipPointImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkImageUS4"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetOutput(self)

    def GetOutputMipPointImage(self):
        r"""GetOutputMipPointImage(self) -> itkImageVF44"""
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_GetOutputMipPointImage(self)
    __swig_destroy__ = _tubeShrinkImageWithBlendingPython.delete_tubeShrinkImageWithBlendingIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> tubeShrinkImageWithBlendingIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> tubeShrinkImageWithBlendingIUS4IUS4

        Create a new object of the class tubeShrinkImageWithBlendingIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          tubeShrinkImageWithBlendingIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = tubeShrinkImageWithBlendingIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = tubeShrinkImageWithBlendingIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register tubeShrinkImageWithBlendingIUS4IUS4 in _tubeShrinkImageWithBlendingPython:
_tubeShrinkImageWithBlendingPython.tubeShrinkImageWithBlendingIUS4IUS4_swigregister(tubeShrinkImageWithBlendingIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def shrink_image_with_blending(*args,  shrink_factors: Sequence[int]=..., shrink_factor: int=..., new_size: Sequence[int]=..., overlap: Sequence[int]=..., blend_with_mean: bool=..., blend_with_max: bool=..., blend_with_gaussian_weighting: bool=..., use_log: bool=..., input_mip_point_image: itkt.Image=...,**kwargs):
    """Functional interface for ShrinkImageWithBlending"""
    import itk

    kwarg_typehints = { 'shrink_factors':shrink_factors,'shrink_factor':shrink_factor,'new_size':new_size,'overlap':overlap,'blend_with_mean':blend_with_mean,'blend_with_max':blend_with_max,'blend_with_gaussian_weighting':blend_with_gaussian_weighting,'use_log':use_log,'input_mip_point_image':input_mip_point_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ShrinkImageWithBlending.New(*args, **kwargs)

    return instance.__internal_call__()

def shrink_image_with_blending_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.TubeTK.ShrinkImageWithBlending
    shrink_image_with_blending.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    shrink_image_with_blending.__doc__ = filter_object.__doc__



