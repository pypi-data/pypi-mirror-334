name: Test & Lint for PR

on:
  pull_request:
    types: [opened, synchronize]
    branches: [ "main" ]

jobs:
  test_pr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.12"]  # Test with one older and one newer Python version
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build pytest pytest-cov

      - name: Build source distribution
        run: |
          python -m build --sdist --outdir dist/
          echo "Built source distribution:"
          ls -la dist/

      - name: Install sdist with dependencies
        run: |
          python -m pip install dist/*.tar.gz
          
          # Verify package is installed correctly
          python -c "import zpickle; print(f'Installed zpickle version: {zpickle.__version__}')"

      - name: Run tests against installed package
        run: |
          # Move to a different directory to ensure we're testing the installed package
          mkdir -p test_dir
          cp -r tests/ test_dir/
          cd test_dir
          
          # Run tests with coverage
          python -m pytest --cov=zpickle tests/

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 black isort mypy

      - name: Run linters
        run: |
          # Check code formatting
          black --check zpickle tests
          
          # Check import sorting
          isort --check zpickle tests
          
          # Run static analysis
          flake8 zpickle tests
          
          # Run type checking (if you use type annotations)
          # mypy zpickle