[tool.coverage.run]
branch = true
source = ['tinyDisplay']
omit = ['setup.py', 'docs/*', '.tox/*']

[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
known_first_party = 'tinyDisplay'
known_third_party = ["PIL", "flask", "tinyDisplay", "pytest", "simple_pid", "yaml"]
multi_line_output = 3
lines_after_imports = 2
force_grid_wrap = 0
combine_as_imports = true
include_trailing_comma = true

[tool.poetry]
name = "tinyDisplay"
version = "0.1.3"
description = "A widget library and window manager for small displays"
authors = ["dhrone <dhrone@dhrone.xyz>"]
packages = [{include = "tinyDisplay"}]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/dhrone/tinyDisplay"
repository = "https://github.com/dhrone/tinydDisplay"
keywords = ["tinyDisplay", "luma.oled", "luma.lcd", "display", "hd44780", "ssd1306", "winstar"]
classifiers = [
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",    
]

[tool.poetry.dependencies]
python = ">=3.9, <4.0"
pyyaml = "^6.0.1"
simple-pid = "^0.2.4"
requests = "^2.25.1"
pillow = "^10.3.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
pre-commit = "^3.7.1"
flask = "^3.0.3"
black = "^24.4.2"
flake8 = "^7.0.0"
isort = "^5.13.2"


[tool.poetry.group.doc.dependencies]
darglint = "^1.8.1"
rstcheck = "^6.2.1"

[tool.pytest.ini_options]
minversion = 6.0
addopts = "-ra -v --cov=tinyDisplay --cov-report term --cov-report html"
testpaths = [
  "tests"
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py{39},qa

[testenv]
whitelist_externals = poetry
commands =
    poetry install -vvv
    poetry run pytest

[testenv:doc]
commands =
  sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir/html}
  poetry run
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
