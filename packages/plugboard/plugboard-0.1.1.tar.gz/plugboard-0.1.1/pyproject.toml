[project]
name = "plugboard"
version = "0.1.1"
description = "Plugboard is an event driven modelling and orchestration framework for simulating and driving complex processes with many interconnected stateful components."
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "Chris Knight", email = "plugboard@csknight.uk"},
    {name = "Toby Coleman", email = "plugboard@tobycoleman.com"}
]
requires-python = ">=3.12,<4.0"
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
]
dependencies = [
    "aiosqlite~=0.20",
    "annotated-types~=0.7",
    "async-lru~=2.0",
    "fsspec>=2024.9.0",
    "msgspec[yaml]~=0.18",
    "pandas>=1.0,<3",
    "pyarrow~=17.0",
    "pydantic~=2.8",
    "pydantic-settings>=2.7.1",
    "pyzmq~=26.2",
    "rich~=13.9",
    "sqlalchemy[asyncio]~=2.0",
    "structlog>=25.1.0",
    "that-depends>2.1.0",
    "typer~=0.12",
]

[project.optional-dependencies]
aws = ["s3fs>=2024.9.0"]
azure = ["adlfs>=2024.7.0"]
gcp = ["gcsfs>=2024.9.0.post1"]
ray = ["ray>=2.42.1"]
llm = ["llama-index>=0.12.11"]
websockets = ["websockets>=14.2"]

[dependency-groups]
dev = [
    "ipython~=8.26",
    "jupyterlab~=4.2",
    "mypy~=1.11",
    "nbstripout~=0.8",
    "pre-commit~=3.8",
    "radon>=6.0.1",
    "ruff~=0.5",
    "types-aiofiles~=24.1",
    "xenon>=0.9.3",
]
test = [
    "aiofile~=3.9",
    "aiosqlite~=0.20",
    "anyio>=4.3.0,<4.4.0", # FIXME: Pinned due to hanging tests when running with anyio==4.4.0 on 2024-07-01
    "llama-index>=0.12.11",
    "moto[server]~=5.0",
    "openai-responses>=0.11.4",
    "pytest~=8.3",
    "pytest-asyncio~=0.23",
    "pytest-cases~=3.8",
    "pytest-cov>=6.0.0",
    "pytest-env~=1.1",
    "pytest-rerunfailures~=14.0",
    "ray>=2.40.0",
    "s3fs>=2024.9.0",
    "time-machine~=2.15",
    "websockets>=14.2",
]
docs = [
    "mike~=2.1",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-material~=9.5",
    "mkdocstrings[python]~=0.25",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
package = true

[project.scripts]
plugboard = "plugboard.cli:app"

[tool.pytest.ini_options]  # Orchestrates code testing
# Note: pytest toml key subject to change:
# https://docs.pytest.org/en/stable/reference/customize.html#pyproject-toml
# env = []
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]  # Static type checking
exclude = [".git", "__pycache__", ".venv", "venv", "docs", "examples"]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
plugins = "pydantic.mypy"

[tool.ruff]  # Code formatting and linting
line-length = 100
src = ["plugboard", "tests"]
extend-exclude = ["__pycache__"]
output-format = "grouped"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["D", "E", "F", "I", "W", "S"]
ignore = ["D105", "D107", "D401", "E203", "E226", "E24", "E731", "E741", "F541", "F821", "W605"]
exclude = ["examples/*"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true

[tool.ruff.lint.isort]
known-first-party = ["plugboard"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
no-lines-before = ["local-folder"]
force-sort-within-sections = true
combine-as-imports = true
split-on-trailing-comma = true
relative-imports-order = "furthest-to-closest"
lines-after-imports = 2

[tool.radon]
exclude = "tests/*"
cc_min = "C"
mi_min = "B"
