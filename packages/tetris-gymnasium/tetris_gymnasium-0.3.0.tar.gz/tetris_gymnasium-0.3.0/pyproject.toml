[tool.poetry]
name = "tetris-gymnasium"
version = "0.3.0"
description = "A fully configurable Gymnasium compatible Tetris environment"
authors = ["mw <maximilian.weichart@icloud.com>"]
readme = "README.md"
packages = [{include = "tetris_gymnasium"}]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
gymnasium = ">=0.28.1"
numpy = "^1.21.6"
opencv-python = "^4.10.0.84"
jax = "^0.4.34"
chex = "^0.1.87"

[tool.poetry.group.examples]
optional = true

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.examples.dependencies]
torch = "^2.2.1"
typer = "^0.9.0"
stable-baselines3 = "^2.2.1"
tyro = "^0.7.3"
tensorboard = "^2.10.0"
wandb = "^0.17.0"
moviepy = "^1.0.3"
opencv-python = "^4.10.0.84"


[tool.poetry.group.docs.dependencies]
sphinx = "^7"
sphinx-autobuild = "^2024.2.4"
furo = {git = "https://github.com/Max-We/Celshast"}
pydata-sphinx-theme = "^0.15.2"
myst-parser = "^2.0.0"

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
pyright = "^1.1.355"
pydocstyle = "^6.3.0"
pre-commit = "^3.6.2"
pytest = "^8.2.2"

[tool.pyright]
include = ["tetris_gymnasium/**"]
exclude = ["**/node_modules", "**/__pycache__", "examples/**"]
strict = []

typeCheckingMode = "basic"
pythonVersion = "3.8"
pythonPlatform = "All"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame, box2d)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"

# reportUnknownMemberType = "warning"  # -> raises 6035 warnings
# reportUnknownParameterType = "warning"  # -> raises 1327 warnings
# reportUnknownVariableType = "warning"  # -> raises 2585 warnings
# reportUnknownArgumentType = "warning"  # -> raises 2104 warnings
reportGeneralTypeIssues = "none"  # -> commented out raises 489 errors
# reportUntypedFunctionDecorator = "none"  # -> pytest.mark.parameterize issues

reportPrivateUsage = "warning"
reportUnboundVariable = "warning"

reportPrivateImportUsage = "none"  # -> commented out raises 144 errors

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
