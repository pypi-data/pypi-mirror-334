name: Build and Publish to PyPI
on:
  push:
    branches:
      - main
      - master

# write permissions for release-please
# permissions:
#   contents: write
#   pull-requests: write

env:
  # avoid build failures due to flaky pypi
  PIP_DEFAULT_TIMEOUT: 60
  PIP_RETRIES: 5

  DATABASE_HOST: localhost

jobs:
  release-please:
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: python
          # bump-minor-pre-major: true
          token: ${{ secrets.GH_PERSONAL_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: [release-please]
    if: needs.release-please.outputs.release_created
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - run: direnv allow . && direnv export gha >> "$GITHUB_ENV"
      - run: uv build
      - run: uv publish --token ${{ secrets.PYPI_API_TOKEN }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2
      - run: direnv allow . && direnv export gha >> "$GITHUB_ENV"
      - run: docker compose up -d --wait
      - run: uv sync

      # `uv run` prefix is required since the venv is not activated

      - name: Make sure we can import the module
        run: uv run python -c 'import ${{ github.event.repository.name }}'
      - run: uv run pytest
