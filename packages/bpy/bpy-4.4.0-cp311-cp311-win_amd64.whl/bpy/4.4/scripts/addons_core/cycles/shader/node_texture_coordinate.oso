OpenShadingLanguage 1.00
# Compiled by oslc 1.14.4.0dev
# options: -q -O2 -IC:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders -IC:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders -o C:/Users/blender/git/blender-v440/build_release/intern/cycles/kernel/osl/shaders/node_texture_coordinate.oso
shader node_texture_coordinate
param	int	is_background	0		%read{0,0} %write{2147483647,-1}
param	int	is_volume	0		%read{16,16} %write{2147483647,-1}
param	int	from_dupli	0		%read{13,81} %write{2147483647,-1}
param	int	use_transform	0		%read{3,39} %write{2147483647,-1}
param	string	bump_offset	"center"		%read{55,79} %write{2147483647,-1}
param	matrix	object_itfm	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{4,40} %write{2147483647,-1} %derivs
oparam	point	Generated	0 0 0		%read{21,85} %write{1,85} %derivs
oparam	point	UV	0 0 0		%read{62,88} %write{2,88} %derivs
oparam	point	Object	0 0 0		%read{65,91} %write{4,91} %derivs
oparam	point	Camera	0 0 0		%read{68,94} %write{9,94} %derivs
oparam	point	Window	0 0 0		%read{71,97} %write{10,103} %derivs
oparam	normal	Normal	0 0 0		%read{76,101} %write{11,102} %derivs
oparam	point	Reflection	0 0 0		%read{2147483647,-1} %write{12,54}
global	point	P	%read{1,46} %write{2147483647,-1} %derivs
global	vector	I	%read{12,53} %write{2147483647,-1}
global	normal	N	%read{11,52} %write{2147483647,-1} %derivs
global	float	u	%read{36,38} %write{2147483647,-1} %derivs
global	float	v	%read{37,37} %write{2147483647,-1} %derivs
local	point	___366_Pcam	%read{7,7} %write{6,6} %derivs
local	matrix	___371_tfm	%read{21,21} %write{19,19} %derivs
local	float	___372_is_light	%read{33,33} %write{28,28}
const	point	$const1	0 0 0		%read{2,6} %write{2147483647,-1}
const	string	$const2	"camera"		%read{6,44} %write{2147483647,-1}
const	string	$const3	"world"		%read{6,47} %write{2147483647,-1}
temp	point	$tmp2	%read{9,9} %write{7,7} %derivs
const	string	$const4	"transform"		%read{8,45} %write{2147483647,-1}
const	string	$const5	"common"		%read{9,46} %write{2147483647,-1}
temp	int	$tmp3	%read{2147483647,-1} %write{10,10}
const	string	$const6	"NDC"		%read{10,46} %write{2147483647,-1}
temp	int	$tmp4	%read{2147483647,-1} %write{14,14}
const	string	$const7	"geom:dupli_generated"		%read{14,14} %write{2147483647,-1}
temp	int	$tmp5	%read{2147483647,-1} %write{15,15}
const	string	$const8	"geom:dupli_uv"		%read{15,15} %write{2147483647,-1}
const	string	$const9	"object"		%read{18,47} %write{2147483647,-1}
temp	int	$tmp6	%read{20,20} %write{19,19}
const	string	$const10	"geom:generated_transform"		%read{19,19} %write{2147483647,-1}
temp	int	$tmp7	%read{2147483647,-1} %write{22,22}
const	string	$const11	"geom:uv"		%read{22,29} %write{2147483647,-1}
temp	int	$tmp8	%read{24,24} %write{23,23}
const	string	$const12	"geom:generated"		%read{23,23} %write{2147483647,-1}
temp	int	$tmp9	%read{25,25} %write{24,24}
const	int	$const13	0		%read{24,81} %write{2147483647,-1}
temp	int	$tmp10	%read{2147483647,-1} %write{28,28}
const	string	$const14	"object:is_light"		%read{28,28} %write{2147483647,-1}
temp	int	$tmp11	%read{30,30} %write{29,29}
temp	int	$tmp12	%read{31,31} %write{30,30}
temp	int	$tmp13	%read{32,35} %write{31,34}
temp	int	$tmp14	%read{34,34} %write{33,33}
const	float	$const15	0		%read{33,103} %write{2147483647,-1}
const	float	$const16	1		%read{36,36} %write{2147483647,-1}
temp	float	$tmp15	%read{37,37} %write{36,36} %derivs
temp	float	$tmp16	%read{38,38} %write{37,37} %derivs
temp	normal	$tmp17	%read{48,48} %write{47,47} %derivs
temp	vector	$tmp18	%read{54,54} %write{53,53}
const	string	$const17	"reflect"		%read{49,49} %write{2147483647,-1}
const	int	$const18	2		%read{103,103} %write{2147483647,-1}
temp	float	$tmp19	%read{51,51} %write{50,50}
temp	float	$tmp20	%read{52,52} %write{51,51}
const	float	$const19	2		%read{51,51} %write{2147483647,-1}
temp	vector	$tmp21	%read{53,53} %write{52,52}
const	string	$const20	"dx"		%read{55,55} %write{2147483647,-1}
temp	int	$tmp22	%read{56,56} %write{55,55}
temp	int	$tmp23	%read{58,58} %write{57,57}
temp	vector	$tmp24	%read{60,60} %write{59,59} %derivs
const	float	$const21	0.100000001		%read{60,96} %write{2147483647,-1}
temp	vector	$tmp25	%read{61,61} %write{60,60} %derivs
temp	vector	$tmp26	%read{63,63} %write{62,62} %derivs
temp	vector	$tmp27	%read{64,64} %write{63,63} %derivs
temp	vector	$tmp28	%read{66,66} %write{65,65} %derivs
temp	vector	$tmp29	%read{67,67} %write{66,66} %derivs
temp	vector	$tmp30	%read{69,69} %write{68,68} %derivs
temp	vector	$tmp31	%read{70,70} %write{69,69} %derivs
temp	vector	$tmp32	%read{72,72} %write{71,71} %derivs
temp	vector	$tmp33	%read{73,73} %write{72,72} %derivs
temp	int	$tmp34	%read{75,75} %write{74,74}
const	string	$const22	"geom:bump_map_normal"		%read{74,98} %write{2147483647,-1}
temp	vector	$tmp35	%read{77,77} %write{76,76} %derivs
temp	normal	$tmp36	%read{78,78} %write{77,77} %derivs
const	string	$const23	"dy"		%read{79,79} %write{2147483647,-1}
temp	int	$tmp37	%read{80,80} %write{79,79}
temp	int	$tmp38	%read{82,82} %write{81,81}
temp	vector	$tmp39	%read{84,84} %write{83,83} %derivs
temp	vector	$tmp40	%read{85,85} %write{84,84} %derivs
temp	vector	$tmp41	%read{87,87} %write{86,86} %derivs
temp	vector	$tmp42	%read{88,88} %write{87,87} %derivs
temp	vector	$tmp43	%read{90,90} %write{89,89} %derivs
temp	vector	$tmp44	%read{91,91} %write{90,90} %derivs
temp	vector	$tmp45	%read{93,93} %write{92,92} %derivs
temp	vector	$tmp46	%read{94,94} %write{93,93} %derivs
temp	vector	$tmp47	%read{96,96} %write{95,95} %derivs
temp	vector	$tmp48	%read{97,97} %write{96,96} %derivs
temp	int	$tmp49	%read{99,99} %write{98,98}
temp	vector	$tmp50	%read{101,101} %write{100,100} %derivs
temp	normal	$tmp51	%read{102,102} %write{101,101} %derivs
code ___main___
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:23
#   if (is_background) {
	if		is_background 13 55 	%filename{"C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{23} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:24
#     Generated = P;
	assign		Generated P 	%line{24} %argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:25
#     UV = point(0.0, 0.0, 0.0);
	assign		UV $const1 	%line{25} %argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:26
#     if (use_transform) {
	if		use_transform 5 6 	%line{26} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:27
#       Object = transform(object_itfm, P);
	transform	Object object_itfm P 	%line{27} %argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:30
#       Object = P;
	assign		Object P 	%line{30} %argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:32
#     point Pcam = transform("camera", "world", point(0, 0, 0));
	transform	___366_Pcam $const2 $const3 $const1 	%line{32} %argrw{"wrrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:33
#     Camera = transform("camera", P + Pcam);
	add		$tmp2 P ___366_Pcam 	%line{33} %argrw{"wrr"}
	functioncall	$const4 10 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Camera $const5 $const2 $tmp2 	%filename{"C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:34
#     getattribute("NDC", Window);
	getattribute	$tmp3 $const6 Window 	%filename{"C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{34} %argrw{"wrw"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:35
#     Normal = N;
	assign		Normal N 	%line{35} %argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:36
#     Reflection = I;
	assign		Reflection I 	%line{36} %argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:39
#     if (from_dupli) {
	if		from_dupli 16 39 	%line{39} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:40
#       getattribute("geom:dupli_generated", Generated);
	getattribute	$tmp4 $const7 Generated 	%line{40} %argrw{"wrw"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:41
#       getattribute("geom:dupli_uv", UV);
	getattribute	$tmp5 $const8 UV 	%line{41} %argrw{"wrw"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:43
#     else if (is_volume) {
	if		is_volume 23 39 	%line{43} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:44
#       Generated = transform("object", P);
	functioncall	$const4 19 	%line{44} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Generated $const5 $const9 P 	%filename{"C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:47
#       if (getattribute("geom:generated_transform", tfm))
	getattribute	$tmp6 $const10 ___371_tfm 	%filename{"C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{47} %argrw{"wrw"}
	if		$tmp6 22 22 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:48
#         Generated = transform(tfm, Generated);
	transform	Generated ___371_tfm Generated 	%line{48} %argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:50
#       getattribute("geom:uv", UV);
	getattribute	$tmp7 $const11 UV 	%line{50} %argrw{"wrw"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:53
#       if (!getattribute("geom:generated", Generated)) {
	getattribute	$tmp8 $const12 Generated 	%line{53} %argrw{"wrw"}
	eq		$tmp9 $tmp8 $const13 	%argrw{"wrr"}
	if		$tmp9 28 28 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:54
#         Generated = transform("object", P);
	functioncall	$const4 28 	%line{54} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Generated $const5 $const9 P 	%filename{"C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:57
#       getattribute("object:is_light", is_light);
	getattribute	$tmp10 $const14 ___372_is_light 	%filename{"C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{57} %argrw{"wrw"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:58
#       if (!getattribute("geom:uv", UV) && is_light) {
	getattribute	$tmp11 $const11 UV 	%line{58} %argrw{"wrw"}
	eq		$tmp12 $tmp11 $const13 	%argrw{"wrr"}
	neq		$tmp13 $tmp12 $const13 	%argrw{"wrr"}
	if		$tmp13 35 35 	%argrw{"r"}
	neq		$tmp14 ___372_is_light $const15 	%argrw{"wrr"}
	assign		$tmp13 $tmp14 	%argrw{"wr"}
	if		$tmp13 39 39 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:59
#         UV = point(1.0 - u - v, u, 0.0);
	sub		$tmp15 $const16 u 	%line{59} %argrw{"wrr"}
	sub		$tmp16 $tmp15 v 	%argrw{"wrr"}
	point		UV $tmp16 u $const15 	%argrw{"wrrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:63
#     if (use_transform) {
	if		use_transform 41 43 	%line{63} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:64
#       Object = transform(object_itfm, P);
	transform	Object object_itfm P 	%line{64} %argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:67
#       Object = transform("object", P);
	functioncall	$const4 43 	%line{67} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Object $const5 $const9 P 	%filename{"C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:69
#     Camera = transform("camera", P);
	functioncall	$const4 45 	%filename{"C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{69} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Camera $const5 $const2 P 	%filename{"C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:70
#     Window = transform("NDC", P);
	functioncall	$const4 47 	%filename{"C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{70} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Window $const5 $const6 P 	%filename{"C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{263} %argrw{"wrrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:71
#     Normal = normalize(transform("world", "object", N));
	transformn	$tmp17 $const3 $const9 N 	%filename{"C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{71} %argrw{"wrrr"}
	normalize	Normal $tmp17 	%argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:72
#     Reflection = -reflect(I, N);
	functioncall	$const17 54 	%line{72} %argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h:212
# vector reflect (vector I, vector N) { return I - 2*dot(N,I)*N; }
	dot		$tmp19 N I 	%filename{"C:/Users/blender/git/blender-v440/blender.git/lib/windows_x64/osl/share/OSL/shaders/stdosl.h"} %line{212} %argrw{"wrr"}
	mul		$tmp20 $const19 $tmp19 	%argrw{"wrr"}
	mul		$tmp21 $tmp20 N 	%argrw{"wrr"}
	sub		$tmp18 I $tmp21 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:72
#     Reflection = -reflect(I, N);
	neg		Reflection $tmp18 	%filename{"C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl"} %line{72} %argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:75
#   if (bump_offset == "dx") {
	eq		$tmp22 bump_offset $const20 	%line{75} %argrw{"wrr"}
	if		$tmp22 79 103 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:76
#     if (!from_dupli) {
	eq		$tmp23 from_dupli $const13 	%line{76} %argrw{"wrr"}
	if		$tmp23 65 65 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:77
#       Generated += Dx(Generated) * BUMP_DX;
	Dx		$tmp24 Generated 	%line{77} %argrw{"wr"} %argderivs{1}
	mul		$tmp25 $tmp24 $const21 	%argrw{"wrr"}
	add		Generated Generated $tmp25 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:78
#       UV += Dx(UV) * BUMP_DX;
	Dx		$tmp26 UV 	%line{78} %argrw{"wr"} %argderivs{1}
	mul		$tmp27 $tmp26 $const21 	%argrw{"wrr"}
	add		UV UV $tmp27 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:80
#     Object += Dx(Object) * BUMP_DX;
	Dx		$tmp28 Object 	%line{80} %argrw{"wr"} %argderivs{1}
	mul		$tmp29 $tmp28 $const21 	%argrw{"wrr"}
	add		Object Object $tmp29 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:81
#     Camera += Dx(Camera) * BUMP_DX;
	Dx		$tmp30 Camera 	%line{81} %argrw{"wr"} %argderivs{1}
	mul		$tmp31 $tmp30 $const21 	%argrw{"wrr"}
	add		Camera Camera $tmp31 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:82
#     Window += Dx(Window) * BUMP_DX;
	Dx		$tmp32 Window 	%line{82} %argrw{"wr"} %argderivs{1}
	mul		$tmp33 $tmp32 $const21 	%argrw{"wrr"}
	add		Window Window $tmp33 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:83
#     if (getattribute("geom:bump_map_normal", Normal)) {
	getattribute	$tmp34 $const22 Normal 	%line{83} %argrw{"wrw"}
	if		$tmp34 79 79 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:86
#       Normal = normalize(Normal + Dx(Normal));
	Dx		$tmp35 Normal 	%line{86} %argrw{"wr"} %argderivs{1}
	add		$tmp36 Normal $tmp35 	%argrw{"wrr"}
	normalize	Normal $tmp36 	%argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:89
#   else if (bump_offset == "dy") {
	eq		$tmp37 bump_offset $const23 	%line{89} %argrw{"wrr"}
	if		$tmp37 103 103 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:90
#     if (!from_dupli) {
	eq		$tmp38 from_dupli $const13 	%line{90} %argrw{"wrr"}
	if		$tmp38 89 89 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:91
#       Generated += Dy(Generated) * BUMP_DY;
	Dy		$tmp39 Generated 	%line{91} %argrw{"wr"} %argderivs{1}
	mul		$tmp40 $tmp39 $const21 	%argrw{"wrr"}
	add		Generated Generated $tmp40 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:92
#       UV += Dy(UV) * BUMP_DY;
	Dy		$tmp41 UV 	%line{92} %argrw{"wr"} %argderivs{1}
	mul		$tmp42 $tmp41 $const21 	%argrw{"wrr"}
	add		UV UV $tmp42 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:94
#     Object += Dy(Object) * BUMP_DY;
	Dy		$tmp43 Object 	%line{94} %argrw{"wr"} %argderivs{1}
	mul		$tmp44 $tmp43 $const21 	%argrw{"wrr"}
	add		Object Object $tmp44 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:95
#     Camera += Dy(Camera) * BUMP_DY;
	Dy		$tmp45 Camera 	%line{95} %argrw{"wr"} %argderivs{1}
	mul		$tmp46 $tmp45 $const21 	%argrw{"wrr"}
	add		Camera Camera $tmp46 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:96
#     Window += Dy(Window) * BUMP_DY;
	Dy		$tmp47 Window 	%line{96} %argrw{"wr"} %argderivs{1}
	mul		$tmp48 $tmp47 $const21 	%argrw{"wrr"}
	add		Window Window $tmp48 	%argrw{"wrr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:97
#     if (getattribute("geom:bump_map_normal", Normal)) {
	getattribute	$tmp49 $const22 Normal 	%line{97} %argrw{"wrw"}
	if		$tmp49 103 103 	%argrw{"r"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:98
#       Normal = normalize(Normal + Dy(Normal));
	Dy		$tmp50 Normal 	%line{98} %argrw{"wr"} %argderivs{1}
	add		$tmp51 Normal $tmp50 	%argrw{"wrr"}
	normalize	Normal $tmp51 	%argrw{"wr"}
# C:/Users/blender/git/blender-v440/blender.git/intern/cycles/kernel/osl/shaders/node_texture_coordinate.osl:102
#   Window[2] = 0.0;
	compassign	Window $const18 $const15 	%line{102} %argrw{"wrr"}
	end
